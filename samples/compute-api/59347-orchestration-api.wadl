<?xml version="1.0" encoding="utf-8"?>
<!-- (C) 2012-2016 OpenStack Foundation, All Rights Reserved -->
<!-- Useful for describing APIs -->
<wadl:application xmlns="http://docbook.org/ns/docbook"
                  xmlns:wadl="http://wadl.dev.java.net/2009/02"
                  xmlns:rax="http://docs.rackspace.com/api"
                  xmlns:xs="http://www.w3.org/2001/XMLSchema"
                  rax:original-wadl="file:/Users/annegentle/src/api-site/api-ref/src/wadls/orchestration-api/src/v1/orchestration-api.wadl">
   <rax:types>
      <rax:type prefix="" namespace="http://wadl.dev.java.net/2009/02" name="">
         <para/>
      </rax:type>
      <rax:type prefix="csapi"
                namespace="http://docs.openstack.org/orchestration/api/v1.0"
                name="UUID">
         <para/>
      </rax:type>
   </rax:types>
   <rax:responses><!--A list of unique responses in the wadl -->
      <rax:response status="200"
                    prefix=""
                    namespace="http://wadl.dev.java.net/2009/02"
                    name="">
         <para/>
      </rax:response>
   </rax:responses>
   <!--
	    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
	    ! This is a representation of the resources tree           !
	    ! for use in generating a reference directly from the wadl.!
	    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
	  -->
   <rax:resources xmlns="http://wadl.dev.java.net/2009/02">
      <rax:resource rax:id="versions"/>
         
            
            
               
                  The ID of the tenant. A tenant is also known as an account
                  or project.
               
            
            
            <rax:resource rax:id="stacks">
         <rax:resource rax:id="preview"/>
         <rax:resource rax:id="stack_name">
            <rax:resource rax:id="resources"/>
            <rax:resource rax:id="events"/>
            <rax:resource rax:id="stack_id">
               <rax:resource rax:id="update_preview"/>
               <rax:resource rax:id="abandon"/>
               <rax:resource rax:id="snapshots"/>
                        <rax:resource rax:id="snapshot_id_snapshots"/>
                     
                        
                           <rax:resource rax:id="restore"/>
                        
                     <rax:resource rax:id="outputs"/>
                        <rax:resource rax:id="output_key"/>
                     <rax:resource rax:id="actions"/>
               <rax:resource rax:id="events2"/>
               <rax:resource rax:id="resources2">
                  <rax:resource rax:id="resource_name">
                     <rax:resource rax:id="events4"/>
                     <rax:resource rax:id="metadata"/>
                     <rax:resource rax:id="signal"/>
                              <rax:resource rax:id="event_id"/>
                           </rax:resource>
               </rax:resource>
               <rax:resource rax:id="template"/>
            </rax:resource>
         </rax:resource>
      </rax:resource>
            <rax:resource rax:id="validate_template"/>
            <rax:resource rax:id="list_template_versions"/>
            <rax:resource rax:id="resource_types">
         <rax:resource rax:id="resource_schema">
            <rax:resource rax:id="resource_template"/>
         </rax:resource>
      </rax:resource>
            <rax:resource rax:id="build_info"/>
            <rax:resource rax:id="software_configs">
         <rax:resource rax:id="config_id"/>
      </rax:resource>
            <rax:resource rax:id="software_deployments">
         <rax:resource rax:id="deployment_id"/>
                  <rax:resource rax:id="server_id"/>
               </rax:resource>
            <rax:resource rax:id="service_list"/>
         
      </rax:resources>
   <resources xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
              xmlns:xsd="http://www.w3.org/2001/XMLSchema"
              xmlns:db="http://docbook.org/ns/docbook"
              xmlns:common="http://docs.openstack.org/common/api/v1.0"
              xmlns:csapi="http://docs.openstack.org/orchestration/api/v1.0"
              xmlns:xlink="http://www.w3.org/1999/xlink"
              xmlns="http://wadl.dev.java.net/2009/02"
              base="https://heat.example.com/"
              xml:id="orchestration-api-v1.0">
      <resource id="versions" path="/">
         <method name="GET" rax:id="listVersions-heat-v1">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="List versions">
               <para role="shortdesc">
            Lists all Orchestration API versions.
         </para>
            </wadl:doc>
            <response status="200">
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">{
    "versions": [
        {
            "status": "CURRENT",
            "id": "v1.0",
            "links": [
                {
                    "href": "http://23.253.228.211:8000/v1/",
                    "rel": "self"
                }
            ]
        }
    ]
}
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>
         </method>
      </resource>
         
      
      <resource id="stacks" path="/v1/{tenant_id}/stacks">
         <param name="tenant_id" style="template" rax:id="">
            <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>
                  The ID of the tenant. A tenant is also known as an account
                  or project.
               </para>
            </wadl:doc>
            </param>
         <method name="POST" rax:id="stack_create">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Create stack">
               <para role="shortdesc">
            Creates a stack.
         </para>
            </wadl:doc>
            <request>
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">{
    "files": {},
    "disable_rollback": true,
    "parameters": {
        "flavor": "m1.heat"
    },
    "stack_name": "teststack",
    "template": {
        "heat_template_version": "2013-05-23",
        "description": "Simple template to test heat commands",
        "parameters": {
            "flavor": {
                "default": "m1.tiny",
                "type": "string"
            }
        },
        "resources": {
            "hello_world": {
                "type": "OS::Nova::Server",
                "properties": {
                    "key_name": "heat_key",
                    "flavor": {
                        "get_param": "flavor"
                    },
                    "image": "40be8d1a-3eb9-40de-8abd-43237517384f",
                    "user_data": "#!/bin/bash -xv\necho \"hello world\" &amp;gt; /root/hello-world.txt\n"
                }
            }
        }
    },
    "timeout_mins": 60
}
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
                  <param name="stack_name" style="plain" required="true" rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
                  A name for the new stack.
               </para>
                        <para>
                  This value must be unique within a project. The name must
                  start with an ASCII letter and can contain ASCII letters,
                  digits, underscores, periods, and hyphens. Specifically, the
                  name must match the <code>^[a-zA-Z][a-zA-Z0-9_.-]*$</code>
                  regular expression.
               </para>
                        <para>
                  When you delete or abandon a stack, its name might not be
                  available for reuse for an unspecified period of time.
               </para>
                     </wadl:doc>
                  </param>
            
                  <param name="template_url" style="plain" required="false" rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      A URI to the location containing the stack template
      on which to perform the operation.
   </para>
                        <para>
      See the description of the <code>template</code>
      parameter for information about the expected template
      content located at the URI.
   </para>
                        <para>
      This parameter is only required when you omit the
      <code>template</code> parameter. If you specify both parameters,
      this parameter is ignored.
   </para>
                     </wadl:doc>
                  </param>
            
                  <param name="template" style="plain" required="false" rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      The stack template on which to perform the operation.
   </para>
                        <para>
      This parameter is always provided as a <code>string</code> in the JSON
      request body. The content of the string is a JSON- or YAML-formatted
      Orchestration template. For example:
   </para>
                        <programlisting language="json">"template": {
    "heat_template_version": "2013-05-23",
    ...}</programlisting>
                        <para>
      This parameter is required only when you omit the
      <code>template_url</code> parameter. If you specify both parameters,
      this value overrides the <code>template_url</code> parameter value.
   </para>
                     </wadl:doc>
                  </param>
            
                  <param name="files" style="plain" required="false" rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      Supplies the contents of files referenced in the template or the
      environment. Stack templates and resource templates can explicitly
      reference files by using the <code>get_file</code> intrinsic function.
      In addition, the <code>environment</code> parameter can contain implicit
      references to files.
   </para>
                        <para>
      The value is a JSON object, where each key is a relative or absolute URI
      which serves as the name of a file, and the associated value provides
      the contents of the file. The following code shows the general structure
      of this parameter.
   </para>
                        <programlisting language="json">{ ...
    "files": {
        "fileA.yaml": "Contents of the file",
        "file:///usr/fileB.template": "Contents of the file",
        "http://example.com/fileC.template": "Contents of the file"
    }
... 
}</programlisting>
                        <para>
      Additionally, some template authors encode their user data in a local
      file. The Orchestration client examines the template for the
      <code>get_file</code> intrinsic function and adds an entry to the
      <code>files</code> map with the path to the file as the name and the
      file contents as the value. So, a simple example looks like this:
   </para>
                        <programlisting language="json">{
   "files": {
      "myfile": "#!/bin/bash\necho \"Hello world\" &gt; /root/testfile.txt"
   },
   ...,
   "stack_name": "teststack",
   "template": {
      ...,
      "resources": {
         "my_server": {
            "type": "OS::Nova::Server",
            "properties": {
               ...,
               "user_data": {
                  "get_file": "myfile"
               }
            }
         }
      }
   },
   "timeout_mins": 60
}</programlisting>
                        <para>
      Do not use this parameter to provide the content of the template located
      at the <code>template_url</code> address. Instead, use the
      <code>template</code> parameter to supply the template content as part
      of the request.
   </para>
                     </wadl:doc>
                  </param> 
            
                  <param name="parameters" style="plain" required="false" rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      Supplies arguments for parameters defined in the stack
      template.
   </para>
                        <para>
      The value is a JSON object, where each key is the name of a parameter
      defined in the template and the associated value is the argument to use
      for that parameter when instantiating the template. The following code
      shows the general structure of this parameter. In the example,
      <code>a</code> and <code>b</code> would be the names of two parameters
      defined in the template.
   </para>
                        <programlisting language="json">{ ...
    "parameters": {
        "a": "Value",
        "b": "3"
    }
... 
}</programlisting>
                        <para>
      While the service accepts JSON numbers for parameters with the type
      <code>number</code> and JSON objects for parameters with the type
      <code>json</code>, all parameter values are converted to their string
      representation for storage in the created Stack. Clients are
      encouraged to send all parameter values using their string
      representation for consistency between requests and responses from the
      Orchestration service.
   </para>
                        <para>
      A value must be provided for each template parameter which does not
      specify a default value. However, this parameter is not allowed to
      contain JSON properties with names that do not match a parameter
      defined in the template.
   </para>
                        <para>
      The <code>files</code> parameter maps logical file names to file
      contents. Both the <code>get_file</code> intrinsic function and
      provider template functionality use this mapping. When you want to
      use a provider template, for example, the Orchestration service
      adds an entry to the <code>files</code> map by using:
   </para>
                        <itemizedlist>
                           <listitem>
                              <para>
         The URL of the provider template as the name.
      </para>
                           </listitem>
                           <listitem>
                              <para>
         The contents of that file as the value.
      </para>
                           </listitem>
                        </itemizedlist>
                        <para>
      Additionally, some template authors encode their user data in a local
      file. The Orchestration client examines the template for the
      <code>get_file</code> intrinsic function and adds an entry to the
      <code>files</code> map with the path to the file as the name and the
      file contents as the value. So, a simple example looks like this:
   </para>
                        <programlisting language="json">{
   "files": {
      "myfile": "#!/bin/bash\necho \"Hello world\" &gt; /root/testfile.txt"
   },
   ...,
   "stack_name": "teststack",
   "template": {
      ...,
      "resources": {
         "my_server": {
            "type": "OS::Nova::Server",
            "properties": {
               ...,
               "user_data": {
                  "get_file": "myfile"
               }
            }
         }
      }
   },
   "timeout_mins": 60
}</programlisting>
                     </wadl:doc>
                  </param>
            
                  <param name="tags" style="plain" required="false" rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      One or more simple string tags to associate with the stack. To associate
      multiple tags with a stack, separate the tags with commas. For example,
      <code>tag1,tag2</code>.
   </para>
                     </wadl:doc>
                  </param> 
                  <param name="timeout_mins" style="plain" required="false" rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
                  The timeout for stack creation in minutes.
               </para>
                     </wadl:doc>
                  </param>
               </representation>
            </request>
            <response status="201">
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">{
    "stack": {
        "id": "3095aefc-09fb-4bc7-b1f0-f21a304e864c",
        "links": [
            {
                "href": "http://192.168.123.200:8004/v1/eb1c63a4f77141548385f113a28f0f52/stacks/teststack/3095aefc-09fb-4bc7-b1f0-f21a304e864c",
                "rel": "self"
            }
        ]
    }
}
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
                  <param name="stack_name" style="plain" required="true" rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
                  The name of the stack to create.
               </para>
                     </wadl:doc>
                  </param>
                  <param name="template_url" style="plain" required="true" rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
                  The URL of the template.
               </para>
                     </wadl:doc>
                  </param>
                  <param name="template" style="plain" required="true" rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
                  A JSON template.
               </para>
                     </wadl:doc>
                  </param>
            
                  <param name="environment" style="plain" required="false" rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      A JSON environment for the stack.
   </para>
                     </wadl:doc>
                  </param>
                  <param name="files" style="plain" required="false" rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
                  A map of file names to JSON template bodies. File names are
                  provider resource templates, as referenced in the
                  environment.
               </para>
                     </wadl:doc>
                  </param>
            
                  <param name="param_name-n" style="plain" required="false" rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
         User-defined parameter names to pass to the template.
      </para>
                     </wadl:doc>
                  </param> 
            
                  <param name="param_value-n" style="plain" required="false" rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      User-defined parameter values to pass to the template.
   </para>
                     </wadl:doc>
                  </param> 
                  <param name="timeout_mins" style="plain" required="false" rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
                  The timeout for stack creation in minutes.
               </para>
                     </wadl:doc>
                  </param>
                  <param name="disable_rollback"
                         style="plain"
                         required="false"
                         rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
                  Enables or disables deletion of all previously-created stack
                  resources when stack creation fails. Set to
                  <code>True</code> to keep all previously-created stack
                  resources when stack creation fails. Set to
                  <code>False</code> to delete all previously-created stack
                  resources when stack creation fails. Default is
                  <code>True</code>.
               </para>
                     </wadl:doc>
                  </param>
                  <param name="stack_id" style="plain" required="true" rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
                  The system-assigned ID for the stack.
               </para>
                     </wadl:doc>
                  </param>
                  <param name="links" style="plain" required="true" rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
                  A list of URLs for the stack.
               </para>
                     </wadl:doc>
                  </param>
                  <param name="rel" style="plain" required="true" rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
                  A reference to the parent of the stack. If no parent,
                  reference is <code>self</code>.
               </para>
                     </wadl:doc>
                  </param>
               </representation>
            </response>
      
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Bad Request" xml:lang="EN"/>
            </response>
            <response status="401">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                         title="Unauthorized"
                         xml:lang="EN"/>
            </response> 
      
            <response status="409">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Conflict" xml:lang="EN"/>
            </response> 
      
            <response status="500">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                         title="Internal Server Error"
                         xml:lang="EN"/>
            </response>
         </method>
         <method name="POST" rax:id="stack_adopt">
            <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN" title="Adopt stack">
               <para role="shortdesc">
            Creates a stack from existing resources.
         </para>
            </wadl:doc>
            <request>
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">{
    "adopt_stack_data": {
        "action": "CREATE",
        "id": "bxxxxx4-0xx2-4xx1-axx6-exxxxxxxc",
        "name": "teststack",
        "resources": {
            "MyServer": {
                "action": "CREATE",
                "metadata": {},
                "name": "MyServer",
                "resource_data": {},
                "resource_id": "cxxxx3-dxx3-4xx-bxx2-3xxxxxxxxa",
                "status": "COMPLETE",
                "type": "OS::Trove::Instance"
            }
        },
        "status": "COMPLETE",
        "template": {}
    },
    "stack_name": "{stack_name}",
    "template_url": "{template_url}",
    "timeout_mins": "{timeout_mins}"
}
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
                  <param name="stack_name" style="plain" required="true" rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
                  A name for the new stack.
               </para>
                        <para>
                  The value must be unique within a project. The name must
                  start with an ASCII letter and can contain ASCII letters,
                  digits, underscores, periods, and hyphens. Specifically, the
                  name must match the <code>^[a-zA-Z][a-zA-Z0-9_.-]*$</code>
                  regular expression.
               </para>
                        <para>
                  When you delete or abandon a stack, its name might not be
                  available for reuse for an unspecified period of time.
               </para>
                     </wadl:doc>
                  </param>
            
                  <param name="template_url" style="plain" required="false" rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      A URI to the location containing the stack template
      on which to perform the operation.
   </para>
                        <para>
      See the description of the <code>template</code>
      parameter for information about the expected template
      content located at the URI.
   </para>
                        <para>
      This parameter is only required when you omit the
      <code>template</code> parameter. If you specify both parameters,
      this parameter is ignored.
   </para>
                     </wadl:doc>
                  </param>
            
                  <param name="template" style="plain" required="false" rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      The stack template on which to perform the operation.
   </para>
                        <para>
      This parameter is always provided as a <code>string</code> in the JSON
      request body. The content of the string is a JSON- or YAML-formatted
      Orchestration template. For example:
   </para>
                        <programlisting language="json">"template": {
    "heat_template_version": "2013-05-23",
    ...}</programlisting>
                        <para>
      This parameter is required only when you omit the
      <code>template_url</code> parameter. If you specify both parameters,
      this value overrides the <code>template_url</code> parameter value.
   </para>
                     </wadl:doc>
                  </param>
            
                  <param name="environment" style="plain" required="false" rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      A JSON environment for the stack.
   </para>
                     </wadl:doc>
                  </param>
            
                  <param name="files" style="plain" required="false" rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      Supplies the contents of files referenced in the template or the
      environment. Stack templates and resource templates can explicitly
      reference files by using the <code>get_file</code> intrinsic function.
      In addition, the <code>environment</code> parameter can contain implicit
      references to files.
   </para>
                        <para>
      The value is a JSON object, where each key is a relative or absolute URI
      which serves as the name of a file, and the associated value provides
      the contents of the file. The following code shows the general structure
      of this parameter.
   </para>
                        <programlisting language="json">{ ...
    "files": {
        "fileA.yaml": "Contents of the file",
        "file:///usr/fileB.template": "Contents of the file",
        "http://example.com/fileC.template": "Contents of the file"
    }
... 
}</programlisting>
                        <para>
      Additionally, some template authors encode their user data in a local
      file. The Orchestration client examines the template for the
      <code>get_file</code> intrinsic function and adds an entry to the
      <code>files</code> map with the path to the file as the name and the
      file contents as the value. So, a simple example looks like this:
   </para>
                        <programlisting language="json">{
   "files": {
      "myfile": "#!/bin/bash\necho \"Hello world\" &gt; /root/testfile.txt"
   },
   ...,
   "stack_name": "teststack",
   "template": {
      ...,
      "resources": {
         "my_server": {
            "type": "OS::Nova::Server",
            "properties": {
               ...,
               "user_data": {
                  "get_file": "myfile"
               }
            }
         }
      }
   },
   "timeout_mins": 60
}</programlisting>
                        <para>
      Do not use this parameter to provide the content of the template located
      at the <code>template_url</code> address. Instead, use the
      <code>template</code> parameter to supply the template content as part
      of the request.
   </para>
                     </wadl:doc>
                  </param> 
            
                  <param name="parameters" style="plain" required="false" rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      Supplies arguments for parameters defined in the stack
      template.
   </para>
                        <para>
      The value is a JSON object, where each key is the name of a parameter
      defined in the template and the associated value is the argument to use
      for that parameter when instantiating the template. The following code
      shows the general structure of this parameter. In the example,
      <code>a</code> and <code>b</code> would be the names of two parameters
      defined in the template.
   </para>
                        <programlisting language="json">{ ...
    "parameters": {
        "a": "Value",
        "b": "3"
    }
... 
}</programlisting>
                        <para>
      While the service accepts JSON numbers for parameters with the type
      <code>number</code> and JSON objects for parameters with the type
      <code>json</code>, all parameter values are converted to their string
      representation for storage in the created Stack. Clients are
      encouraged to send all parameter values using their string
      representation for consistency between requests and responses from the
      Orchestration service.
   </para>
                        <para>
      A value must be provided for each template parameter which does not
      specify a default value. However, this parameter is not allowed to
      contain JSON properties with names that do not match a parameter
      defined in the template.
   </para>
                        <para>
      The <code>files</code> parameter maps logical file names to file
      contents. Both the <code>get_file</code> intrinsic function and
      provider template functionality use this mapping. When you want to
      use a provider template, for example, the Orchestration service
      adds an entry to the <code>files</code> map by using:
   </para>
                        <itemizedlist>
                           <listitem>
                              <para>
         The URL of the provider template as the name.
      </para>
                           </listitem>
                           <listitem>
                              <para>
         The contents of that file as the value.
      </para>
                           </listitem>
                        </itemizedlist>
                        <para>
      Additionally, some template authors encode their user data in a local
      file. The Orchestration client examines the template for the
      <code>get_file</code> intrinsic function and adds an entry to the
      <code>files</code> map with the path to the file as the name and the
      file contents as the value. So, a simple example looks like this:
   </para>
                        <programlisting language="json">{
   "files": {
      "myfile": "#!/bin/bash\necho \"Hello world\" &gt; /root/testfile.txt"
   },
   ...,
   "stack_name": "teststack",
   "template": {
      ...,
      "resources": {
         "my_server": {
            "type": "OS::Nova::Server",
            "properties": {
               ...,
               "user_data": {
                  "get_file": "myfile"
               }
            }
         }
      }
   },
   "timeout_mins": 60
}</programlisting>
                     </wadl:doc>
                  </param>
                  <param name="timeout_mins" style="plain" required="false" rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
                  The timeout for stack creation in minutes.
               </para>
                     </wadl:doc>
                  </param>
                  <param name="adopt_stack_data" style="plain" required="true" rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
                  Existing resources data to adopt a stack. Data returned by
                  abandon stack could be provided as
                  <code>adopt_stack_data</code>.
               </para>
                     </wadl:doc>
                  </param>
                  <param name="disable_rollback"
                         style="plain"
                         required="false"
                         rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
                  Enables or disables deletion of all stack resources when
                  stack creation fails. Set to <code>True</code> to keep all
                  resources when stack creation fails. Set to
                  <code>False</code> to delete all resources when stack
                  creation fails. Default is <code>True</code>.
               </para>
                     </wadl:doc>
                  </param>
               </representation>
            </request>
            <response status="201">
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">{
    "action": "CREATE",
    "id": "46c927bb-671a-43db-a29c-16a2610865ca",
    "name": "trove",
    "resources": {
        "mysql_server": {
            "action": "CREATE",
            "metadata": {},
            "name": "mysql_server",
            "resource_data": {},
            "resource_id": "74c5be7e-3e62-41e7-b455-93d1c32d56e3",
            "status": "COMPLETE",
            "type": "OS::Trove::Instance"
        }
    },
    "status": "COMPLETE",
    "template": {
        "heat-template-version": "2013-05-23",
        "description": "MySQL server instance",
        "parameters": {
            "instance_name": {
                "description": "The database instance name",
                "type": "string"
            }
        },
        "resources": {
            "mysql_server": {
                "properties": {
                    "databases": [
                        {
                            "name": "testdbonetwo"
                        }
                    ],
                    "flavor": "m1.medium",
                    "name": "test-trove-db",
                    "size": 30,
                    "users": [
                        {
                            "databases": [
                                "testdbonetwo"
                            ],
                            "name": "testuser",
                            "password": "testpass123"
                        }
                    ]
                },
                "type": "OS::Trove::Instance"
            }
        }
    }
}
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>
      
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Bad Request" xml:lang="EN"/>
            </response>
            <response status="401">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                         title="Unauthorized"
                         xml:lang="EN"/>
            </response> 
      
            <response status="409">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Conflict" xml:lang="EN"/>
            </response> 
      
            <response status="500">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                         title="Internal Server Error"
                         xml:lang="EN"/>
            </response>
         </method>
         <method name="GET" rax:id="stack_list">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="List stack data">
               <para role="shortdesc">
            Lists active stacks.
         </para>
            </wadl:doc>
            <request>
               <representation mediaType="application/json">
                  <param name="id" style="query" required="false" rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
                  Filters the stack list by a stack ID. Use this filter
                  multiple times to filter by multiple IDs.
               </para>
                     </wadl:doc>
                  </param>
                  <param name="status" style="query" required="false" rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
                  Filters the stack list by a status. Use this filter
                  multiple times to filter by multiple statuses.
               </para>
                     </wadl:doc>
                  </param>
                  <param name="name" style="query" required="false" rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
                  Filters the stack list by a name. Use this filter multiple
                  times to filter by multiple names.
               </para>
                     </wadl:doc>
                  </param>
                  <param name="action" style="query" required="false" rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
                  Filters the stack list by an action.
                  Use this filter multiple times to filter by multiple actions.
               </para>
                     </wadl:doc>
                  </param>
                  <param name="tenant" style="query" required="false" rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
                  Filters the stack list by a tenant.
                  Use this filter multiple times to filter by multiple tenants.
               </para>
                     </wadl:doc>
                  </param>
                  <param name="username" style="query" required="false" rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
                  Filters the stack list by a user name.
                  Use this filter multiple times to filter by multiple user names.
               </para>
                     </wadl:doc>
                  </param>
                  <param name="owner_id" style="query" required="false" rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
                  Filters the stack list by an owner ID, which is the
                  ID of the parent stack of listed stack. Use this filter
                  multiple times to filter by multiple owner IDs.
               </para>
                     </wadl:doc>
                  </param>
            

                  <param name="limit"
                         style="query"
                         required="false"
                         type="xsd:int"
                         rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
            Requests a page size of items. Returns a number of items up to a
            limit value. Use the <code>limit</code> parameter to make an
            initial limited request and use the ID of the last-seen item from
            the response as the <code>marker</code> parameter value in a
            subsequent limited request.
        </para>
                     </wadl:doc>
                  </param>

                  <param name="marker"
                         style="query"
                         required="false"
                         type="xsd:string"
                         rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
            The ID of the last-seen item. Use the <code>limit</code> parameter
            to make an initial limited request and use the ID of the last-seen
            item from the response as the <code>marker</code> parameter value
            in a subsequent limited request.
        </para>
                     </wadl:doc>
                  </param>
                  <param name="show_deleted" style="query" required="false" rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
                  Set to <code>True</code> to include deleted stacks in the list.
                  Default is <code>False</code>, which excludes deleted stacks
                  from the list.
               </para>
                     </wadl:doc>
                  </param>
                  <param name="show_nested" style="query" required="false" rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
                  Set to <code>True</code> to include nested stacks in the list.
                  Default is <code>False</code>, which excludes nested stacks
                  from the list.
               </para>
                     </wadl:doc>
                  </param>
                  <param name="sort_keys" style="query" required="false" rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
                  Sorts the stack list by <code>name</code>,
                  <code>status</code>, <code>created_at</code>, or
                  <code>updated_at</code> key.
               </para>
                     </wadl:doc>
                  </param>
                  <param name="tags" style="query" required="false" rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
                  Lists stacks that contain one or more simple string tags. To
                  specify multiple tags, separate the tags with commas. For
                  example, <code>tag1,tag2</code>. The boolean AND expression
                  is used to combine multiple tags.
               </para>
                     </wadl:doc>
                  </param>
                  <param name="tags_any" style="query" required="false" rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
                  Lists stacks that contain one or more simple string tags. To
                  specify multiple tags, separate the tags with commas. For
                  example, <code>tag1,tag2</code>. The boolean OR expression
                  is used to combine multiple tags.
               </para>
                     </wadl:doc>
                  </param>
                  <param name="not_tags" style="query" required="false" rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
                  Lists stacks that do not contain one or more simple string
                  tags. To specify multiple tags, separate the tags with
                  commas. For example, <code>tag1,tag2</code>. The boolean AND
                  expression is used to combine multiple tags.
               </para>
                     </wadl:doc>
                  </param>
                  <param name="not_tags_any" style="query" required="false" rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
                  Lists stacks that do not contain one or more simple string
                  tags. To specify multiple tags, separate the tags with
                  commas. For example, <code>tag1,tag2</code>. The boolean OR
                  expression is used to combine multiple tags.
               </para>
                     </wadl:doc>
                  </param>
            
                  <param name="sort_dir" style="query" required="false" rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      The sort direction of the list. A valid value is
      <code>asc</code> (ascending) or <code>desc</code> (descending).
   </para>
                     </wadl:doc>
                  </param> 
                  <param name="global_tenant" style="query" required="false" rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
                     Set to <code>True</code> to include stacks from all tenants in
                     the stack list. Specify policy requirements in the
                     Orchestration <code>policy.json</code> file. Default is
                     <code>False</code>.
                  </para>
                     </wadl:doc>
                  </param>
                  <param name="with_count" style="query" required="false" rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
                     Set to <code>True</code> to include a count key in the response.
                     The count key value is the number of stacks that match
                     the query criteria. Default is <code>False</code>.
                  </para>
                     </wadl:doc>
                  </param>
               </representation>
            </request>
            <response status="200">
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">{
    "stacks": [
        {
            "creation_time": "2014-06-03T20:59:46Z",
            "description": "sample stack",
            "id": "3095aefc-09fb-4bc7-b1f0-f21a304e864c",
            "links": [
                {
                    "href": "http://192.168.123.200:8004/v1/eb1c63a4f77141548385f113a28f0f52/stacks/simple_stack/3095aefc-09fb-4bc7-b1f0-f21a304e864c",
                    "rel": "self"
                }
            ],
            "stack_name": "simple_stack",
            "stack_status": "CREATE_COMPLETE",
            "stack_status_reason": "Stack CREATE completed successfully",
            "updated_time": "",
            "tags": ""
        }
    ]
}
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>
      
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Bad Request" xml:lang="EN"/>
            </response>
            <response status="401">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                         title="Unauthorized"
                         xml:lang="EN"/>
            </response> 
      
            <response status="500">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                         title="Internal Server Error"
                         xml:lang="EN"/>
            </response>
         </method>
      </resource>
               
               
               
               <resource path="/v1/{tenant_id}/stacks/preview" id="preview">
         <param name="tenant_id" style="template" rax:id="">
            <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>
                  The ID of the tenant. A tenant is also known as an account
                  or project.
               </para>
            </wadl:doc>
            </param>
         <method name="POST" rax:id="stack_preview">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Preview stack">
               <para role="shortdesc">
            Previews a stack.
         </para>
            </wadl:doc>
            <request>
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">{
    "files": {},
    "disable_rollback": true,
    "parameters": {
        "flavor": "m1.heat"
    },
    "stack_name": "teststack",
    "template": {
        "heat_template_version": "2013-05-23",
        "description": "Simple template to test heat commands",
        "parameters": {
            "flavor": {
                "default": "m1.tiny",
                "type": "string"
            }
        },
        "resources": {
            "hello_world": {
                "type": "OS::Nova::Server",
                "properties": {
                    "key_name": "heat_key",
                    "flavor": {
                        "get_param": "flavor"
                    },
                    "image": "40be8d1a-3eb9-40de-8abd-43237517384f",
                    "user_data": "#!/bin/bash -xv\necho \"hello world\" &amp;gt; /root/hello-world.txt\n"
                }
            }
        }
    },
    "timeout_mins": 60
}
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
                  <param name="stack_name" style="plain" required="true" rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
                  A name for the new stack.
               </para>
                        <para>
                  The value must be unique within a project. The
                  name must start with an ASCII letter and can contain
                  ASCII letters, digits, underscores, periods, and
                  hyphens. Specifically, the name must match the
                  <code>^[a-zA-Z][a-zA-Z0-9_.-]*$</code> regular
                  expression.
               </para>
                        <para>
                  When you delete or abandon a stack, its name might
                  not be available for reuse for an unspecified period
                  of time.
               </para>
                     </wadl:doc>
                  </param>
            
                  <param name="template_url" style="plain" required="false" rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      A URI to the location containing the stack template
      on which to perform the operation.
   </para>
                        <para>
      See the description of the <code>template</code>
      parameter for information about the expected template
      content located at the URI.
   </para>
                        <para>
      This parameter is only required when you omit the
      <code>template</code> parameter. If you specify both parameters,
      this parameter is ignored.
   </para>
                     </wadl:doc>
                  </param>
            
                  <param name="template" style="plain" required="false" rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      The stack template on which to perform the operation.
   </para>
                        <para>
      This parameter is always provided as a <code>string</code> in the JSON
      request body. The content of the string is a JSON- or YAML-formatted
      Orchestration template. For example:
   </para>
                        <programlisting language="json">"template": {
    "heat_template_version": "2013-05-23",
    ...}</programlisting>
                        <para>
      This parameter is required only when you omit the
      <code>template_url</code> parameter. If you specify both parameters,
      this value overrides the <code>template_url</code> parameter value.
   </para>
                     </wadl:doc>
                  </param>
            
                  <param name="files" style="plain" required="false" rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      Supplies the contents of files referenced in the template or the
      environment. Stack templates and resource templates can explicitly
      reference files by using the <code>get_file</code> intrinsic function.
      In addition, the <code>environment</code> parameter can contain implicit
      references to files.
   </para>
                        <para>
      The value is a JSON object, where each key is a relative or absolute URI
      which serves as the name of a file, and the associated value provides
      the contents of the file. The following code shows the general structure
      of this parameter.
   </para>
                        <programlisting language="json">{ ...
    "files": {
        "fileA.yaml": "Contents of the file",
        "file:///usr/fileB.template": "Contents of the file",
        "http://example.com/fileC.template": "Contents of the file"
    }
... 
}</programlisting>
                        <para>
      Additionally, some template authors encode their user data in a local
      file. The Orchestration client examines the template for the
      <code>get_file</code> intrinsic function and adds an entry to the
      <code>files</code> map with the path to the file as the name and the
      file contents as the value. So, a simple example looks like this:
   </para>
                        <programlisting language="json">{
   "files": {
      "myfile": "#!/bin/bash\necho \"Hello world\" &gt; /root/testfile.txt"
   },
   ...,
   "stack_name": "teststack",
   "template": {
      ...,
      "resources": {
         "my_server": {
            "type": "OS::Nova::Server",
            "properties": {
               ...,
               "user_data": {
                  "get_file": "myfile"
               }
            }
         }
      }
   },
   "timeout_mins": 60
}</programlisting>
                        <para>
      Do not use this parameter to provide the content of the template located
      at the <code>template_url</code> address. Instead, use the
      <code>template</code> parameter to supply the template content as part
      of the request.
   </para>
                     </wadl:doc>
                  </param> 
            
                  <param name="parameters" style="plain" required="false" rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      Supplies arguments for parameters defined in the stack
      template.
   </para>
                        <para>
      The value is a JSON object, where each key is the name of a parameter
      defined in the template and the associated value is the argument to use
      for that parameter when instantiating the template. The following code
      shows the general structure of this parameter. In the example,
      <code>a</code> and <code>b</code> would be the names of two parameters
      defined in the template.
   </para>
                        <programlisting language="json">{ ...
    "parameters": {
        "a": "Value",
        "b": "3"
    }
... 
}</programlisting>
                        <para>
      While the service accepts JSON numbers for parameters with the type
      <code>number</code> and JSON objects for parameters with the type
      <code>json</code>, all parameter values are converted to their string
      representation for storage in the created Stack. Clients are
      encouraged to send all parameter values using their string
      representation for consistency between requests and responses from the
      Orchestration service.
   </para>
                        <para>
      A value must be provided for each template parameter which does not
      specify a default value. However, this parameter is not allowed to
      contain JSON properties with names that do not match a parameter
      defined in the template.
   </para>
                        <para>
      The <code>files</code> parameter maps logical file names to file
      contents. Both the <code>get_file</code> intrinsic function and
      provider template functionality use this mapping. When you want to
      use a provider template, for example, the Orchestration service
      adds an entry to the <code>files</code> map by using:
   </para>
                        <itemizedlist>
                           <listitem>
                              <para>
         The URL of the provider template as the name.
      </para>
                           </listitem>
                           <listitem>
                              <para>
         The contents of that file as the value.
      </para>
                           </listitem>
                        </itemizedlist>
                        <para>
      Additionally, some template authors encode their user data in a local
      file. The Orchestration client examines the template for the
      <code>get_file</code> intrinsic function and adds an entry to the
      <code>files</code> map with the path to the file as the name and the
      file contents as the value. So, a simple example looks like this:
   </para>
                        <programlisting language="json">{
   "files": {
      "myfile": "#!/bin/bash\necho \"Hello world\" &gt; /root/testfile.txt"
   },
   ...,
   "stack_name": "teststack",
   "template": {
      ...,
      "resources": {
         "my_server": {
            "type": "OS::Nova::Server",
            "properties": {
               ...,
               "user_data": {
                  "get_file": "myfile"
               }
            }
         }
      }
   },
   "timeout_mins": 60
}</programlisting>
                     </wadl:doc>
                  </param>
               </representation>
            </request>
            <response status="200">
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">{
    "stack": {
        "capabilities": [],
        "creation_time": "2015-01-31T15:12:36Z",
        "description": "HOT template for Nova Server resource.\n",
        "disable_rollback": true,
        "id": "None",
        "links": [
            {
                "href": "http://192.168.122.102:8004/v1/6e18cc2bdbeb48a5basad2dc499f6804/stacks/test_stack/None",
                "rel": "self"
            }
        ],
        "notification_topics": [],
        "parameters": {
            "OS::project_id": "6e18cc2bdbeb48a5basad2dc499f6804",
            "OS::stack_id": "None",
            "OS::stack_name": "teststack",
            "admin_user": "cloud-user",
            "flavor": "m1.small",
            "image": "F20-cfg",
            "key_name": "heat_key",
            "server_name": "MyServer"
        },
        "parent": null,
        "resources": [
            {
                "attributes": {},
                "description": "",
                "metadata": {},
                "physical_resource_id": "",
                "properties": {
                    "description": "Ping and SSH",
                    "name": "the_sg",
                    "rules": [
                        {
                            "direction": "ingress",
                            "ethertype": "IPv4",
                            "port_range_max": null,
                            "port_range_min": null,
                            "protocol": "icmp",
                            "remote_group_id": null,
                            "remote_ip_prefix": null,
                            "remote_mode": "remote_ip_prefix"
                        },
                        {
                            "direction": "ingress",
                            "ethertype": "IPv4",
                            "port_range_max": 65535,
                            "port_range_min": 1,
                            "protocol": "tcp",
                            "remote_group_id": null,
                            "remote_ip_prefix": null,
                            "remote_mode": "remote_ip_prefix"
                        },
                        {
                            "direction": "ingress",
                            "ethertype": "IPv4",
                            "port_range_max": 65535,
                            "port_range_min": 1,
                            "protocol": "udp",
                            "remote_group_id": null,
                            "remote_ip_prefix": null,
                            "remote_mode": "remote_ip_prefix"
                        }
                    ]
                },
                "required_by": [
                    "server1"
                ],
                "resource_action": "INIT",
                "resource_identity": {
                    "path": "/resources/the_sg_res",
                    "stack_id": "None",
                    "stack_name": "teststack",
                    "tenant": "6e18cc2bdbeb48a5b3cad2dc499f6804"
                },
                "resource_name": "the_sg_res",
                "resource_status": "COMPLETE",
                "resource_status_reason": "",
                "resource_type": "OS::Neutron::SecurityGroup",
                "stack_identity": {
                    "path": "",
                    "stack_id": "None",
                    "stack_name": "teststack",
                    "tenant": "6e18cc2bdbeb48a5b3cad2dc499f6804"
                },
                "stack_name": "teststack",
                "updated_time": "2015-01-31T15:12:36Z"
            },
            {
                "attributes": {
                    "accessIPv4": "",
                    "accessIPv6": "",
                    "addresses": "",
                    "console_urls": "",
                    "first_address": "",
                    "instance_name": "",
                    "name": "MyServer",
                    "networks": "",
                    "show": ""
                },
                "description": "",
                "metadata": {},
                "physical_resource_id": "",
                "properties": {
                    "admin_pass": null,
                    "admin_user": "cloud-user",
                    "availability_zone": null,
                    "block_device_mapping": null,
                    "config_drive": null,
                    "diskConfig": null,
                    "flavor": "m1.small",
                    "flavor_update_policy": "RESIZE",
                    "image": "F20-cfg",
                    "image_update_policy": "REPLACE",
                    "key_name": "heat_key",
                    "metadata": {
                        "ha_stack": "None"
                    },
                    "name": "MyServer",
                    "networks": [
                        {
                            "fixed_ip": null,
                            "network": "private",
                            "port": null,
                            "uuid": null
                        }
                    ],
                    "personality": {},
                    "reservation_id": null,
                    "scheduler_hints": null,
                    "security_groups": [
                        "None"
                    ],
                    "software_config_transport": "POLL_SERVER_CFN",
                    "user_data": "",
                    "user_data_format": "HEAT_CFNTOOLS"
                },
                "required_by": [],
                "resource_action": "INIT",
                "resource_identity": {
                    "path": "/resources/hello_world",
                    "stack_id": "None",
                    "stack_name": "teststack",
                    "tenant": "6e18cc2bdbeb48a3433cad2dc499sdf32234"
                },
                "resource_name": "hello_world",
                "resource_status": "COMPLETE",
                "resource_status_reason": "",
                "resource_type": "OS::Nova::Server",
                "stack_identity": {
                    "path": "",
                    "stack_id": "None",
                    "stack_name": "teststack",
                    "tenant": "6e18cc2bdbeb48a3433cad2dc499sdf32234"
                },
                "stack_name": "teststack",
                "updated_time": "2015-01-31T15:12:36Z"
            }
        ],
        "stack_name": "test_stack",
        "stack_owner": "admin",
        "template_description": "HOT template for Nova Server resource.\n",
        "timeout_mins": null,
        "updated_time": null
    }
}
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
                  <param name="parent" style="plain" required="true" rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
                  The stack ID of the parent stack, if this is
                  a nested stack.
               </para>
                     </wadl:doc>
                  </param>
                  <param name="id" style="plain" required="true" rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
                  The stack ID.
               </para>
                     </wadl:doc>
                  </param>
                  <param name="stack_name" style="plain" required="true" rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
                  The name of the stack.
               </para>
                     </wadl:doc>
                  </param>
                  <param name="description" style="plain" required="true" rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
                  A description of the stack.
               </para>
                     </wadl:doc>
                  </param>
                  <param name="template_description"
                         style="plain"
                         required="true"
                         rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
                  A description of the template that defines the stack.
               </para>
                     </wadl:doc>
                  </param>
                  <param name="timeout_mins" style="plain" required="true" rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
                  Time-lines for stack creation.
               </para>
                     </wadl:doc>
                  </param>
                  <param name="disable_rollback" style="plain" required="true" rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
                  Enables or disables stack rollback when stack creation
                  fails. Set to <code>True</code> to rollback the stack when
                  stack creation fails. Set to <code>False</code> to disable
                  stack rollback when stack creation fails. Default is
                  <code>True</code>.
               </para>
                     </wadl:doc>
                  </param>
                  <param name="capabilities" style="plain" required="true" rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
                  List of stack capabilities for stack.
               </para>
                     </wadl:doc>
                  </param>
                  <param name="notification_topics"
                         style="plain"
                         required="true"
                         rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
                  List of notification topics for stack.
               </para>
                     </wadl:doc>
                  </param>
                  <param name="updated_time" style="plain" required="true" rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
                  Time of last stack update in the following format:
                  <code>YYYY-MM-DDThh:mm:ssTZD</code>, where <code>TZD</code> is
                  the time zone designator.
               </para>
                     </wadl:doc>
                  </param>
                  <param name="stack_owner" style="plain" required="true" rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
                  Stack owner name.
               </para>
                     </wadl:doc>
                  </param>
                  <param name="parameters" style="plain" required="true" rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
                  List of parameters defined for the stack.
               </para>
                     </wadl:doc>
                  </param>
                  <param name="resources" style="plain" required="true" rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
                  List of stack resources.
               </para>
                     </wadl:doc>
                  </param>
               </representation>
            </response>
      
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Bad Request" xml:lang="EN"/>
            </response>
            <response status="401">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                         title="Unauthorized"
                         xml:lang="EN"/>
            </response> 
      
            <response status="409">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Conflict" xml:lang="EN"/>
            </response> 
      
            <response status="500">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                         title="Internal Server Error"
                         xml:lang="EN"/>
            </response>
         </method>
      </resource>
                  
               
               <resource path="/v1/{tenant_id}/stacks/{stack_name}" id="stack_name">
         <param name="tenant_id" style="template" rax:id="">
            <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>
                  The ID of the tenant. A tenant is also known as an account
                  or project.
               </para>
            </wadl:doc>
            </param>
         <param name="stack_name" style="template" required="true" rax:id="">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <para>
                        The name of a stack.
                     </para>
                  </wadl:doc>
                  </param>
         <method name="GET" rax:id="stack_find">
            <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN" title="Find stack">
               <para role="shortdesc">
            Finds the canonical URL for a stack.
         </para>
               <para>
            Also works with verbs other than <command>GET</command>, so that you can perform
            <command>PUT</command> and <command>DELETE</command> operations on a current stack. Set your client
            to follow redirects. When redirecting, the request method should
            not change as defined in RFC2626. However, in many clients the
            default behavior is to change the method to <command>GET</command> when you receive
            a <code>302</code> response code because this behavior is
            ubiquitous in web browsers.
         </para>
            </wadl:doc>
            <response status="302">
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">{
    "stack": {
        "capabilities": [],
        "creation_time": "2014-06-04T20:36:12Z",
        "description": "sample stack",
        "disable_rollback": true,
        "id": "5333af0c-cc26-47ee-ac3d-8784cefafbd7",
        "links": [
            {
                "href": "http://192.168.123.200:8004/v1/eb1c63a4f77141548385f113a28f0f52/stacks/simple_stack/5333af0c-cc26-47ee-ac3d-8784cefafbd7",
                "rel": "self"
            }
        ],
        "notification_topics": [],
        "outputs": [],
        "parameters": {
            "OS::stack_id": "5333af0c-cc26-47ee-ac3d-8784cefafbd7",
            "OS::stack_name": "simple_stack"
        },
        "stack_name": "simple_stack",
        "stack_status": "CREATE_COMPLETE",
        "stack_status_reason": "Stack CREATE completed successfully",
        "template_description": "sample stack",
        "timeout_mins": null,
        "updated_time": null
    }
}
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>
      
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Bad Request" xml:lang="EN"/>
            </response>
            <response status="401">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                         title="Unauthorized"
                         xml:lang="EN"/>
            </response> 
      
            <response status="404">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Not Found" xml:lang="EN"/>
            </response> 
      
            <response status="500">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                         title="Internal Server Error"
                         xml:lang="EN"/>
            </response>
         </method>
      </resource>
                  
                  
                  <resource path="/v1/{tenant_id}/stacks/{stack_name}/resources" id="resources">
         <param name="tenant_id" style="template" rax:id="">
            <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>
                  The ID of the tenant. A tenant is also known as an account
                  or project.
               </para>
            </wadl:doc>
            </param>
         <param name="stack_name" style="template" required="true" rax:id="">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <para>
                        The name of a stack.
                     </para>
                  </wadl:doc>
                  </param>
         <method name="GET" rax:id="stack_resources_find">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Find stack resources">
               <para role="shortdesc">
            Finds the canonical URL for a resource list of a stack.
         </para>
               <para>
            The canonical URL is returned for only non-deleted stacks. To
            fetch the resource list for deleted stacks, use the following
            endpoint:
         </para>
               <programlisting>/v1/{tenant_id}/stacks/{stack_name}/{stack_id}/resources</programlisting>
            </wadl:doc>
            <response status="302">
               <representation mediaType="application/json">
                  <doc>
                     <para xmlns="http://docbook.org/ns/docbook">
               Lists resources for a stack, in JSON format.
            </para>
                  </doc>
               </representation>
            </response>
         </method>
      </resource>
                     
                  
                  <resource path="/v1/{tenant_id}/stacks/{stack_name}/events" id="events">
         <param name="tenant_id" style="template" rax:id="">
            <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>
                  The ID of the tenant. A tenant is also known as an account
                  or project.
               </para>
            </wadl:doc>
            </param>
         <param name="stack_name" style="template" required="true" rax:id="">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <para>
                        The name of a stack.
                     </para>
                  </wadl:doc>
                  </param>
         <method name="GET" rax:id="stack_events_find">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Find stack events">
               <para role="shortdesc">
            Finds the canonical URL for the event list of a stack.
         </para>
            </wadl:doc>
            <response status="302"/>
         </method>
      </resource>
                     
                  
                  <resource path="/v1/{tenant_id}/stacks/{stack_name}/{stack_id}" id="stack_id">
         <param name="tenant_id" style="template" rax:id="">
            <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>
                  The ID of the tenant. A tenant is also known as an account
                  or project.
               </para>
            </wadl:doc>
            </param>
         <param name="stack_name" style="template" required="true" rax:id="">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <para>
                        The name of a stack.
                     </para>
                  </wadl:doc>
                  </param>
         <param name="stack_id" style="template" required="true" rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
                           The stack ID.
                        </para>
                     </wadl:doc>
                     </param>
         <method name="GET" rax:id="stack_show">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Show stack details">
               <para role="shortdesc">
            Shows details for a stack.
         </para>
            </wadl:doc>
            <response status="200">
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">{
    "stack": {
        "capabilities": [],
        "creation_time": "2014-06-03T20:59:46Z",
        "description": "sample stack",
        "disable_rollback": "True",
        "id": "3095aefc-09fb-4bc7-b1f0-f21a304e864c",
        "links": [
            {
                "href": "http://192.168.123.200:8004/v1/eb1c63a4f77141548385f113a28f0f52/stacks/simple_stack/3095aefc-09fb-4bc7-b1f0-f21a304e864c",
                "rel": "self"
            }
        ],
        "notification_topics": [],
        "outputs": [],
        "parameters": {
            "OS::project_id": "3ab5b02f-a01f-4f95-afa1-e254afc4a435",
            "OS::stack_id": "3095aefc-09fb-4bc7-b1f0-f21a304e864c",
            "OS::stack_name": "simple_stack"
        },
        "stack_name": "simple_stack",
        "stack_owner": "simple_username",
        "stack_status": "CREATE_COMPLETE",
        "stack_status_reason": "Stack CREATE completed successfully",
        "template_description": "sample stack",
        "stack_user_project_id": "65728b74-cfe7-4f17-9c15-11d4f686e591",
        "timeout_mins": "",
        "updated_time": "",
        "parent": "",
        "tags": ""
    }
}
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
            
                  <param name="capabilities"
                         style="plain"
                         required="true"
                         type="xsd:list"
                         rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      A list of stack capabilities.
    </para>
                     </wadl:doc>
                  </param>
                  <param name="creation_time"
                         style="plain"
                         required="true"
                         type="xsd:dateTime"
                         rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      The date and time when the stack was created.
    </para>
                        <para>
      The date and time stamp format is <link xlink:href="https://en.wikipedia.org/wiki/ISO_8601">ISO 8601</link>:
    </para>
                        <programlisting>CCYY-MM-DDThh:mm:ss±hh:mm</programlisting>
                        <para>
      For example, <code>2015-08-27T09:49:58-05:00</code>.
    </para>
                        <para>
      The <code>±hh:mm</code> value, if included, is the time zone as an
      offset from UTC.
    </para>
                     </wadl:doc>
                  </param>
                  <param name="description"
                         style="plain"
                         required="true"
                         type="xsd:string"
                         rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      The description of the stack.
    </para>
                     </wadl:doc>
                  </param>
                  <param name="id"
                         style="plain"
                         required="true"
                         type="csapi:UUID"
                         rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      The UUID of the stack.
    </para>
                     </wadl:doc>
                  </param>
                  <param name="links"
                         style="plain"
                         required="true"
                         type="xsd:list"
                         rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      A list of stack links.
    </para>
                     </wadl:doc>
                  </param>
                  <param name="notification_topics"
                         style="plain"
                         required="true"
                         type="xsd:list"
                         rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      A list of stack notifications.
    </para>
                     </wadl:doc>
                  </param>
                  <param name="outputs"
                         style="plain"
                         required="true"
                         type="xsd:list"
                         rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      A list of stack outputs.
    </para>
                     </wadl:doc>
                  </param>
                  <param name="parameters"
                         style="plain"
                         required="true"
                         type="xsd:dict"
                         rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      Key and value pairs that contain stack parameters.
    </para>
                     </wadl:doc>
                  </param>
                  <param name="stack_name"
                         style="plain"
                         required="true"
                         type="xsd:string"
                         rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      The name of the stack.
    </para>
                     </wadl:doc>
                  </param>
                  <param name="stack_owner"
                         style="plain"
                         required="true"
                         type="xsd:string"
                         rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      The owner of the stack.
    </para>
                     </wadl:doc>
                  </param>
                  <param name="stack_status"
                         style="plain"
                         required="true"
                         type="xsd:string"
                         rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      The status of the stack.
    </para>
                     </wadl:doc>
                  </param>
                  <param name="stack_status_reason"
                         style="plain"
                         required="true"
                         type="xsd:string"
                         rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      The reason for the current status of the stack.
    </para>
                     </wadl:doc>
                  </param>
                  <param name="template_description"
                         style="plain"
                         required="true"
                         type="xsd:string"
                         rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      The description of the stack template.
    </para>
                     </wadl:doc>
                  </param>
                  <param name="stack_user_project_id"
                         style="plain"
                         required="true"
                         type="csapi:UUID"
                         rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      The project UUID of the stack user.
    </para>
                     </wadl:doc>
                  </param>
                  <param name="timeout_mins"
                         style="plain"
                         required="true"
                         type="xsd:string"
                         rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      The timeout, in minutes.
    </para>
                     </wadl:doc>
                  </param>
                  <param name="updated_time"
                         style="plain"
                         required="true"
                         type="xsd:dateTime"
                         rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      The date and time when the stack was updated.
    </para>
                        <para>
      The date and time stamp format is <link xlink:href="https://en.wikipedia.org/wiki/ISO_8601">ISO 8601</link>:
    </para>
                        <programlisting>CCYY-MM-DDThh:mm:ss±hh:mm</programlisting>
                        <para>
      For example, <code>2015-08-27T09:49:58-05:00</code>.
    </para>
                        <para>
      The <code>±hh:mm</code> value, if included, is the time zone as an offset from UTC.
    </para>
                        <para>
      If the <code>updated_at</code> date and time stamp is not set, its value is
      <code>null</code>.
    </para>
                     </wadl:doc>
                  </param>
                  <param name="parent"
                         style="plain"
                         required="true"
                         type="xsd:string"
                         rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      The parent of the stack.
    </para>
                     </wadl:doc>
                  </param>
                  <param name="tags"
                         style="plain"
                         required="true"
                         type="xsd:string"
                         rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      The stack tags.
    </para>
                     </wadl:doc>
                  </param>
               </representation>
            </response>
      
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Bad Request" xml:lang="EN"/>
            </response>
            <response status="401">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                         title="Unauthorized"
                         xml:lang="EN"/>
            </response> 
      
            <response status="404">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Not Found" xml:lang="EN"/>
            </response> 
      
            <response status="500">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                         title="Internal Server Error"
                         xml:lang="EN"/>
            </response>
         </method>
         <method name="PUT" rax:id="stack_update">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Update stack">
               <para role="shortdesc">
            Updates a stack.
         </para>
            </wadl:doc>
            <request>
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">{
    "template": {
        "heat_template_version": "2013-05-23",
        "description": "Create a simple stack",
        "parameters": {
            "flavor": {
                "default": "m1.tiny",
                "type": "string"
            }
        },
        "resources": {
            "hello_world": {
                "type": "OS::Nova::Server",
                "properties": {
                    "key_name": "heat_key",
                    "flavor": {
                        "get_param": "flavor"
                    },
                    "image": "40be8d1a-3eb9-40de-8abd-43237517384f",
                    "user_data": "#!/bin/bash -xv\necho \"hello world\" &gt; /root/hello-world.txt\n"
                }
            }
        }
    },
    "parameters": {
        "flavor": "m1.small"
    }
}
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
            
                  <param name="template_url" style="plain" required="false" rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      A URI to the location containing the stack template
      on which to perform the operation.
   </para>
                        <para>
      See the description of the <code>template</code>
      parameter for information about the expected template
      content located at the URI.
   </para>
                        <para>
      This parameter is only required when you omit the
      <code>template</code> parameter. If you specify both parameters,
      this parameter is ignored.
   </para>
                     </wadl:doc>
                  </param>
            
                  <param name="template" style="plain" required="false" rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      The stack template on which to perform the operation.
   </para>
                        <para>
      This parameter is always provided as a <code>string</code> in the JSON
      request body. The content of the string is a JSON- or YAML-formatted
      Orchestration template. For example:
   </para>
                        <programlisting language="json">"template": {
    "heat_template_version": "2013-05-23",
    ...}</programlisting>
                        <para>
      This parameter is required only when you omit the
      <code>template_url</code> parameter. If you specify both parameters,
      this value overrides the <code>template_url</code> parameter value.
   </para>
                     </wadl:doc>
                  </param>
            
                  <param name="environment" style="plain" required="false" rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      A JSON environment for the stack.
   </para>
                     </wadl:doc>
                  </param>
            
                  <param name="files" style="plain" required="false" rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      Supplies the contents of files referenced in the template or the
      environment. Stack templates and resource templates can explicitly
      reference files by using the <code>get_file</code> intrinsic function.
      In addition, the <code>environment</code> parameter can contain implicit
      references to files.
   </para>
                        <para>
      The value is a JSON object, where each key is a relative or absolute URI
      which serves as the name of a file, and the associated value provides
      the contents of the file. The following code shows the general structure
      of this parameter.
   </para>
                        <programlisting language="json">{ ...
    "files": {
        "fileA.yaml": "Contents of the file",
        "file:///usr/fileB.template": "Contents of the file",
        "http://example.com/fileC.template": "Contents of the file"
    }
... 
}</programlisting>
                        <para>
      Additionally, some template authors encode their user data in a local
      file. The Orchestration client examines the template for the
      <code>get_file</code> intrinsic function and adds an entry to the
      <code>files</code> map with the path to the file as the name and the
      file contents as the value. So, a simple example looks like this:
   </para>
                        <programlisting language="json">{
   "files": {
      "myfile": "#!/bin/bash\necho \"Hello world\" &gt; /root/testfile.txt"
   },
   ...,
   "stack_name": "teststack",
   "template": {
      ...,
      "resources": {
         "my_server": {
            "type": "OS::Nova::Server",
            "properties": {
               ...,
               "user_data": {
                  "get_file": "myfile"
               }
            }
         }
      }
   },
   "timeout_mins": 60
}</programlisting>
                        <para>
      Do not use this parameter to provide the content of the template located
      at the <code>template_url</code> address. Instead, use the
      <code>template</code> parameter to supply the template content as part
      of the request.
   </para>
                     </wadl:doc>
                  </param> 
            
                  <param name="tags" style="plain" required="false" rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      One or more simple string tags to associate with the stack. To associate
      multiple tags with a stack, separate the tags with commas. For example,
      <code>tag1,tag2</code>.
   </para>
                     </wadl:doc>
                  </param> 
                  <param name="parameters" style="plain" required="false" rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
                  This parameter supplies updated arguments for
                  parameters defined in the stack template.
               </para>
                        <para>
                  The value is a JSON object, where each key is the name of a
                  parameter defined in the template and the associated value
                  is the argument to use for that parameter when instantiating
                  the template. The following code shows the general structure
                  of this parameter. In the example, <code>a</code> and
                  <code>b</code> are the names of two parameters defined in
                  the template.
               </para>
                        <programlisting language="json">{ ...
                     "parameters": {
                     "a": "Value",
                     "b": "3"
                     }
                     ... }
               </programlisting>
                        <para>
                  While the service accepts JSON numbers for parameters with
                  the type <code>number</code> and JSON objects for parameters
                  with the type <code>json</code>, all parameter values are
                  converted to their string representation for storage in the
                  created Stack. Clients are encouraged to send all parameter
                  values using their string representation for consistency
                  between requests and responses from the Orchestration
                  service.
               </para>
                        <para>
                  You must specify a value for each template parameter that
                  does not have a default value. However, this parameter
                  cannot contain JSON properties with names that do not match
                  a parameter that is defined in the template.
               </para>
                     </wadl:doc>
                  </param>
                  <param name="timeout_mins" style="plain" required="false" rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
                  The timeout for stack creation in minutes.
               </para>
                     </wadl:doc>
                  </param>
               </representation>
            </request>
            <response status="202"/>
      
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Bad Request" xml:lang="EN"/>
            </response>
            <response status="401">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                         title="Unauthorized"
                         xml:lang="EN"/>
            </response> 
      
            <response status="404">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Not Found" xml:lang="EN"/>
            </response> 
      
            <response status="500">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                         title="Internal Server Error"
                         xml:lang="EN"/>
            </response>
         </method>
         <method name="DELETE" rax:id="stack_delete">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Delete stack">
               <para role="shortdesc">
            Deletes a stack and its snapshots.
         </para>
            </wadl:doc>
            <response status="204"/>
      
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Bad Request" xml:lang="EN"/>
            </response>
            <response status="401">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                         title="Unauthorized"
                         xml:lang="EN"/>
            </response> 
      
            <response status="404">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Not Found" xml:lang="EN"/>
            </response> 
      
            <response status="500">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                         title="Internal Server Error"
                         xml:lang="EN"/>
            </response>
         </method>
      </resource>
                     
                     
                     
                     
                     <resource path="/v1/{tenant_id}/stacks/{stack_name}/{stack_id}/preview"
                id="update_preview">
         <param name="tenant_id" style="template" rax:id="">
            <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>
                  The ID of the tenant. A tenant is also known as an account
                  or project.
               </para>
            </wadl:doc>
            </param>
         <param name="stack_name" style="template" required="true" rax:id="">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <para>
                        The name of a stack.
                     </para>
                  </wadl:doc>
                  </param>
         <param name="stack_id" style="template" required="true" rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
                           The stack ID.
                        </para>
                     </wadl:doc>
                     </param>
         <method name="PUT" rax:id="stack_update_preview">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Preview stack update">
               <para role="shortdesc">
            Previews an update for a stack.
         </para>
            </wadl:doc>
            <request>
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">{
    "template": {
        "heat_template_version": "2013-05-23",
        "description": "Create a simple stack",
        "parameters": {
            "flavor": {
                "default": "m1.tiny",
                "type": "string"
            }
        },
        "resources": {
            "hello_world": {
                "type": "OS::Nova::Server",
                "properties": {
                    "key_name": "heat_key",
                    "flavor": {
                        "get_param": "flavor"
                    },
                    "image": "40be8d1a-3eb9-40de-8abd-43237517384f",
                    "user_data": "#!/bin/bash -xv\necho \"hello world\" &gt; /root/hello-world.txt\n"
                }
            }
        }
    },
    "parameters": {
        "flavor": "m1.small"
    }
}
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
            
                  <param name="template_url" style="plain" required="false" rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      A URI to the location containing the stack template
      on which to perform the operation.
   </para>
                        <para>
      See the description of the <code>template</code>
      parameter for information about the expected template
      content located at the URI.
   </para>
                        <para>
      This parameter is only required when you omit the
      <code>template</code> parameter. If you specify both parameters,
      this parameter is ignored.
   </para>
                     </wadl:doc>
                  </param>
            
                  <param name="template" style="plain" required="false" rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      The stack template on which to perform the operation.
   </para>
                        <para>
      This parameter is always provided as a <code>string</code> in the JSON
      request body. The content of the string is a JSON- or YAML-formatted
      Orchestration template. For example:
   </para>
                        <programlisting language="json">"template": {
    "heat_template_version": "2013-05-23",
    ...}</programlisting>
                        <para>
      This parameter is required only when you omit the
      <code>template_url</code> parameter. If you specify both parameters,
      this value overrides the <code>template_url</code> parameter value.
   </para>
                     </wadl:doc>
                  </param>
            
                  <param name="environment" style="plain" required="false" rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      A JSON environment for the stack.
   </para>
                     </wadl:doc>
                  </param>
            
                  <param name="files" style="plain" required="false" rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      Supplies the contents of files referenced in the template or the
      environment. Stack templates and resource templates can explicitly
      reference files by using the <code>get_file</code> intrinsic function.
      In addition, the <code>environment</code> parameter can contain implicit
      references to files.
   </para>
                        <para>
      The value is a JSON object, where each key is a relative or absolute URI
      which serves as the name of a file, and the associated value provides
      the contents of the file. The following code shows the general structure
      of this parameter.
   </para>
                        <programlisting language="json">{ ...
    "files": {
        "fileA.yaml": "Contents of the file",
        "file:///usr/fileB.template": "Contents of the file",
        "http://example.com/fileC.template": "Contents of the file"
    }
... 
}</programlisting>
                        <para>
      Additionally, some template authors encode their user data in a local
      file. The Orchestration client examines the template for the
      <code>get_file</code> intrinsic function and adds an entry to the
      <code>files</code> map with the path to the file as the name and the
      file contents as the value. So, a simple example looks like this:
   </para>
                        <programlisting language="json">{
   "files": {
      "myfile": "#!/bin/bash\necho \"Hello world\" &gt; /root/testfile.txt"
   },
   ...,
   "stack_name": "teststack",
   "template": {
      ...,
      "resources": {
         "my_server": {
            "type": "OS::Nova::Server",
            "properties": {
               ...,
               "user_data": {
                  "get_file": "myfile"
               }
            }
         }
      }
   },
   "timeout_mins": 60
}</programlisting>
                        <para>
      Do not use this parameter to provide the content of the template located
      at the <code>template_url</code> address. Instead, use the
      <code>template</code> parameter to supply the template content as part
      of the request.
   </para>
                     </wadl:doc>
                  </param> 
            
                  <param name="tags" style="plain" required="false" rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      One or more simple string tags to associate with the stack. To associate
      multiple tags with a stack, separate the tags with commas. For example,
      <code>tag1,tag2</code>.
   </para>
                     </wadl:doc>
                  </param> 
                  <param name="parameters" style="plain" required="false" rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
                     Supplies updated arguments for parameters that are
                     defined in the stack template.
                  </para>
                        <para>
                     The value is a JSON object, where each key is the name of
                     a parameter defined in the template and the associated
                     value is the argument to use for that parameter when
                     instantiating the template. The following code shows the
                     general structure of this parameter. In the example,
                     <code>a</code> and <code>b</code> are the names of two
                     parameters defined in the template.
                  </para>
                        <programlisting language="json">{ ...
                      "parameters": {
                      "a": "Value",
                      "b": "3"
                      }
                      ... }
                  </programlisting>
                        <para>
                   While the service accepts JSON numbers for parameters with
                   the type <code>number</code> and JSON objects for parameters
                   with the type <code>json</code>, all parameter values are
                   converted to their string representation for storage in the
                   created Stack. Clients are encouraged to send all parameter
                   values using their string representation for consistency
                   between requests and responses from the Orchestration
                   service.
                </para>
                        <para>
                   You must specify a value for each template parameter that
                   does not have a default value. However, this parameter
                   cannot contain JSON properties with names that do not match
                   a parameter that is defined in the template.
                </para>
                     </wadl:doc>
                  </param>
                  <param name="timeout_mins" style="plain" required="false" rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
                   The timeout for stack creation in minutes.
                </para>
                     </wadl:doc>
                  </param>
               </representation>
            </request>
            <response status="200">
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">{
    "unchanged": [
        {
            "updated_time": "datetime",
            "resource_name": "",
            "physical_resource_id": "{resource id or ''}",
            "resource_action": "CREATE",
            "resource_status": "COMPLETE",
            "resource_status_reason": "",
            "resource_type": "restype",
            "stack_identity": "{stack_id}",
            "stack_name": "{stack_name}"
        }
    ],
    "updated": [
        {
            "updated_time": "datetime",
            "resource_name": "",
            "physical_resource_id": "{resource id or ''}",
            "resource_action": "CREATE",
            "resource_status": "COMPLETE",
            "resource_status_reason": "",
            "resource_type": "restype",
            "stack_identity": "{stack_id}",
            "stack_name": "{stack_name}"
        }
    ],
    "replaced": [
        {
            "updated_time": "datetime",
            "resource_name": "",
            "physical_resource_id": "{resource id or ''}",
            "resource_action": "CREATE",
            "resource_status": "COMPLETE",
            "resource_status_reason": "",
            "resource_type": "restype",
            "stack_identity": "{stack_id}",
            "stack_name": "{stack_name}"
        }
    ],
    "added": [
        {
            "updated_time": "datetime",
            "resource_name": "",
            "physical_resource_id": "{resource id or ''}",
            "resource_action": "CREATE",
            "resource_status": "COMPLETE",
            "resource_status_reason": "",
            "resource_type": "restype",
            "stack_identity": "{stack_id}",
            "stack_name": "{stack_name}"
        }
    ],
    "deleted": [
        {
            "updated_time": "datetime",
            "resource_name": "",
            "physical_resource_id": "{resource id or ''}",
            "resource_action": "CREATE",
            "resource_status": "COMPLETE",
            "resource_status_reason": "",
            "resource_type": "restype",
            "stack_identity": "{stack_id}",
            "stack_name": "{stack_name}"
        }
    ]
}
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>
         </method>
      </resource>
                       
                     
                     <resource path="/v1/{tenant_id}/stacks/{stack_name}/{stack_id}/abandon"
                id="abandon">
         <param name="tenant_id" style="template" rax:id="">
            <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>
                  The ID of the tenant. A tenant is also known as an account
                  or project.
               </para>
            </wadl:doc>
            </param>
         <param name="stack_name" style="template" required="true" rax:id="">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <para>
                        The name of a stack.
                     </para>
                  </wadl:doc>
                  </param>
         <param name="stack_id" style="template" required="true" rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
                           The stack ID.
                        </para>
                     </wadl:doc>
                     </param>
         <method name="DELETE" rax:id="stack_abandon">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Abandon stack">
               <para role="shortdesc">
            Deletes a stack but leaves its resources intact, and
            returns data that describes the stack and its resources.
         </para>
               <para>
            This method can be disabled from the server side. If it is
            disabled, this call throws an exception.
         </para>
            </wadl:doc>
            <response status="200">
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">{
    "status": "COMPLETE",
    "name": "g",
    "dry_run": true,
    "template": {
        "outputs": {
            "instance_ip": {
                "value": {
                    "str_replace": {
                        "params": {
                            "username": "ec2-user",
                            "hostname": {
                                "get_attr": [
                                    "server",
                                    "first_address"
                                ]
                            }
                        },
                        "template": "ssh username@hostname"
                    }
                }
            }
        },
        "heat_template_version": "2013-05-23",
        "resources": {
            "server": {
                "type": "OS::Nova::Server",
                "properties": {
                    "key_name": {
                        "get_param": "key_name"
                    },
                    "image": {
                        "get_param": "image"
                    },
                    "flavor": {
                        "get_param": "flavor"
                    }
                }
            }
        },
        "parameters": {
            "key_name": {
                "default": "heat_key",
                "type": "string"
            },
            "image": {
                "default": "fedora-amd64",
                "type": "string"
            },
            "flavor": {
                "default": "m1.small",
                "type": "string"
            }
        }
    },
    "action": "CREATE",
    "id": "16934ca3-40e0-4fb2-a289-a700662ec05a",
    "resources": {
        "server": {
            "status": "COMPLETE",
            "name": "server",
            "resource_data": {},
            "resource_id": "39d5dad7-7d7a-4cc8-bd84-851e9e2ff4ea",
            "action": "CREATE",
            "type": "OS::Nova::Server",
            "metadata": {}
        }
    }
}
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>
      
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Bad Request" xml:lang="EN"/>
            </response>
            <response status="401">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                         title="Unauthorized"
                         xml:lang="EN"/>
            </response> 
      
            <response status="404">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Not Found" xml:lang="EN"/>
            </response> 
      
            <response status="500">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                         title="Internal Server Error"
                         xml:lang="EN"/>
            </response>
         </method>
      </resource>
                        
                     
                     <resource path="/v1/{tenant_id}/stacks/{stack_name}/{stack_id}/snapshots"
                id="snapshots">
         <param name="tenant_id" style="template" rax:id="">
            <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>
                  The ID of the tenant. A tenant is also known as an account
                  or project.
               </para>
            </wadl:doc>
            </param>
         <param name="stack_name" style="template" required="true" rax:id="">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <para>
                        The name of a stack.
                     </para>
                  </wadl:doc>
                  </param>
         <param name="stack_id" style="template" required="true" rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
                           The stack ID.
                        </para>
                     </wadl:doc>
                     </param>
         <method name="POST" rax:id="stack_snapshot">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Snapshot stack">
               <para role="shortdesc">
            Takes a snapshot of all resources in a stack. All snapshots are
            deleted when the stack is deleted.
         </para>
            </wadl:doc>
            <request>
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">{
    "name": "vol_snapshot"
}
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
                  <param name="name" style="plain" required="true" rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
                  The name of the snapshot.
               </para>
                     </wadl:doc>
                  </param>
               </representation>
            </request>
            <response status="200">
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">{
    "id": "13c3a4b5-0585-440e-85a4-6f96b20e7a78",
    "name": "vol_snapshot",
    "status": "IN_PROGRESS",
    "status_reason": null,
    "data": null,
    "creation_time": "2015-09-01T20:57:55Z"
}
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>
         </method>
         <method name="GET" rax:id="stack_list_snapshot">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="List snapshots">
               <para role="shortdesc">
            Lists snapshots for a stack.
         </para>
            </wadl:doc>
            <response status="200">
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">{
    "snapshots": [
        {
            "id": "7c4e1ef4-bf1b-41ab-a0c8-ce01f4ffdfa1",
            "name": "vol_snapshot",
            "status": "IN_PROGRESS",
            "status_reason": null,
            "creation_time": "2015-08-04T20:57:55Z",
            "data": null
        }
    ]
}
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
            
                  <param name="snapshots"
                         style="plain"
                         required="true"
                         type="xsd:list"
                         rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      A list of snapshots and their properties.
    </para>
                     </wadl:doc>
                  </param>
            
                  <param name="id"
                         style="plain"
                         required="true"
                         type="csapi:UUID"
                         rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      The UUID of the snapshot.
    </para>
                     </wadl:doc>
                  </param>
                  <param name="name"
                         style="plain"
                         required="true"
                         type="xsd:string"
                         rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      The name of the snapshot.
    </para>
                     </wadl:doc>
                  </param>
                  <param name="status"
                         style="plain"
                         required="true"
                         type="xsd:string"
                         rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      The status of the snapshot.
    </para>
                     </wadl:doc>
                  </param>
                  <param name="status_reason"
                         style="plain"
                         required="true"
                         type="xsd:string"
                         rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      The reason for the current snapshot status.
    </para>
                     </wadl:doc>
                  </param>
                  <param name="creation_time"
                         style="plain"
                         required="true"
                         type="xsd:dateTime"
                         rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      The date and time when the snapshot was created.
    </para>
                        <para>
      The date and time stamp format is <link xlink:href="https://en.wikipedia.org/wiki/ISO_8601">ISO 8601</link>:
    </para>
                        <programlisting>CCYY-MM-DDThh:mm:ss±hh:mm</programlisting>
                        <para>
      For example, <code>2015-08-27T09:49:58-05:00</code>.
    </para>
                        <para>
      The <code>±hh:mm</code> value, if included, is the time zone as an
      offset from UTC.
    </para>
                     </wadl:doc>
                  </param>
                  <param name="data"
                         style="plain"
                         required="true"
                         type="xsd:dict"
                         rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      The snapshot data.
    </para>
                     </wadl:doc>
                  </param>
               </representation>
            </response>
         </method>
      </resource>
                        
                        
                     
                     <resource path="/v1/{tenant_id}/stacks/{stack_name}/{stack_id}/snapshots/{snapshot_id}"
                id="snapshot_id_snapshots">
         <param name="tenant_id" style="template" rax:id="">
            <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>
                  The ID of the tenant. A tenant is also known as an account
                  or project.
               </para>
            </wadl:doc>
            </param>
         <param name="stack_name" style="template" required="true" rax:id="">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <para>
                        The name of a stack.
                     </para>
                  </wadl:doc>
                  </param>
         <param name="stack_id" style="template" required="true" rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
                           The stack ID.
                        </para>
                     </wadl:doc>
                     </param>
         <param name="snapshot_id" style="template" required="true" rax:id="">
                           <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                              <para>
                                 The snapshot ID.
                              </para>
                           </wadl:doc>
                           </param>
         <method name="GET" rax:id="stack_show_snapshot">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Show snapshot">
               <para role="shortdesc">
            Shows details for a snapshot.
         </para>
            </wadl:doc>
            <response status="200">
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">{
    "snapshot": {
        "id": "7c4e1ef4-bf1b-41ab-a0c8-ce01f4ffdfa1",
        "name": "vol_snapshot",
        "status": "COMPLETE",
        "status_reason": "Stack SNAPSHOT completed successfully",
        "creation_time": "2015-08-04T20:57:55Z",
        "data": {
            "status": "COMPLETE",
            "name": "stack_vol1",
            "stack_user_project_id": "fffa11067b1c48129ddfb78fba2bf09f",
            "environment": {
                "parameters": {},
                "resource_registry": {
                    "resources": {}
                }
            },
            "template": {
                "heat_template_version": "2013-05-23",
                "resources": {
                    "volume": {
                        "type": "OS::Cinder::Volume",
                        "properties": {
                            "size": 1
                        }
                    }
                }
            },
            "action": "SNAPSHOT",
            "project_id": "ecdb08032cd042179692a1b148f6565e",
            "id": "656452c2-e151-40da-8704-c844e69b485c",
            "resources": {
                "volume": {
                    "status": "COMPLETE",
                    "name": "volume",
                    "resource_data": {
                        "backup_id": "99108cf8-398f-461b-a043-bdceb7c9f572"
                    },
                    "resource_id": "3ab8cf79-807b-4c40-b743-0655f91e072f",
                    "action": "SNAPSHOT",
                    "type": "OS::Cinder::Volume",
                    "metadata": {}
                }
            }
        }
    }
}
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
            
                  <param name="snapshot"
                         style="plain"
                         required="true"
                         type="xsd:dict"
                         rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      Key and value pairs that contain snapshot properties.
    </para>
                     </wadl:doc>
                  </param>
                  <param name="project_id"
                         style="plain"
                         required="true"
                         type="csapi:UUID"
                         rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      The UUID of the project.
    </para>
                     </wadl:doc>
                  </param>
                  <param name="resources"
                         style="plain"
                         required="true"
                         type="xsd:dict"
                         rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      The snapshot resources.
    </para>
                     </wadl:doc>
                  </param>
                  <param name="template"
                         style="plain"
                         required="true"
                         type="xsd:dict"
                         rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      Information about the template.
    </para>
                     </wadl:doc>
                  </param>
            
                  <param name="id"
                         style="plain"
                         required="true"
                         type="csapi:UUID"
                         rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      The UUID of the snapshot.
    </para>
                     </wadl:doc>
                  </param>
                  <param name="name"
                         style="plain"
                         required="true"
                         type="xsd:string"
                         rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      The name of the snapshot.
    </para>
                     </wadl:doc>
                  </param>
                  <param name="status"
                         style="plain"
                         required="true"
                         type="xsd:string"
                         rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      The status of the snapshot.
    </para>
                     </wadl:doc>
                  </param>
                  <param name="status_reason"
                         style="plain"
                         required="true"
                         type="xsd:string"
                         rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      The reason for the current snapshot status.
    </para>
                     </wadl:doc>
                  </param>
                  <param name="creation_time"
                         style="plain"
                         required="true"
                         type="xsd:dateTime"
                         rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      The date and time when the snapshot was created.
    </para>
                        <para>
      The date and time stamp format is <link xlink:href="https://en.wikipedia.org/wiki/ISO_8601">ISO 8601</link>:
    </para>
                        <programlisting>CCYY-MM-DDThh:mm:ss±hh:mm</programlisting>
                        <para>
      For example, <code>2015-08-27T09:49:58-05:00</code>.
    </para>
                        <para>
      The <code>±hh:mm</code> value, if included, is the time zone as an
      offset from UTC.
    </para>
                     </wadl:doc>
                  </param>
                  <param name="data"
                         style="plain"
                         required="true"
                         type="xsd:dict"
                         rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      The snapshot data.
    </para>
                     </wadl:doc>
                  </param>
               </representation>
            </response>
         </method>
         <method name="DELETE" rax:id="stack_delete_snapshot">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Delete snapshot">
               <para role="shortdesc">
            Deletes a stack snapshot.
         </para>
            </wadl:doc>
            <response status="204"/>
         </method>
      </resource>
                           
                           
                           
                        
                     <resource path="/v1/{tenant_id}/stacks/{stack_name}/{stack_id}/snapshots/{snapshot_id}/restore"
                id="restore">
         <param name="tenant_id" style="template" rax:id="">
            <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>
                  The ID of the tenant. A tenant is also known as an account
                  or project.
               </para>
            </wadl:doc>
            </param>
         <param name="stack_name" style="template" required="true" rax:id="">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <para>
                        The name of a stack.
                     </para>
                  </wadl:doc>
                  </param>
         <param name="stack_id" style="template" required="true" rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
                           The stack ID.
                        </para>
                     </wadl:doc>
                     </param>
         <param name="snapshot_id" style="template" required="true" rax:id="">
                              <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                                 <para>The snapshot ID.
                                 </para>
                              </wadl:doc>
                              </param>
         <method name="POST" rax:id="stack_restore_snapshot">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Restore snapshot">
               <para role="shortdesc">
            Restores a stack snapshot.
         </para>
               <para>
            You can restore only active stacks from a snapshot. You must
            recreate deleted stacks.
         </para>
            </wadl:doc>
            <response status="202"/>
         </method>
      </resource>
                              
                              
                           
                     <resource path="/v1/{tenant_id}/stacks/{stack_name}/{stack_id}/outputs"
                id="outputs">
         <param name="tenant_id" style="template" rax:id="">
            <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>
                  The ID of the tenant. A tenant is also known as an account
                  or project.
               </para>
            </wadl:doc>
            </param>
         <param name="stack_name" style="template" required="true" rax:id="">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <para>
                        The name of a stack.
                     </para>
                  </wadl:doc>
                  </param>
         <param name="stack_id" style="template" required="true" rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
                           The stack ID.
                        </para>
                     </wadl:doc>
                     </param>
         <method name="GET" rax:id="stack_list_outputs">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="List outputs">
               <para role="shortdesc">
            Lists outputs for a stack.
         </para>
            </wadl:doc>
            <response status="200">
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">{
    "outputs": [
        {
            "output_key": "output name",
            "output_value": "output value",
            "description": "output description",
            "output_error": null
        }
    ]
}
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>
         </method>
      </resource>
                        
                     
                     <resource path="/v1/{tenant_id}/stacks/{stack_name}/{stack_id}/outputs/{output_key}"
                id="output_key">
         <param name="tenant_id" style="template" rax:id="">
            <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>
                  The ID of the tenant. A tenant is also known as an account
                  or project.
               </para>
            </wadl:doc>
            </param>
         <param name="stack_name" style="template" required="true" rax:id="">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <para>
                        The name of a stack.
                     </para>
                  </wadl:doc>
                  </param>
         <param name="stack_id" style="template" required="true" rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
                           The stack ID.
                        </para>
                     </wadl:doc>
                     </param>
         <param name="output_key" style="template" required="true" rax:id="">
                           <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>The key of a stack output.</para>
            </wadl:doc>
                           </param>
         <method name="GET" rax:id="stack_show_output">
            <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN" title="Show output">
               <para role="shortdesc">
            Shows details for a stack output.
         </para>
            </wadl:doc>
            <response status="200">
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">{
    "output": {
        "output_key": "output_name",
        "output_value": "output_value",
        "description": "output description",
        "output_error": null
    }
}
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>
         </method>
      </resource>
                           
                           
                        
                     <resource path="/v1/{tenant_id}/stacks/{stack_name}/{stack_id}/actions"
                id="actions">
         <param name="tenant_id" style="template" rax:id="">
            <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>
                  The ID of the tenant. A tenant is also known as an account
                  or project.
               </para>
            </wadl:doc>
            </param>
         <param name="stack_name" style="template" required="true" rax:id="">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <para>
                        The name of a stack.
                     </para>
                  </wadl:doc>
                  </param>
         <param name="stack_id" style="template" required="true" rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
                           The stack ID.
                        </para>
                     </wadl:doc>
                     </param>
         <method name="POST" rax:id="stack_action_suspend">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Suspend stack">
               <para role="shortdesc">
            Suspends a stack.
         </para>
            </wadl:doc>
            <request>
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">{
    "suspend": null
}
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
                  <param name="suspend" style="plain" required="true" rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
                  Specify the <code>suspend</code> action in the request body.
               </para>
                     </wadl:doc>
                  </param>
               </representation>
            </request>
            <response status="200"/>
         </method>
         <method name="POST" rax:id="stack_action_resume">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Resume stack">
               <para role="shortdesc">
            Resumes a suspended stack.
         </para>
            </wadl:doc>
            <request>
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">{
    "resume": null
}
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
                  <param name="resume" style="plain" required="true" rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
                  Specify the <code>resume</code> action in the request body.
               </para>
                     </wadl:doc>
                  </param>
               </representation>
            </request>
            <response status="200"/>
         </method>
         <method name="POST" rax:id="stack_action_cancel_update">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Cancel stack update">
               <para role="shortdesc">
            Cancels a currently running update of a stack.
         </para>
            </wadl:doc>
            <request>
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">{
    "cancel_update": null
}
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
                  <param name="cancel_update" style="plain" required="true" rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
                  Specify the <code>cancel_update</code> action in the request
                  body.
               </para>
                     </wadl:doc>
                  </param>
               </representation>
            </request>
            <response status="201"/>
         </method>
         <method name="POST" rax:id="stack_action_check">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Check stack resources">
               <para role="shortdesc">
            Checks whether the resources are in expected states for a stack.
         </para>
            </wadl:doc>
            <request>
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">{
    "check": null
}
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
                  <param name="check" style="plain" required="true" rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
                  Specify the <code>check</code> action in the request body.
               </para>
                     </wadl:doc>
                  </param>
               </representation>
            </request>
            <response status="201"/>
         </method>
      </resource>
                        
                        
                        
                        
                     
                     <resource path="/v1/{tenant_id}/stacks/{stack_name}/{stack_id}/events"
                id="events2">
         <param name="tenant_id" style="template" rax:id="">
            <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>
                  The ID of the tenant. A tenant is also known as an account
                  or project.
               </para>
            </wadl:doc>
            </param>
         <param name="stack_name" style="template" required="true" rax:id="">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <para>
                        The name of a stack.
                     </para>
                  </wadl:doc>
                  </param>
         <param name="stack_id" style="template" required="true" rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
                           The stack ID.
                        </para>
                     </wadl:doc>
                     </param>
         <method name="GET" rax:id="stack_event_list">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="List stack events">
               <para role="shortdesc">
            Lists events for a stack.
         </para>
            </wadl:doc>
            <request>
               <representation mediaType="application/json">
                  <param name="resource_action" style="query" required="false" rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
                  Filters the event list by a resource action. You
                  can use this filter multiple times to filter by multiple
                  resource actions. Valid resource actions are
                  <code>ADOPT</code>, <code>CHECK</code>, <code>CREATE</code>,
                  <code>DELETE</code>, <code>INIT</code>,
                  <code>RESTORE</code>, <code>RESUME</code>,
                  <code>ROLLBACK</code>, <code>SNAPSHOT</code>,
                  <code>SUSPEND</code>, and <code>UPDATE</code>.
               </para>
                     </wadl:doc>
                  </param>
                  <param name="resource_status" style="query" required="false" rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
                  Filters the event list by a resource status. You
                  can use this filter multiple times to filter by multiple
                  resource statuses. Valid resource statuses are
                  <code>COMPLETE</code>, <code>FAILED</code>, and
                  <code>IN_PROGRESS</code>.
               </para>
                     </wadl:doc>
                  </param>
                  <param name="resource_name" style="query" required="false" rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
                  Filters the event list by a resource name. You can
                  use this filter multiple times to filter by multiple
                  resource names.
               </para>
                     </wadl:doc>
                  </param>
                  <param name="resource_type" style="query" required="false" rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
                  Filters the event list by a resource type. You can
                  use this filter multiple times to filter by multiple
                  resource types. Valid resource types include
                  <code>OS::Cinder::Volume</code>,
                  <code>OS::Nova::Server</code>,
                  <code>OS::Neutron::Port</code>, and so on.
               </para>
                     </wadl:doc>
                  </param>
            

                  <param name="limit"
                         style="query"
                         required="false"
                         type="xsd:int"
                         rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
            Requests a page size of items. Returns a number of items up to a
            limit value. Use the <code>limit</code> parameter to make an
            initial limited request and use the ID of the last-seen item from
            the response as the <code>marker</code> parameter value in a
            subsequent limited request.
        </para>
                     </wadl:doc>
                  </param>

                  <param name="marker"
                         style="query"
                         required="false"
                         type="xsd:string"
                         rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
            The ID of the last-seen item. Use the <code>limit</code> parameter
            to make an initial limited request and use the ID of the last-seen
            item from the response as the <code>marker</code> parameter value
            in a subsequent limited request.
        </para>
                     </wadl:doc>
                  </param>
            
                  <param name="sort_keys" style="query" required="false" rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      Sorts the list by the <code>resource_type</code> or
      <code>created_at</code> key.
   </para>
                     </wadl:doc>
                  </param> 
            
                  <param name="sort_dir" style="query" required="false" rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      The sort direction of the list. A valid value is
      <code>asc</code> (ascending) or <code>desc</code> (descending).
   </para>
                     </wadl:doc>
                  </param> 
               </representation>
            </request>
            <response status="200">
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">{
    "events": [
        {
            "resource_name": "port",
            "event_time": "2014-07-23T08:14:47Z",
            "links": [
                {
                    "href": "http://192.168.123.200:8004/v1/dc4b074874244f7693dd65583733a758/stacks/aws_port/db467ed1-50b5-4a3e-aeb1-396ff1d151c5/resources/port/events/474bfdf0-a450-46ec-a78a-0c7faa404073",
                    "rel": "self"
                },
                {
                    "href": "http://192.168.123.200:8004/v1/dc4b074874244f7693dd65583733a758/stacks/aws_port/db467ed1-50b5-4a3e-aeb1-396ff1d151c5/resources/port",
                    "rel": "resource"
                },
                {
                    "href": "http://192.168.123.200:8004/v1/dc4b074874244f7693dd65583733a758/stacks/aws_port/db467ed1-50b5-4a3e-aeb1-396ff1d151c5",
                    "rel": "stack"
                }
            ],
            "logical_resource_id": "port",
            "resource_status": "CREATE_FAILED",
            "resource_status_reason": "NotFound: Subnet f8a699d0-3537-429e-87a5-6b5a8d0c2bf0 could not be found",
            "physical_resource_id": null,
            "id": "474bfdf0-a450-46ec-a78a-0c7faa404073"
        },
        {
            "resource_name": "port",
            "event_time": "2014-07-23T08:14:47Z",
            "links": [
                {
                    "href": "http://192.168.123.200:8004/v1/dc4b074874244f7693dd65583733a758/stacks/aws_port/db467ed1-50b5-4a3e-aeb1-396ff1d151c5/resources/port/events/66fa95b6-e6f8-4f05-b1af-e828f5aba04c",
                    "rel": "self"
                },
                {
                    "href": "http://192.168.123.200:8004/v1/dc4b074874244f7693dd65583733a758/stacks/aws_port/db467ed1-50b5-4a3e-aeb1-396ff1d151c5/resources/port",
                    "rel": "resource"
                },
                {
                    "href": "http://192.168.123.200:8004/v1/dc4b074874244f7693dd65583733a758/stacks/aws_port/db467ed1-50b5-4a3e-aeb1-396ff1d151c5",
                    "rel": "stack"
                }
            ],
            "logical_resource_id": "port",
            "resource_status": "CREATE_IN_PROGRESS",
            "resource_status_reason": "state changed",
            "physical_resource_id": null,
            "id": "66fa95b6-e6f8-4f05-b1af-e828f5aba04c"
        }
    ]
}
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>
      
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Bad Request" xml:lang="EN"/>
            </response>
            <response status="401">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                         title="Unauthorized"
                         xml:lang="EN"/>
            </response> 
      
            <response status="404">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Not Found" xml:lang="EN"/>
            </response> 
      
            <response status="500">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                         title="Internal Server Error"
                         xml:lang="EN"/>
            </response>
         </method>
      </resource>
                        
                     
                     <resource path="/v1/{tenant_id}/stacks/{stack_name}/{stack_id}/resources"
                id="resources2">
         <param name="tenant_id" style="template" rax:id="">
            <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>
                  The ID of the tenant. A tenant is also known as an account
                  or project.
               </para>
            </wadl:doc>
            </param>
         <param name="stack_name" style="template" required="true" rax:id="">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <para>
                        The name of a stack.
                     </para>
                  </wadl:doc>
                  </param>
         <param name="stack_id" style="template" required="true" rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
                           The stack ID.
                        </para>
                     </wadl:doc>
                     </param>
         <method name="GET" rax:id="resource_list">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="List resources">
               <para role="shortdesc">
            Lists resources in a stack.
         </para>
            </wadl:doc>
            <request>
               <representation mediaType="application/json">
                  <param name="nested_depth" style="query" required="false" rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
                  Includes resources from nested stacks up to the
                  <code>nested_depth</code> levels of recursion.
               </para>
                     </wadl:doc>
                  </param>
                  <param name="with_detail" style="query" required="false" rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
                  Enables detailed resource information for each resource in
                  list of resources.
               </para>
                     </wadl:doc>
                  </param>
               </representation>
            </request>
            <response status="200">
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <para>
               Lists resources in a stack, in JSON format.
            </para>
                     <xsdxt:code>
                        <programlisting language="javascript">{
    "resources": [
        {
            "creation_time": "2015-06-25T14:59:53",
            "links": [
                {
                    "href": "http://hostname/v1/1234/stacks/mystack/629a32d0-ac4f-4f63-b58d-f0d047b1ba4c/resources/random_key_name",
                    "rel": "self"
                },
                {
                    "href": "http://hostname/v1/1234/stacks/mystack/629a32d0-ac4f-4f63-b58d-f0d047b1ba4c",
                    "rel": "stack"
                }
            ],
            "logical_resource_id": "random_key_name",
            "physical_resource_id": "mystack-random_key_name-pmjmy5pks735",
            "required_by": [],
            "resource_name": "random_key_name",
            "resource_status": "CREATE_COMPLETE",
            "resource_status_reason": "state changed",
            "resource_type": "OS::Heat::RandomString",
            "updated_time": "2015-06-25T14:59:53"
        }
    ]
}
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
          
                  <param name="resources"
                         style="plain"
                         required="true"
                         type="xsd:list"
                         rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      A list of resources and their properties.
    </para>
                     </wadl:doc>
                  </param>
          
                  <param name="resource"
                         style="plain"
                         required="true"
                         type="xsd:dict"
                         rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      Key and value pairs that contain stack resource properties.
    </para>
                     </wadl:doc>
                  </param>
                  <param name="creation_time"
                         style="plain"
                         required="true"
                         type="xsd:dateTime"
                         rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      The date and time when the stack resource was created.
    </para>
                        <para>
      The date and time stamp format is <link xlink:href="https://en.wikipedia.org/wiki/ISO_8601">ISO 8601</link>:
    </para>
                        <programlisting>CCYY-MM-DDThh:mm:ss±hh:mm</programlisting>
                        <para>
      For example, <code>2015-08-27T09:49:58-05:00</code>.
    </para>
                        <para>
      The <code>±hh:mm</code> value, if included, is the time zone as an
      offset from UTC.
    </para>
                     </wadl:doc>
                  </param>
                  <param name="description"
                         style="plain"
                         required="true"
                         type="xsd:string"
                         rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      The description of the stack resource.
    </para>
                     </wadl:doc>
                  </param>
                  <param name="logical_resource_id"
                         style="plain"
                         required="true"
                         type="xsd:string"
                         rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      The ID of the logical stack resource.
    </para>
                     </wadl:doc>
                  </param>
                  <param name="physical_resource_id"
                         style="plain"
                         required="true"
                         type="xsd:string"
                         rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      The ID of the stack physical resource.
    </para>
                     </wadl:doc>
                  </param>
                  <param name="required_by"
                         style="plain"
                         required="true"
                         type="xsd:list"
                         rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      The list of resources that require this stack resource.
    </para>
                     </wadl:doc>
                  </param>
                  <param name="resource_name"
                         style="plain"
                         required="true"
                         type="xsd:string"
                         rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      The name of the resource.
    </para>
                     </wadl:doc>
                  </param>
                  <param name="resource_status"
                         style="plain"
                         required="true"
                         type="xsd:string"
                         rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      The status of the resource.
    </para>
                     </wadl:doc>
                  </param>
                  <param name="resource_status_reason"
                         style="plain"
                         required="true"
                         type="xsd:string"
                         rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      The reason for the current stack resource state.
    </para>
                     </wadl:doc>
                  </param>
                  <param name="resource_type"
                         style="plain"
                         required="true"
                         type="xsd:string"
                         rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      The type of the resource.
    </para>
                     </wadl:doc>
                  </param>
                  <param name="updated_time"
                         style="plain"
                         required="true"
                         type="xsd:dateTime"
                         rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      The date and time when the stack resource was updated.
    </para>
                        <para>
      The date and time stamp format is <link xlink:href="https://en.wikipedia.org/wiki/ISO_8601">ISO 8601</link>:
    </para>
                        <programlisting>CCYY-MM-DDThh:mm:ss±hh:mm</programlisting>
                        <para>
      For example, <code>2015-08-27T09:49:58-05:00</code>.
    </para>
                        <para>
      The <code>±hh:mm</code> value, if included, is the time zone as an offset from UTC.
    </para>
                        <para>
      If the <code>updated_at</code> date and time stamp is not set, its value is
      <code>null</code>.
    </para>
                     </wadl:doc>
                  </param>
               </representation>
            </response>
      
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Bad Request" xml:lang="EN"/>
            </response>
            <response status="401">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                         title="Unauthorized"
                         xml:lang="EN"/>
            </response> 
      
            <response status="404">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Not Found" xml:lang="EN"/>
            </response> 
         </method>
      </resource>
                        
                        <resource path="/v1/{tenant_id}/stacks/{stack_name}/{stack_id}/resources/{resource_name}"
                id="resource_name">
         <param name="tenant_id" style="template" rax:id="">
            <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>
                  The ID of the tenant. A tenant is also known as an account
                  or project.
               </para>
            </wadl:doc>
            </param>
         <param name="stack_name" style="template" required="true" rax:id="">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <para>
                        The name of a stack.
                     </para>
                  </wadl:doc>
                  </param>
         <param name="stack_id" style="template" required="true" rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
                           The stack ID.
                        </para>
                     </wadl:doc>
                     </param>
         <param name="resource_name" style="template" required="true" rax:id="">
                           <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                              <para>
                                 The name of a resource in the stack.
                              </para>
                           </wadl:doc>
                           </param>
         <method name="GET" rax:id="resource_show">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Show resource data">
               <para role="shortdesc">
            Shows data for a resource.
         </para>
            </wadl:doc>
            <response status="200">
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <para>
               Shows resource data for a resource, in JSON format.
            </para>
                     <xsdxt:code>
                        <programlisting language="javascript">{
    "resource": {
        "attributes": {
            "value": "I9S20uIp"
        },
        "creation_time": "2015-06-25T14:59:53",
        "description": "",
        "links": [
            {
                "href": "http://hostname/v1/1234/stacks/mystack/629a32d0-ac4f-4f63-b58d-f0d047b1ba4c/resources/random_key_name",
                "rel": "self"
            },
            {
                "href": "http://hostname/v1/1234/stacks/mystack/629a32d0-ac4f-4f63-b58d-f0d047b1ba4c",
                "rel": "stack"
            }
        ],
        "logical_resource_id": "random_key_name",
        "physical_resource_id": "mystack-random_key_name-pmjmy5pks735",
        "required_by": [],
        "resource_name": "random_key_name",
        "resource_status": "CREATE_COMPLETE",
        "resource_status_reason": "state changed",
        "resource_type": "OS::Heat::RandomString",
        "updated_time": "2015-06-25T14:59:53"
    }
}
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
          
                  <param name="resource"
                         style="plain"
                         required="true"
                         type="xsd:dict"
                         rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      Key and value pairs that contain stack resource properties.
    </para>
                     </wadl:doc>
                  </param>
                  <param name="creation_time"
                         style="plain"
                         required="true"
                         type="xsd:dateTime"
                         rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      The date and time when the stack resource was created.
    </para>
                        <para>
      The date and time stamp format is <link xlink:href="https://en.wikipedia.org/wiki/ISO_8601">ISO 8601</link>:
    </para>
                        <programlisting>CCYY-MM-DDThh:mm:ss±hh:mm</programlisting>
                        <para>
      For example, <code>2015-08-27T09:49:58-05:00</code>.
    </para>
                        <para>
      The <code>±hh:mm</code> value, if included, is the time zone as an
      offset from UTC.
    </para>
                     </wadl:doc>
                  </param>
                  <param name="description"
                         style="plain"
                         required="true"
                         type="xsd:string"
                         rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      The description of the stack resource.
    </para>
                     </wadl:doc>
                  </param>
                  <param name="logical_resource_id"
                         style="plain"
                         required="true"
                         type="xsd:string"
                         rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      The ID of the logical stack resource.
    </para>
                     </wadl:doc>
                  </param>
                  <param name="physical_resource_id"
                         style="plain"
                         required="true"
                         type="xsd:string"
                         rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      The ID of the stack physical resource.
    </para>
                     </wadl:doc>
                  </param>
                  <param name="required_by"
                         style="plain"
                         required="true"
                         type="xsd:list"
                         rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      The list of resources that require this stack resource.
    </para>
                     </wadl:doc>
                  </param>
                  <param name="resource_name"
                         style="plain"
                         required="true"
                         type="xsd:string"
                         rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      The name of the resource.
    </para>
                     </wadl:doc>
                  </param>
                  <param name="resource_status"
                         style="plain"
                         required="true"
                         type="xsd:string"
                         rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      The status of the resource.
    </para>
                     </wadl:doc>
                  </param>
                  <param name="resource_status_reason"
                         style="plain"
                         required="true"
                         type="xsd:string"
                         rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      The reason for the current stack resource state.
    </para>
                     </wadl:doc>
                  </param>
                  <param name="resource_type"
                         style="plain"
                         required="true"
                         type="xsd:string"
                         rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      The type of the resource.
    </para>
                     </wadl:doc>
                  </param>
                  <param name="updated_time"
                         style="plain"
                         required="true"
                         type="xsd:dateTime"
                         rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      The date and time when the stack resource was updated.
    </para>
                        <para>
      The date and time stamp format is <link xlink:href="https://en.wikipedia.org/wiki/ISO_8601">ISO 8601</link>:
    </para>
                        <programlisting>CCYY-MM-DDThh:mm:ss±hh:mm</programlisting>
                        <para>
      For example, <code>2015-08-27T09:49:58-05:00</code>.
    </para>
                        <para>
      The <code>±hh:mm</code> value, if included, is the time zone as an offset from UTC.
    </para>
                        <para>
      If the <code>updated_at</code> date and time stamp is not set, its value is
      <code>null</code>.
    </para>
                     </wadl:doc>
                  </param>
               </representation>
            </response>
      
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Bad Request" xml:lang="EN"/>
            </response>
            <response status="401">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                         title="Unauthorized"
                         xml:lang="EN"/>
            </response> 
      
            <response status="404">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Not Found" xml:lang="EN"/>
            </response> 
         </method>
      </resource>
                           
                           
                           <resource id="events4"
                path="/v1/{tenant_id}/stacks/{stack_name}/{stack_id}/resources/{resource_name}/events">
         <param name="tenant_id" style="template" rax:id="">
            <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>
                  The ID of the tenant. A tenant is also known as an account
                  or project.
               </para>
            </wadl:doc>
            </param>
         <param name="stack_name" style="template" required="true" rax:id="">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <para>
                        The name of a stack.
                     </para>
                  </wadl:doc>
                  </param>
         <param name="stack_id" style="template" required="true" rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
                           The stack ID.
                        </para>
                     </wadl:doc>
                     </param>
         <param name="resource_name" style="template" required="true" rax:id="">
                           <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                              <para>
                                 The name of a resource in the stack.
                              </para>
                           </wadl:doc>
                           </param>
         <method name="GET" rax:id="resource_event_list">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="List resource events">
               <para role="shortdesc">
            Lists events for a stack resource.
         </para>
            </wadl:doc>
            <request>
               <representation mediaType="application/json">
                  <param name="resource_action" style="query" required="false" rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
                  Filters the event list by a resource action. You
                  can use this filter multiple times to filter by multiple
                  resource actions. Valid resource actions are
                  <code>ADOPT</code>, <code>CHECK</code>, <code>CREATE</code>,
                  <code>DELETE</code>, <code>INIT</code>,
                  <code>RESTORE</code>, <code>RESUME</code>,
                  <code>ROLLBACK</code>, <code>SNAPSHOT</code>,
                  <code>SUSPEND</code>, and <code>UPDATE</code>.
               </para>
                     </wadl:doc>
                  </param>
                  <param name="resource_status" style="query" required="false" rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
                  Filters the event list by a resource status. You
                  can use this filter multiple times to filter by multiple
                  resource statuses. Valid resource statuses are
                  <code>COMPLETE</code>, <code>FAILED</code>, and
                  <code>IN_PROGRESS</code>.
               </para>
                     </wadl:doc>
                  </param>
                  <param name="resource_type" style="query" required="false" rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
                  Filters the event list by a resource type. You can
                  use this filter multiple times to filter by multiple
                  resource types. Valid resource types include
                  <code>OS::Cinder::Volume</code>,
                  <code>OS::Nova::Server</code>,
                  <code>OS::Neutron::Port</code>, and so on.
               </para>
                     </wadl:doc>
                  </param>
            

                  <param name="limit"
                         style="query"
                         required="false"
                         type="xsd:int"
                         rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
            Requests a page size of items. Returns a number of items up to a
            limit value. Use the <code>limit</code> parameter to make an
            initial limited request and use the ID of the last-seen item from
            the response as the <code>marker</code> parameter value in a
            subsequent limited request.
        </para>
                     </wadl:doc>
                  </param>

                  <param name="marker"
                         style="query"
                         required="false"
                         type="xsd:string"
                         rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
            The ID of the last-seen item. Use the <code>limit</code> parameter
            to make an initial limited request and use the ID of the last-seen
            item from the response as the <code>marker</code> parameter value
            in a subsequent limited request.
        </para>
                     </wadl:doc>
                  </param>
            
                  <param name="sort_keys" style="query" required="false" rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      Sorts the list by the <code>resource_type</code> or
      <code>created_at</code> key.
   </para>
                     </wadl:doc>
                  </param> 
            
                  <param name="sort_dir" style="query" required="false" rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      The sort direction of the list. A valid value is
      <code>asc</code> (ascending) or <code>desc</code> (descending).
   </para>
                     </wadl:doc>
                  </param> 
               </representation>
            </request>
            <response status="200">
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">{
    "events": [
        {
            "resource_name": "port",
            "event_time": "2014-07-23T08:14:47Z",
            "links": [
                {
                    "href": "http://192.168.123.200:8004/v1/dc4b074874244f7693dd65583733a758/stacks/aws_port/db467ed1-50b5-4a3e-aeb1-396ff1d151c5/resources/port/events/474bfdf0-a450-46ec-a78a-0c7faa404073",
                    "rel": "self"
                },
                {
                    "href": "http://192.168.123.200:8004/v1/dc4b074874244f7693dd65583733a758/stacks/aws_port/db467ed1-50b5-4a3e-aeb1-396ff1d151c5/resources/port",
                    "rel": "resource"
                },
                {
                    "href": "http://192.168.123.200:8004/v1/dc4b074874244f7693dd65583733a758/stacks/aws_port/db467ed1-50b5-4a3e-aeb1-396ff1d151c5",
                    "rel": "stack"
                }
            ],
            "logical_resource_id": "port",
            "resource_status": "CREATE_FAILED",
            "resource_status_reason": "NotFound: Subnet f8a699d0-3537-429e-87a5-6b5a8d0c2bf0 could not be found",
            "physical_resource_id": null,
            "id": "474bfdf0-a450-46ec-a78a-0c7faa404073"
        },
        {
            "resource_name": "port",
            "event_time": "2014-07-23T08:14:47Z",
            "links": [
                {
                    "href": "http://192.168.123.200:8004/v1/dc4b074874244f7693dd65583733a758/stacks/aws_port/db467ed1-50b5-4a3e-aeb1-396ff1d151c5/resources/port/events/66fa95b6-e6f8-4f05-b1af-e828f5aba04c",
                    "rel": "self"
                },
                {
                    "href": "http://192.168.123.200:8004/v1/dc4b074874244f7693dd65583733a758/stacks/aws_port/db467ed1-50b5-4a3e-aeb1-396ff1d151c5/resources/port",
                    "rel": "resource"
                },
                {
                    "href": "http://192.168.123.200:8004/v1/dc4b074874244f7693dd65583733a758/stacks/aws_port/db467ed1-50b5-4a3e-aeb1-396ff1d151c5",
                    "rel": "stack"
                }
            ],
            "logical_resource_id": "port",
            "resource_status": "CREATE_IN_PROGRESS",
            "resource_status_reason": "state changed",
            "physical_resource_id": null,
            "id": "66fa95b6-e6f8-4f05-b1af-e828f5aba04c"
        }
    ]
}
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>
      
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Bad Request" xml:lang="EN"/>
            </response>
            <response status="401">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                         title="Unauthorized"
                         xml:lang="EN"/>
            </response> 
      
            <response status="404">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Not Found" xml:lang="EN"/>
            </response> 
         </method>
      </resource>
                              
                           
                           <resource path="/v1/{tenant_id}/stacks/{stack_name}/{stack_id}/resources/{resource_name}/metadata"
                id="metadata">
         <param name="tenant_id" style="template" rax:id="">
            <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>
                  The ID of the tenant. A tenant is also known as an account
                  or project.
               </para>
            </wadl:doc>
            </param>
         <param name="stack_name" style="template" required="true" rax:id="">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <para>
                        The name of a stack.
                     </para>
                  </wadl:doc>
                  </param>
         <param name="stack_id" style="template" required="true" rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
                           The stack ID.
                        </para>
                     </wadl:doc>
                     </param>
         <param name="resource_name" style="template" required="true" rax:id="">
                           <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                              <para>
                                 The name of a resource in the stack.
                              </para>
                           </wadl:doc>
                           </param>
         <method name="GET" rax:id="resource_metadata">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Show resource metadata">
               <para role="shortdesc">
            Shows metadata for a resource.
         </para>
            </wadl:doc>
            <response status="200">
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">{
    "metadata": {
        "some_key": "some_value",
        "some_other_key": "some_other_value"
    }
}
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>
         </method>
      </resource>
                              
                           
                           <resource path="/v1/{tenant_id}/stacks/{stack_name}/{stack_id}/resources/{resource_name}/signal"
                id="signal">
         <param name="tenant_id" style="template" rax:id="">
            <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>
                  The ID of the tenant. A tenant is also known as an account
                  or project.
               </para>
            </wadl:doc>
            </param>
         <param name="stack_name" style="template" required="true" rax:id="">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <para>
                        The name of a stack.
                     </para>
                  </wadl:doc>
                  </param>
         <param name="stack_id" style="template" required="true" rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
                           The stack ID.
                        </para>
                     </wadl:doc>
                     </param>
         <param name="resource_name" style="template" required="true" rax:id="">
                           <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                              <para>
                                 The name of a resource in the stack.
                              </para>
                           </wadl:doc>
                           </param>
         <method name="POST" rax:id="resource_signal">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Send a signal to a resource">
               <para role="shortdesc">
            Sends a signal to a resource.
         </para>
               <para>
            The contents of the request body depends on the resource to
            which you send a signal.
         </para>
               <para>
            Some resources cannot receive signals. If you send them a
            signal, they return a 400 error code.
         </para>
            </wadl:doc>
            <response status="200"/>
         </method>
      </resource>
                              
                           
                           <resource path="/v1/{tenant_id}/stacks/{stack_name}/{stack_id}/resources/{resource_name}/events/{event_id}"
                id="event_id">
         <param name="tenant_id" style="template" rax:id="">
            <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>
                  The ID of the tenant. A tenant is also known as an account
                  or project.
               </para>
            </wadl:doc>
            </param>
         <param name="stack_name" style="template" required="true" rax:id="">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <para>
                        The name of a stack.
                     </para>
                  </wadl:doc>
                  </param>
         <param name="stack_id" style="template" required="true" rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
                           The stack ID.
                        </para>
                     </wadl:doc>
                     </param>
         <param name="resource_name" style="template" required="true" rax:id="">
                           <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                              <para>
                                 The name of a resource in the stack.
                              </para>
                           </wadl:doc>
                           </param>
         <param name="event_id" style="template" required="true" rax:id="">
                                 <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                                    <para>
                                       The ID of an event that is related to
                                       the resource in the stack.
                                    </para>
                                 </wadl:doc>
                                 </param>
         <method name="GET" rax:id="event_show">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Show event details">
               <para role="shortdesc">
            Shows details for an event.
         </para>
            </wadl:doc>
            <response status="200">
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">{
    "event": {
        "event_time": "2015-06-25T14:59:53",
        "id": "8db23e2e-72b2-47a2-9ed9-b52417f56e50",
        "links": [
            {
                "href": "http://hostname/v1/1234/stacks/mystack/56789/resources/random_key_name/events/8db23e2e-72b2-47a2-9ed9-b52417f56e50",
                "rel": "self"
            },
            {
                "href": "http://hostname/v1/1234/stacks/mystack/56789/resources/random_key_name",
                "rel": "resource"
            },
            {
                "href": "http://hostname/v1/1234/stacks/mystack/56789",
                "rel": "stack"
            }
        ],
        "logical_resource_id": "random_key_name",
        "physical_resource_id": null,
        "resource_name": "random_key_name",
        "resource_properties": {
            "character_classes": null,
            "character_sequences": null,
            "length": 8,
            "salt": null,
            "sequence": null
        },
        "resource_status": "CREATE_IN_PROGRESS",
        "resource_status_reason": "state changed",
        "resource_type": "OS::Heat::RandomString"
    }
}
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>
         </method>
      </resource>
                                 
                                 
                              
                        
                     
                     <resource path="/v1/{tenant_id}/stacks/{stack_name}/{stack_id}/template"
                id="template">
         <param name="tenant_id" style="template" rax:id="">
            <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>
                  The ID of the tenant. A tenant is also known as an account
                  or project.
               </para>
            </wadl:doc>
            </param>
         <param name="stack_name" style="template" required="true" rax:id="">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <para>
                        The name of a stack.
                     </para>
                  </wadl:doc>
                  </param>
         <param name="stack_id" style="template" required="true" rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
                           The stack ID.
                        </para>
                     </wadl:doc>
                     </param>
         <method name="GET" rax:id="stack_template">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Get stack template">
               <para role="shortdesc">
            Gets a template for a stack.
         </para>
            </wadl:doc>
            <response status="200">
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <para>
               Returns the template for a stack.
            </para>
                     <xsdxt:code>
                        <programlisting language="javascript">{
    "description": "Hello world HOT template that just defines a single server. Contains just base features to verify base HOT support.\n",
    "heat_template_version": "2013-05-23",
    "outputs": {
        "foo": {
            "description": "Show foo parameter value",
            "value": {
                "get_param": "foo"
            }
        }
    },
    "parameters": {
        "foo": {
            "default": "secret",
            "description": "Name of an existing key pair to use for the server",
            "hidden": true,
            "type": "string"
        }
    },
    "resources": {
        "random_key_name": {
            "properties": {
                "length": 8
            },
            "type": "OS::Heat::RandomString"
        }
    }
}
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
          
                  <param name="description"
                         style="plain"
                         required="true"
                         type="xsd:string"
                         rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      The description of the stack template.
    </para>
                     </wadl:doc>
                  </param>
                  <param name="heat_template_version"
                         style="plain"
                         required="true"
                         type="xsd:string"
                         rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      The version of the heat template.
    </para>
                     </wadl:doc>
                  </param>
                  <param name="outputs"
                         style="plain"
                         required="true"
                         type="xsd:dict"
                         rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      Key and value pairs that contain output data.
    </para>
                     </wadl:doc>
                  </param>
                  <param name="parameters"
                         style="plain"
                         required="true"
                         type="xsd:dict"
                         rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      Key and value pairs that contain template parameters.
    </para>
                     </wadl:doc>
                  </param>
                  <param name="resources"
                         style="plain"
                         required="true"
                         type="xsd:dict"
                         rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      The required sources for creating the stack
      template.
    </para>
                     </wadl:doc>
                  </param>
               </representation>
            </response>
      
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Bad Request" xml:lang="EN"/>
            </response>
            <response status="401">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                         title="Unauthorized"
                         xml:lang="EN"/>
            </response> 
      
            <response status="404">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Not Found" xml:lang="EN"/>
            </response> 
      
            <response status="500">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                         title="Internal Server Error"
                         xml:lang="EN"/>
            </response>
         </method>
      </resource>
                        
                     
                  
               
            <resource id="validate_template" path="/v1/{tenant_id}/validate">
         <param name="tenant_id" style="template" rax:id="">
            <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>
                  The ID of the tenant. A tenant is also known as an account
                  or project.
               </para>
            </wadl:doc>
            </param>
         <method name="POST" rax:id="template_validate">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Validate template">
               <para role="shortdesc">
            Validates a template.
         </para>
            </wadl:doc>
            <request>
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">{
    "template_url": "/PATH_TO_HEAT_TEMPLATES/WordPress_Single_Instance.template"
}
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
            
                  <param name="template_url" style="plain" required="false" rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      A URI to the location containing the stack template
      on which to perform the operation.
   </para>
                        <para>
      See the description of the <code>template</code>
      parameter for information about the expected template
      content located at the URI.
   </para>
                        <para>
      This parameter is only required when you omit the
      <code>template</code> parameter. If you specify both parameters,
      this parameter is ignored.
   </para>
                     </wadl:doc>
                  </param>
            
                  <param name="template" style="plain" required="false" rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      The stack template on which to perform the operation.
   </para>
                        <para>
      This parameter is always provided as a <code>string</code> in the JSON
      request body. The content of the string is a JSON- or YAML-formatted
      Orchestration template. For example:
   </para>
                        <programlisting language="json">"template": {
    "heat_template_version": "2013-05-23",
    ...}</programlisting>
                        <para>
      This parameter is required only when you omit the
      <code>template_url</code> parameter. If you specify both parameters,
      this value overrides the <code>template_url</code> parameter value.
   </para>
                     </wadl:doc>
                  </param>
            
                  <param name="environment" style="plain" required="false" rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      A JSON environment for the stack.
   </para>
                     </wadl:doc>
                  </param>
               </representation>
            </request>
            <response status="200">
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">{
    "Description": "A template that provides a single server instance.",
    "Parameters": {
        "server-size": {
            "default": "1GB Standard Instance",
            "description": "Server size",
            "type": "String",
            "constraints": [
                {
                    "allowed_values": [
                        "512MB Standard Instance",
                        "1GB Standard Instance",
                        "4GB Standard Instance",
                        "8GB Standard Instance"
                    ],
                    "description": "Must be a valid server size."
                }
            ]
        },
        "key_name": {
            "description": "Keypair name for SSH access to the server",
            "required": true,
            "type": "String"
        },
        "server_name": {
            "default": "My server",
            "description": "My server",
            "type": "String"
        }
    },
    "ParameterGroups": [
        {
            "label": "Parameter groups",
            "description": "My parameter groups",
            "parameters": [
                "param_name-1",
                "param_name-2"
            ]
        }
    ]
}
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
                  <param name="Description" style="plain" required="true" rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
                     The description specified in the template.
                  </para>
                     </wadl:doc>
                  </param>
                  <param name="Parameters"
                         style="plain"
                         type="object"
                         required="true"
                         rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
                  An object that defines all input parameters that are defined
                  in the template. Indexed by parameter name.
               </para>
                     </wadl:doc>
                  </param>
                  <param name="ParameterGroups"
                         style="plain"
                         type="list"
                         required="false"
                         rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
                  A list of parameter groups. Each group contains a list of
                  parameter names.
               </para>
                     </wadl:doc>
                  </param>
               </representation>
            </response>
         </method>
      </resource>
               
            <resource id="list_template_versions" path="/v1/{tenant_id}/template_versions">
         <param name="tenant_id" style="template" rax:id="">
            <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>
                  The ID of the tenant. A tenant is also known as an account
                  or project.
               </para>
            </wadl:doc>
            </param>
         <method name="GET" rax:id="template_version_list">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="List template versions">
               <para role="shortdesc">
            Lists all available template versions.
         </para>
            </wadl:doc>
            <response status="200">
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">{
    "template_versions": [
        {
            "version": "heat_template_version.2014-10-16",
            "type": "hot"
        },
        {
            "version": "heat_template_version.2015-04-30",
            "type": "hot"
        },
        {
            "version": "HeatTemplateFormatVersion.2012-12-12",
            "type": "cfn"
        },
        {
            "version": "heat_template_version.2015-10-15",
            "type": "hot"
        },
        {
            "version": "AWSTemplateFormatVersion.2010-09-09",
            "type": "cfn"
        },
        {
            "version": "heat_template_version.2013-05-23",
            "type": "hot"
        },
        {
            "version": "heat_template_version.2016-04-08",
            "type": "hot"
        }
    ]
}
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>
      
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Bad Request" xml:lang="EN"/>
            </response>
            <response status="401">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                         title="Unauthorized"
                         xml:lang="EN"/>
            </response> 
      
            <response status="404">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Not Found" xml:lang="EN"/>
            </response> 
      
            <response status="500">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                         title="Internal Server Error"
                         xml:lang="EN"/>
            </response>
         </method>
      </resource>
               
            <resource id="resource_types" path="/v1/{tenant_id}/resource_types">
         <param name="tenant_id" style="template" rax:id="">
            <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>
                  The ID of the tenant. A tenant is also known as an account
                  or project.
               </para>
            </wadl:doc>
            </param>
         <method name="GET" rax:id="resource_type_list">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="List resource types">
               <para role="shortdesc">
            Lists all supported template resource types.
         </para>
            </wadl:doc>
            <request>
               <representation mediaType="application/json">
                  <param name="name" style="query" required="false" rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
                     Filters the response by a resource type name. You can set
                     this value to a regular expression. Use this filter
                     multiple times to filter by multiple names.
                  </para>
                     </wadl:doc>
                  </param>
                  <param name="version" style="query" required="false" rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
                     Filters the response by resource types by heat version.
                     For example, <code>2016.1</code> or <code>5.0.0</code>.
                     Use this filter multiple times to filter by multiple
                     versions.
                  </para>
                     </wadl:doc>
                  </param>
                  <param name="support_status" style="query" required="false" rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
                     Filters the response by resource types by a support
                     status. Valid support status values are
                     <code>UNKNOWN</code>, <code>SUPPORTED</code>,
                     <code>DEPRECATED</code>, <code>UNSUPPORTED</code>, and
                     <code>HIDDEN</code>. Use this filter multiple times to
                     filter by multiple support statuses.
                  </para>
                     </wadl:doc>
                  </param>
               </representation>
            </request>
            <response status="200">
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">{
    "resource_types": [
        "AWS::EC2::Instance",
        "OS::Heat::ScalingPolicy",
        "AWS::CloudFormation::Stack",
        "OS::Keystone::Group",
        "OS::Glance::Image",
        "AWS::EC2::Volume",
        "OS::Heat::SoftwareDeployment",
        "AWS::AutoScaling::ScalingPolicy",
        "AWS::EC2::InternetGateway",
        "OS::Heat::SoftwareDeployments",
        "AWS::EC2::VolumeAttachment",
        "AWS::CloudFormation::WaitConditionHandle",
        "OS::Cinder::VolumeAttachment",
        "OS::Cinder::EncryptedVolumeType",
        "OS::Heat::AutoScalingGroup",
        "OS::Nova::FloatingIP",
        "OS::Heat::HARestarter",
        "OS::Keystone::Project",
        "OS::Keystone::Endpoint",
        "OS::Heat::InstanceGroup",
        "AWS::CloudWatch::Alarm",
        "AWS::AutoScaling::AutoScalingGroup",
        "OS::Heat::CloudConfig",
        "OS::Heat::SoftwareComponent",
        "OS::Cinder::Volume",
        "OS::Keystone::Service",
        "OS::Heat::WaitConditionHandle",
        "OS::Heat::SoftwareConfig",
        "AWS::CloudFormation::WaitCondition",
        "OS::Heat::StructuredDeploymentGroup",
        "OS::Heat::RandomString",
        "OS::Heat::SoftwareDeploymentGroup",
        "OS::Nova::KeyPair",
        "OS::Heat::MultipartMime",
        "OS::Heat::UpdateWaitConditionHandle",
        "OS::Nova::Server",
        "AWS::IAM::AccessKey",
        "AWS::EC2::SecurityGroup",
        "AWS::EC2::EIPAssociation",
        "AWS::EC2::EIP",
        "OS::Heat::AccessPolicy",
        "AWS::IAM::User",
        "OS::Heat::WaitCondition",
        "OS::Heat::StructuredDeployment",
        "AWS::RDS::DBInstance",
        "AWS::AutoScaling::LaunchConfiguration",
        "OS::Heat::Stack",
        "OS::Nova::FloatingIPAssociation",
        "OS::Heat::ResourceGroup",
        "OS::Heat::StructuredConfig",
        "OS::Nova::ServerGroup",
        "OS::Heat::StructuredDeployments",
        "OS::Keystone::Role",
        "OS::Keystone::User",
        "AWS::ElasticLoadBalancing::LoadBalancer",
        "OS::Nova::Flavor",
        "OS::Cinder::VolumeType"
    ]
}
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>
      
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Bad Request" xml:lang="EN"/>
            </response>
            <response status="401">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                         title="Unauthorized"
                         xml:lang="EN"/>
            </response> 
         </method>
      </resource>
               
               <resource id="resource_schema" path="/v1/{tenant_id}/resource_types/{type_name}">
         <param name="tenant_id" style="template" rax:id="">
            <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>
                  The ID of the tenant. A tenant is also known as an account
                  or project.
               </para>
            </wadl:doc>
            </param>
         <param name="type_name" style="template" required="true" rax:id="">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <para>
                        The name of a resource type.
                     </para>
                  </wadl:doc>
                  </param>
         <method name="GET" rax:id="resource_type_get">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Show resource schema">
               <para role="shortdesc">
            Shows the interface schema for a resource type.
         </para>
               <para>
            A schema describes the properties that can be set on the resource,
            their types, constraints, descriptions, and default values.
            Additionally, the response shows the resource attributes and their
            descriptions.
         </para>
            </wadl:doc>
            <response status="200">
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">{
    "attributes": {
        "an_attribute": {
            "description": "A runtime value of the resource."
        }
    },
    "properties": {
        "a_property": {
            "constraints": [
                {
                    "description": "Must be between 1 and 255 characters",
                    "length": {
                        "max": 255,
                        "min": 1
                    }
                }
            ],
            "description": "A resource description.",
            "required": true,
            "type": "string",
            "update_allowed": false
        }
    },
    "resource_type": "OS::Heat::AResourceName",
    "support_status": {
        "message": "A status message",
        "status": "SUPPORTED",
        "version": "2014.1"
    }
}
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
            
                  <param name="description"
                         style="plain"
                         required="true"
                         type="xsd:string"
                         rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      The description of the stack template.
    </para>
                     </wadl:doc>
                  </param>
                  <param name="heat_template_version"
                         style="plain"
                         required="true"
                         type="xsd:string"
                         rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      The version of the heat template.
    </para>
                     </wadl:doc>
                  </param>
                  <param name="outputs"
                         style="plain"
                         required="true"
                         type="xsd:dict"
                         rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      Key and value pairs that contain output data.
    </para>
                     </wadl:doc>
                  </param>
                  <param name="parameters"
                         style="plain"
                         required="true"
                         type="xsd:dict"
                         rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      Key and value pairs that contain template parameters.
    </para>
                     </wadl:doc>
                  </param>
                  <param name="resources"
                         style="plain"
                         required="true"
                         type="xsd:dict"
                         rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      The required sources for creating the stack
      template.
    </para>
                     </wadl:doc>
                  </param>
               </representation>
            </response>
      
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Bad Request" xml:lang="EN"/>
            </response>
            <response status="401">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                         title="Unauthorized"
                         xml:lang="EN"/>
            </response> 
         </method>
      </resource>
                  
                  
                  <resource id="resource_template"
                path="/v1/{tenant_id}/resource_types/{type_name}/template">
         <param name="tenant_id" style="template" rax:id="">
            <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>
                  The ID of the tenant. A tenant is also known as an account
                  or project.
               </para>
            </wadl:doc>
            </param>
         <param name="type_name" style="template" required="true" rax:id="">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <para>
                        The name of a resource type.
                     </para>
                  </wadl:doc>
                  </param>
         <param name="template_type" style="query" required="false" rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
                           The resource template type. Default type is
                           <code>cfn</code>. The <code>hot</code> template type is supported.
                        </para>
                     </wadl:doc>
                     </param>
         <method name="GET" rax:id="resource_type_template">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Show resource template">
               <para role="shortdesc">
            Shows the template representation for a resource type.
         </para>
               <para>
            The returned template contains a single resource type. Each
            resource property is mapped to a template parameter and each
            resource attribute is mapped to a template output.
         </para>
               <para>
            You can use these templates as a starting place for creating
            customized, template-based resources or as examples of using the
            particular resource in another template.
         </para>
               <para>
            Use the <code>template_type</code> query parameter to specify the
            resource template type. Default type is <code>cfn</code>. The
            <code>hot</code> template type is supported. For example:
         </para>
               <programlisting>/v1/{tenant_id}/resource_types/{type_name}/template?template_type=cfn</programlisting>
            </wadl:doc>
            <response status="200">
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">{
    "HeatTemplateFormatVersion": "2012-12-12",
    "Outputs": {
        "private_key": {
            "Description": "The private key if it has been saved.",
            "Value": "{\"Fn::GetAtt\": [\"KeyPair\", \"private_key\"]}"
        },
        "public_key": {
            "Description": "The public key.",
            "Value": "{\"Fn::GetAtt\": [\"KeyPair\", \"public_key\"]}"
        }
    },
    "Parameters": {
        "name": {
            "Description": "The name of the key pair.",
            "Type": "String"
        },
        "public_key": {
            "Description": "The optional public key. This allows users to supply the public key from a pre-existing key pair. If not supplied, a new key pair will be generated.",
            "Type": "String"
        },
        "save_private_key": {
            "AllowedValues": [
                "True",
                "true",
                "False",
                "false"
            ],
            "Default": false,
            "Description": "True if the system should remember a generated private key; False otherwise.",
            "Type": "String"
        }
    },
    "Resources": {
        "KeyPair": {
            "Properties": {
                "name": {
                    "Ref": "name"
                },
                "public_key": {
                    "Ref": "public_key"
                },
                "save_private_key": {
                    "Ref": "save_private_key"
                }
            },
            "Type": "OS::Nova::KeyPair"
        }
    }
}
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>
      
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Bad Request" xml:lang="EN"/>
            </response>
            <response status="401">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                         title="Unauthorized"
                         xml:lang="EN"/>
            </response> 
      
            <response status="404">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Not Found" xml:lang="EN"/>
            </response> 
         </method>
      </resource>
                     
                     
                  
               
            <resource path="/v1/{tenant_id}/build_info" id="build_info">
         <param name="tenant_id" style="template" rax:id="">
            <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>
                  The ID of the tenant. A tenant is also known as an account
                  or project.
               </para>
            </wadl:doc>
            </param>
         <method name="GET" rax:id="build_info_show">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Show build information">
               <para role="shortdesc">
            Shows build information for an Orchestration deployment.
         </para>
            </wadl:doc>
            <response status="200">
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">{
    "api": {
        "revision": "{api_build_revision}"
    },
    "engine": {
        "revision": "{engine_build_revision}"
    }
}
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>
         </method>
      </resource>
               
            <resource id="software_configs" path="/v1/{tenant_id}/software_configs">
         <param name="tenant_id" style="template" rax:id="">
            <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>
                  The ID of the tenant. A tenant is also known as an account
                  or project.
               </para>
            </wadl:doc>
            </param>
         <method name="POST" rax:id="software_config_create">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Create configuration">
               <para role="shortdesc">
            Creates a software configuration.
         </para>
            </wadl:doc>
            <request>
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">{
    "inputs": [
        {
            "default": null,
            "type": "String",
            "name": "foo",
            "description": null
        },
        {
            "default": null,
            "type": "String",
            "name": "bar",
            "description": null
        }
    ],
    "group": "script",
    "name": "a-config-we5zpvyu7b5o",
    "outputs": [
        {
            "type": "String",
            "name": "result",
            "error_output": false,
            "description": null
        }
    ],
    "config": "#!/bin/sh -x\necho \"Writing to /tmp/$bar\"\necho $foo &gt; /tmp/$bar\necho -n \"The file /tmp/$bar contains `cat /tmp/$bar` for server $deploy_server_id during $deploy_action\" &gt; $heat_outputs_path.result\necho \"Written to /tmp/$bar\"\necho \"Output to stderr\" 1&gt;&amp;2",
    "options": null
}
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
                  <param name="config" style="plain" required="false" rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
                  Configuration script or manifest that defines which
                  configuration is performed.
               </para>
                     </wadl:doc>
                  </param>
                  <param name="group" style="plain" required="false" rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
                  Namespace that groups this software configuration by when it
                  is delivered to a server. This setting might simply define
                  which configuration tool performs the configuration.
               </para>
                     </wadl:doc>
                  </param>
                  <param name="name" style="plain" required="false" rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
                  The name of the configuration to create.
               </para>
                     </wadl:doc>
                  </param>
                  <param name="inputs" style="plain" required="false" rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
                  Schema that represents the inputs that this software
                  configuration expects.
               </para>
                     </wadl:doc>
                  </param>
                  <param name="outputs" style="plain" required="false" rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
                  Schema that represents the outputs that this
                  software configuration produces.
               </para>
                     </wadl:doc>
                  </param>
                  <param name="options" style="plain" required="false" rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
                  Map that contains options that are specific to the
                  configuration management tool that this resource uses.
               </para>
                     </wadl:doc>
                  </param>
               </representation>
            </request>
            <response status="200">
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">{
    "software_config": {
        "creation_time": "2015-01-31T15:12:36Z",
        "inputs": [
            {
                "default": null,
                "type": "String",
                "name": "foo",
                "description": null
            },
            {
                "default": null,
                "type": "String",
                "name": "bar",
                "description": null
            }
        ],
        "group": "script",
        "name": "a-config-we5zpvyu7b5o",
        "outputs": [
            {
                "type": "String",
                "name": "result",
                "error_output": false,
                "description": null
            }
        ],
        "options": null,
        "config": "#!/bin/sh -x\necho \"Writing to /tmp/$bar\"\necho $foo &gt; /tmp/$bar\necho -n \"The file /tmp/$bar contains `cat /tmp/$bar` for server $deploy_server_id during $deploy_action\" &gt; $heat_outputs_path.result\necho \"Written to /tmp/$bar\"\necho \"Output to stderr\" 1&gt;&amp;2",
        "id": "ddee7aca-aa32-4335-8265-d436b20db4f1"
    }
}
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
            
                  <param name="inputs"
                         style="plain"
                         required="true"
                         type="xsd:list"
                         rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      A list of inputs to configure the software.
    </para>
                     </wadl:doc>
                  </param>
                  <param name="name"
                         style="plain"
                         required="true"
                         type="xsd:string"
                         rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      The name of the software configuration.
    </para>
                     </wadl:doc>
                  </param>
                  <param name="outputs"
                         style="plain"
                         required="true"
                         type="xsd:list"
                         rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      A list of software configuration output data.
    </para>
                     </wadl:doc>
                  </param>
                  <param name="creation_time"
                         style="plain"
                         required="true"
                         type="xsd:dateTime"
                         rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      The date and time when the software was created.
    </para>
                        <para>
      The date and time stamp format is <link xlink:href="https://en.wikipedia.org/wiki/ISO_8601">ISO 8601</link>:
    </para>
                        <programlisting>CCYY-MM-DDThh:mm:ss±hh:mm</programlisting>
                        <para>
      For example, <code>2015-08-27T09:49:58-05:00</code>.
    </para>
                        <para>
      The <code>±hh:mm</code> value, if included, is the time zone as an
      offset from UTC.
    </para>
                     </wadl:doc>
                  </param>
                  <param name="group"
                         style="plain"
                         required="true"
                         type="xsd:string"
                         rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      The name of the group in which the software is configured.
    </para>
                     </wadl:doc>
                  </param>
                  <param name="config"
                         style="plain"
                         required="true"
                         type="xsd:string"
                         rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      The configuration code.
    </para>
                     </wadl:doc>
                  </param>
                  <param name="options"
                         style="plain"
                         required="true"
                         type="xsd:string"
                         rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      The options, if any, to include in the code. For example any dependent
      flags.
    </para>
                     </wadl:doc>
                  </param>
               </representation>
            </response>
      
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Bad Request" xml:lang="EN"/>
            </response>
            <response status="401">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                         title="Unauthorized"
                         xml:lang="EN"/>
            </response> 
      
            <response status="404">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Not Found" xml:lang="EN"/>
            </response> 
         </method>
      </resource>
               
               <resource path="/v1/{tenant_id}/software_configs/{config_id}" id="config_id">
         <param name="tenant_id" style="template" rax:id="">
            <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>
                  The ID of the tenant. A tenant is also known as an account
                  or project.
               </para>
            </wadl:doc>
            </param>
         <param name="config_id" style="template" required="true" rax:id="">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <para>
                        The configuration ID.
                     </para>
                  </wadl:doc>
                  </param>
         <method name="GET" rax:id="software_config_show">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Show configuration details">
               <para role="shortdesc">
            Shows details for a software configuration.
         </para>
            </wadl:doc>
            <response status="200">
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">{
    "software_config": {
        "inputs": [
            {
                "default": null,
                "type": "String",
                "name": "foo",
                "description": null
            },
            {
                "default": null,
                "type": "String",
                "name": "bar",
                "description": null
            }
        ],
        "group": "script",
        "name": "a-config-we5zpvyu7b5o",
        "outputs": [
            {
                "type": "String",
                "name": "result",
                "error_output": false,
                "description": null
            }
        ],
        "creation_time": "2015-01-31T15:12:36Z",
        "id": "ddee7aca-aa32-4335-8265-d436b20db4f1",
        "config": "#!/bin/sh -x\necho \"Writing to /tmp/$bar\"\necho $foo &gt; /tmp/$bar\necho -n \"The file /tmp/$bar contains `cat /tmp/$bar` for server $deploy_server_id during $deploy_action\" &gt; $heat_outputs_path.result\necho \"Written to /tmp/$bar\"\necho \"Output to stderr\" 1&gt;&amp;2",
        "options": null
    }
}
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
            
                  <param name="inputs"
                         style="plain"
                         required="true"
                         type="xsd:list"
                         rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      A list of inputs to configure the software.
    </para>
                     </wadl:doc>
                  </param>
                  <param name="name"
                         style="plain"
                         required="true"
                         type="xsd:string"
                         rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      The name of the software configuration.
    </para>
                     </wadl:doc>
                  </param>
                  <param name="outputs"
                         style="plain"
                         required="true"
                         type="xsd:list"
                         rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      A list of software configuration output data.
    </para>
                     </wadl:doc>
                  </param>
                  <param name="creation_time"
                         style="plain"
                         required="true"
                         type="xsd:dateTime"
                         rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      The date and time when the software was created.
    </para>
                        <para>
      The date and time stamp format is <link xlink:href="https://en.wikipedia.org/wiki/ISO_8601">ISO 8601</link>:
    </para>
                        <programlisting>CCYY-MM-DDThh:mm:ss±hh:mm</programlisting>
                        <para>
      For example, <code>2015-08-27T09:49:58-05:00</code>.
    </para>
                        <para>
      The <code>±hh:mm</code> value, if included, is the time zone as an
      offset from UTC.
    </para>
                     </wadl:doc>
                  </param>
                  <param name="group"
                         style="plain"
                         required="true"
                         type="xsd:string"
                         rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      The name of the group in which the software is configured.
    </para>
                     </wadl:doc>
                  </param>
                  <param name="config"
                         style="plain"
                         required="true"
                         type="xsd:string"
                         rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      The configuration code.
    </para>
                     </wadl:doc>
                  </param>
                  <param name="options"
                         style="plain"
                         required="true"
                         type="xsd:string"
                         rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      The options, if any, to include in the code. For example any dependent
      flags.
    </para>
                     </wadl:doc>
                  </param>
               </representation>
            </response>
      
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Bad Request" xml:lang="EN"/>
            </response>
            <response status="401">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                         title="Unauthorized"
                         xml:lang="EN"/>
            </response> 
      
            <response status="404">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Not Found" xml:lang="EN"/>
            </response> 
         </method>
         <method name="DELETE" rax:id="software_config_delete">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Delete config">
               <para role="shortdesc">
            Deletes a software configuration.
         </para>
            </wadl:doc>
            <response status="204"/>
         </method>
      </resource>
                  
                  
                  
               
            <resource id="software_deployments" path="/v1/{tenant_id}/software_deployments">
         <param name="tenant_id" style="template" rax:id="">
            <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>
                  The ID of the tenant. A tenant is also known as an account
                  or project.
               </para>
            </wadl:doc>
            </param>
         <method name="GET" rax:id="software_deployment_index">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="List deployments">
               <para role="shortdesc">
            Lists all available software deployments.
         </para>
            </wadl:doc>
            <response status="200">
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">{
    "software_deployments": [
        {
            "status": "COMPLETE",
            "server_id": "ec14c864-096e-4e27-bb8a-2c2b4dc6f3f5",
            "config_id": "8da95794-2ad9-4979-8ae5-739ce314c5cd",
            "output_values": {
                "deploy_stdout": "Writing to /tmp/barmy\nWritten to /tmp/barmy\n",
                "deploy_stderr": "+ echo Writing to /tmp/barmy\n+ echo fu\n+ cat /tmp/barmy\n+ echo -n The file /tmp/barmy contains fu for server ec14c864-096e-4e27-bb8a-2c2b4dc6f3f5 during CREATE\n+ echo Written to /tmp/barmy\n+ echo Output to stderr\nOutput to stderr\n",
                "deploy_status_code": 0,
                "result": "The file /tmp/barmy contains fu for server ec14c864-096e-4e27-bb8a-2c2b4dc6f3f5 during CREATE"
            },
            "input_values": null,
            "action": "CREATE",
            "status_reason": "Outputs received",
            "id": "ef422fa5-719a-419e-a10c-72e3a367b0b8",
            "creation_time": "2015-01-31T15:12:36Z",
            "updated_time": "2015-01-31T15:18:21Z"
        }
    ]
}
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
            
                  <param name="status"
                         style="plain"
                         required="true"
                         type="xsd:string"
                         rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      The status of the software deployment. The value is
      <code>INPROGRESS</code> or <code>COMPLETE</code>.
    </para>
                     </wadl:doc>
                  </param>
                  <param name="server_id"
                         style="plain"
                         required="true"
                         type="csapi:UUID"
                         rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      The UUID of the server.
    </para>
                     </wadl:doc>
                  </param>
                  <param name="config_id"
                         style="plain"
                         required="true"
                         type="csapi:UUID"
                         rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      The UUID of the configuration.
    </para>
                     </wadl:doc>
                  </param>
                  <param name="output_values"
                         style="plain"
                         required="true"
                         type="xsd:list"
                         rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      A list of output data.
    </para>
                     </wadl:doc>
                  </param>
                  <param name="input_values"
                         style="plain"
                         required="true"
                         type="xsd:list"
                         rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      A list of input data.
    </para>
                     </wadl:doc>
                  </param>
                  <param name="action"
                         style="plain"
                         required="true"
                         type="xsd:string"
                         rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      The deployment action.
    </para>
                     </wadl:doc>
                  </param>
                  <param name="status_reason"
                         style="plain"
                         required="true"
                         type="xsd:string"
                         rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      The debug information for the current status.
    </para>
                     </wadl:doc>
                  </param>
                  <param name="id"
                         style="plain"
                         required="true"
                         type="csapi:UUID"
                         rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      The UUID of the software deployment.
    </para>
                     </wadl:doc>
                  </param>
                  <param name="creation_time"
                         style="plain"
                         required="true"
                         type="xsd:dateTime"
                         rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      The date and time when the resource was created.
    </para>
                        <para>
      The date and time stamp format is <link xlink:href="https://en.wikipedia.org/wiki/ISO_8601">ISO 8601</link>:
    </para>
                        <programlisting>CCYY-MM-DDThh:mm:ss±hh:mm</programlisting>
                        <para>
      For example, <code>2015-08-27T09:49:58-05:00</code>.
    </para>
                        <para>
      The <code>±hh:mm</code> value, if included, is the time zone as an
      offset from UTC.
    </para>
                     </wadl:doc>
                  </param>

                  <param name="updated_at"
                         style="plain"
                         required="true"
                         type="xsd:dateTime"
                         rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
            The date and time when the resource was updated.
        </para>
                        <para>
            The date and time stamp format is <link xlink:href="https://en.wikipedia.org/wiki/ISO_8601">ISO 8601</link>:
        </para>
                        <programlisting>CCYY-MM-DDThh:mm:ss±hh:mm</programlisting>
                        <para>
            For example, <code>2015-08-27T09:49:58-05:00</code>.
        </para>
                        <para>
            The <code>±hh:mm</code> value, if included, is the time zone as an
            offset from UTC. In the previous example, the offset value is
            <code>-05:00</code>.
        </para>
                        <para>
            If the <code>updated_at</code> date and time stamp is not set, its value is
            <code>null</code>.
        </para>
                     </wadl:doc>
                  </param>
               </representation>
            </response>
      
            <response status="400">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Bad Request" xml:lang="EN"/>
            </response>
            <response status="401">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                         title="Unauthorized"
                         xml:lang="EN"/>
            </response> 
      
            <response status="404">
               <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Not Found" xml:lang="EN"/>
            </response> 
      
            <response status="500">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                         title="Internal Server Error"
                         xml:lang="EN"/>
            </response>
         </method>
         <method name="POST" rax:id="software_deployment_create">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Create deployment">
               <para role="shortdesc">
            Creates a software deployment.
         </para>
            </wadl:doc>
            <request>
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">{
    "status": "IN_PROGRESS",
    "server_id": "ec14c864-096e-4e27-bb8a-2c2b4dc6f3f5",
    "config_id": "8da95794-2ad9-4979-8ae5-739ce314c5cd",
    "stack_user_project_id": "c024bfada67845ddb17d2b0c0be8cd79",
    "action": "CREATE",
    "status_reason": "Deploy data available"
}
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
                  <param name="config_id" style="plain" required="true" rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
                  The ID of the software configuration resource that
                  runs when applying to the server.
               </para>
                     </wadl:doc>
                  </param>
                  <param name="server_id" style="plain" required="true" rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
                  The ID of the compute server to which the
                  configuration applies.
               </para>
                     </wadl:doc>
                  </param>
                  <param name="action" style="plain" required="true" rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
                  The current stack action that triggers this
                  deployment resource.
               </para>
                     </wadl:doc>
                  </param>
                  <param name="stack_user_project_id"
                         style="plain"
                         required="false"
                         rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
                  Authentication project ID, which can also perform
                  operations on this deployment.
               </para>
                     </wadl:doc>
                  </param>
                  <param name="status" style="plain" required="false" rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
                  Current status of the deployment. A valid value is
                  <code>COMPLETE</code>, <code>IN_PROGRESS</code>, or
                  <code>FAILED</code>.
               </para>
                     </wadl:doc>
                  </param>
                  <param name="status_reason" style="plain" required="false" rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
                  Error description for the last status change, which
                  is <code>FAILED</code> status.
               </para>
                     </wadl:doc>
                  </param>
               </representation>
            </request>
            <response status="200">
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">{
    "software_deployment": {
        "status": "IN_PROGRESS",
        "server_id": "ec14c864-096e-4e27-bb8a-2c2b4dc6f3f5",
        "config_id": "8da95794-2ad9-4979-8ae5-739ce314c5cd",
        "output_values": null,
        "input_values": null,
        "action": "CREATE",
        "status_reason": "Deploy data available",
        "id": "ef422fa5-719a-419e-a10c-72e3a367b0b8",
        "creation_time": "2015-01-31T15:12:36Z",
        "updated_time": "2015-01-31T15:18:21Z"
    }
}
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
            
                  <param name="status"
                         style="plain"
                         required="true"
                         type="xsd:string"
                         rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      The status of the software deployment. The value is
      <code>INPROGRESS</code> or <code>COMPLETE</code>.
    </para>
                     </wadl:doc>
                  </param>
                  <param name="server_id"
                         style="plain"
                         required="true"
                         type="csapi:UUID"
                         rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      The UUID of the server.
    </para>
                     </wadl:doc>
                  </param>
                  <param name="config_id"
                         style="plain"
                         required="true"
                         type="csapi:UUID"
                         rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      The UUID of the configuration.
    </para>
                     </wadl:doc>
                  </param>
                  <param name="output_values"
                         style="plain"
                         required="true"
                         type="xsd:list"
                         rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      A list of output data.
    </para>
                     </wadl:doc>
                  </param>
                  <param name="input_values"
                         style="plain"
                         required="true"
                         type="xsd:list"
                         rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      A list of input data.
    </para>
                     </wadl:doc>
                  </param>
                  <param name="action"
                         style="plain"
                         required="true"
                         type="xsd:string"
                         rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      The deployment action.
    </para>
                     </wadl:doc>
                  </param>
                  <param name="status_reason"
                         style="plain"
                         required="true"
                         type="xsd:string"
                         rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      The debug information for the current status.
    </para>
                     </wadl:doc>
                  </param>
                  <param name="id"
                         style="plain"
                         required="true"
                         type="csapi:UUID"
                         rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      The UUID of the software deployment.
    </para>
                     </wadl:doc>
                  </param>
                  <param name="creation_time"
                         style="plain"
                         required="true"
                         type="xsd:dateTime"
                         rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      The date and time when the resource was created.
    </para>
                        <para>
      The date and time stamp format is <link xlink:href="https://en.wikipedia.org/wiki/ISO_8601">ISO 8601</link>:
    </para>
                        <programlisting>CCYY-MM-DDThh:mm:ss±hh:mm</programlisting>
                        <para>
      For example, <code>2015-08-27T09:49:58-05:00</code>.
    </para>
                        <para>
      The <code>±hh:mm</code> value, if included, is the time zone as an
      offset from UTC.
    </para>
                     </wadl:doc>
                  </param>

                  <param name="updated_at"
                         style="plain"
                         required="true"
                         type="xsd:dateTime"
                         rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
            The date and time when the resource was updated.
        </para>
                        <para>
            The date and time stamp format is <link xlink:href="https://en.wikipedia.org/wiki/ISO_8601">ISO 8601</link>:
        </para>
                        <programlisting>CCYY-MM-DDThh:mm:ss±hh:mm</programlisting>
                        <para>
            For example, <code>2015-08-27T09:49:58-05:00</code>.
        </para>
                        <para>
            The <code>±hh:mm</code> value, if included, is the time zone as an
            offset from UTC. In the previous example, the offset value is
            <code>-05:00</code>.
        </para>
                        <para>
            If the <code>updated_at</code> date and time stamp is not set, its value is
            <code>null</code>.
        </para>
                     </wadl:doc>
                  </param>
               </representation>
            </response>
         </method>
      </resource>
               
               
               <resource path="/v1/{tenant_id}/software_deployments/{deployment_id}"
                id="deployment_id">
         <param name="tenant_id" style="template" rax:id="">
            <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>
                  The ID of the tenant. A tenant is also known as an account
                  or project.
               </para>
            </wadl:doc>
            </param>
         <param name="deployment_id" style="template" required="true" rax:id="">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <para>
                        The deployment ID.
                     </para>
                  </wadl:doc>
                  </param>
         <method name="GET" rax:id="software_deployment_show">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Show deployment details">
               <para role="shortdesc">
            Shows details for a software deployment.
         </para>
            </wadl:doc>
            <response status="200">
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">{
    "software_deployment": {
        "status": "IN_PROGRESS",
        "server_id": "ec14c864-096e-4e27-bb8a-2c2b4dc6f3f5",
        "config_id": "3d5ec2a8-7004-43b6-a7f6-542bdbe9d434",
        "output_values": null,
        "input_values": null,
        "action": "CREATE",
        "status_reason": "Deploy data available",
        "id": "06e87bcc-33a2-4bce-aebd-533e698282d3",
        "creation_time": "2015-01-31T15:12:36Z",
        "updated_time": "2015-01-31T15:18:21Z"
    }
}
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
            
                  <param name="status"
                         style="plain"
                         required="true"
                         type="xsd:string"
                         rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      The status of the software deployment. The value is
      <code>INPROGRESS</code> or <code>COMPLETE</code>.
    </para>
                     </wadl:doc>
                  </param>
                  <param name="server_id"
                         style="plain"
                         required="true"
                         type="csapi:UUID"
                         rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      The UUID of the server.
    </para>
                     </wadl:doc>
                  </param>
                  <param name="config_id"
                         style="plain"
                         required="true"
                         type="csapi:UUID"
                         rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      The UUID of the configuration.
    </para>
                     </wadl:doc>
                  </param>
                  <param name="output_values"
                         style="plain"
                         required="true"
                         type="xsd:list"
                         rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      A list of output data.
    </para>
                     </wadl:doc>
                  </param>
                  <param name="input_values"
                         style="plain"
                         required="true"
                         type="xsd:list"
                         rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      A list of input data.
    </para>
                     </wadl:doc>
                  </param>
                  <param name="action"
                         style="plain"
                         required="true"
                         type="xsd:string"
                         rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      The deployment action.
    </para>
                     </wadl:doc>
                  </param>
                  <param name="status_reason"
                         style="plain"
                         required="true"
                         type="xsd:string"
                         rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      The debug information for the current status.
    </para>
                     </wadl:doc>
                  </param>
                  <param name="id"
                         style="plain"
                         required="true"
                         type="csapi:UUID"
                         rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      The UUID of the software deployment.
    </para>
                     </wadl:doc>
                  </param>
                  <param name="creation_time"
                         style="plain"
                         required="true"
                         type="xsd:dateTime"
                         rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      The date and time when the resource was created.
    </para>
                        <para>
      The date and time stamp format is <link xlink:href="https://en.wikipedia.org/wiki/ISO_8601">ISO 8601</link>:
    </para>
                        <programlisting>CCYY-MM-DDThh:mm:ss±hh:mm</programlisting>
                        <para>
      For example, <code>2015-08-27T09:49:58-05:00</code>.
    </para>
                        <para>
      The <code>±hh:mm</code> value, if included, is the time zone as an
      offset from UTC.
    </para>
                     </wadl:doc>
                  </param>

                  <param name="updated_at"
                         style="plain"
                         required="true"
                         type="xsd:dateTime"
                         rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
            The date and time when the resource was updated.
        </para>
                        <para>
            The date and time stamp format is <link xlink:href="https://en.wikipedia.org/wiki/ISO_8601">ISO 8601</link>:
        </para>
                        <programlisting>CCYY-MM-DDThh:mm:ss±hh:mm</programlisting>
                        <para>
            For example, <code>2015-08-27T09:49:58-05:00</code>.
        </para>
                        <para>
            The <code>±hh:mm</code> value, if included, is the time zone as an
            offset from UTC. In the previous example, the offset value is
            <code>-05:00</code>.
        </para>
                        <para>
            If the <code>updated_at</code> date and time stamp is not set, its value is
            <code>null</code>.
        </para>
                     </wadl:doc>
                  </param>
               </representation>
            </response>
         </method>
         <method name="PUT" rax:id="software_deployment_update">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Update deployment">
               <para role="shortdesc">
            Updates a software deployment.
         </para>
            </wadl:doc>
            <request>
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">{
    "status": "COMPLETE",
    "output_values": {
        "deploy_stdout": "Writing to /tmp/baaaaa\nWritten to /tmp/baaaaa\n",
        "deploy_stderr": "+ echo Writing to /tmp/baaaaa\n+ echo fooooo\n+ cat /tmp/baaaaa\n+ echo -n The file /tmp/baaaaa contains fooooo for server ec14c864-096e-4e27-bb8a-2c2b4dc6f3f5 during CREATE\n+ echo Written to /tmp/baaaaa\n+ echo Output to stderr\nOutput to stderr\n",
        "deploy_status_code": 0,
        "result": "The file /tmp/baaaaa contains fooooo for server ec14c864-096e-4e27-bb8a-2c2b4dc6f3f5 during CREATE"
    },
    "status_reason": "Outputs received"
}
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
                  <param name="config_id" style="plain" required="true" rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
                  ID of the software configuration resource to run when
                  applying to the server. This ID might not be the same
                  configuration ID with which the deployment was created
                  because ephemeral configurations are created throughout the
                  life cycle of the deployment.
               </para>
                     </wadl:doc>
                  </param>
                  <param name="action" style="plain" required="true" rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
                  Current stack action in which this deployment resource is
                  being triggered.
               </para>
                     </wadl:doc>
                  </param>
                  <param name="status" style="plain" required="false" rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
                  Current status of the deployment. Value is
                  <code>IN_PROGRESS</code>, <code>COMPLETE</code>, or
                  <code>FAILED</code>.
               </para>
                     </wadl:doc>
                  </param>
                  <param name="status_reason" style="plain" required="false" rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
                  Error description for the last status change, which
                  is <code>FAILED</code> status.
               </para>
                     </wadl:doc>
                  </param>
                  <param name="output_values" style="plain" required="false" rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
                  Map of output values for the deployment, as signaled from
                  the server.
               </para>
                     </wadl:doc>
                  </param>
               </representation>
            </request>
            <response status="200">
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">{
    "software_deployment": {
        "status": "COMPLETE",
        "server_id": "ec14c864-096e-4e27-bb8a-2c2b4dc6f3f5",
        "config_id": "3d5ec2a8-7004-43b6-a7f6-542bdbe9d434",
        "output_values": {
            "deploy_stdout": "Writing to /tmp/baaaaa\nWritten to /tmp/baaaaa\n",
            "deploy_stderr": "+ echo Writing to /tmp/baaaaa\n+ echo fooooo\n+ cat /tmp/baaaaa\n+ echo -n The file /tmp/baaaaa contains fooooo for server ec14c864-096e-4e27-bb8a-2c2b4dc6f3f5 during CREATE\n+ echo Written to /tmp/baaaaa\n+ echo Output to stderr\nOutput to stderr\n",
            "deploy_status_code": 0,
            "result": "The file /tmp/baaaaa contains fooooo for server ec14c864-096e-4e27-bb8a-2c2b4dc6f3f5 during CREATE"
        },
        "input_values": null,
        "action": "CREATE",
        "status_reason": "Outputs received",
        "id": "06e87bcc-33a2-4bce-aebd-533e698282d3",
        "creation_time": "2015-01-31T15:12:36Z",
        "updated_time": "2015-01-31T15:18:21Z"
    }
}
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
            
                  <param name="status"
                         style="plain"
                         required="true"
                         type="xsd:string"
                         rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      The status of the software deployment. The value is
      <code>INPROGRESS</code> or <code>COMPLETE</code>.
    </para>
                     </wadl:doc>
                  </param>
                  <param name="server_id"
                         style="plain"
                         required="true"
                         type="csapi:UUID"
                         rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      The UUID of the server.
    </para>
                     </wadl:doc>
                  </param>
                  <param name="config_id"
                         style="plain"
                         required="true"
                         type="csapi:UUID"
                         rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      The UUID of the configuration.
    </para>
                     </wadl:doc>
                  </param>
                  <param name="output_values"
                         style="plain"
                         required="true"
                         type="xsd:list"
                         rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      A list of output data.
    </para>
                     </wadl:doc>
                  </param>
                  <param name="input_values"
                         style="plain"
                         required="true"
                         type="xsd:list"
                         rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      A list of input data.
    </para>
                     </wadl:doc>
                  </param>
                  <param name="action"
                         style="plain"
                         required="true"
                         type="xsd:string"
                         rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      The deployment action.
    </para>
                     </wadl:doc>
                  </param>
                  <param name="status_reason"
                         style="plain"
                         required="true"
                         type="xsd:string"
                         rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      The debug information for the current status.
    </para>
                     </wadl:doc>
                  </param>
                  <param name="id"
                         style="plain"
                         required="true"
                         type="csapi:UUID"
                         rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      The UUID of the software deployment.
    </para>
                     </wadl:doc>
                  </param>
                  <param name="creation_time"
                         style="plain"
                         required="true"
                         type="xsd:dateTime"
                         rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      The date and time when the resource was created.
    </para>
                        <para>
      The date and time stamp format is <link xlink:href="https://en.wikipedia.org/wiki/ISO_8601">ISO 8601</link>:
    </para>
                        <programlisting>CCYY-MM-DDThh:mm:ss±hh:mm</programlisting>
                        <para>
      For example, <code>2015-08-27T09:49:58-05:00</code>.
    </para>
                        <para>
      The <code>±hh:mm</code> value, if included, is the time zone as an
      offset from UTC.
    </para>
                     </wadl:doc>
                  </param>

                  <param name="updated_at"
                         style="plain"
                         required="true"
                         type="xsd:dateTime"
                         rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
            The date and time when the resource was updated.
        </para>
                        <para>
            The date and time stamp format is <link xlink:href="https://en.wikipedia.org/wiki/ISO_8601">ISO 8601</link>:
        </para>
                        <programlisting>CCYY-MM-DDThh:mm:ss±hh:mm</programlisting>
                        <para>
            For example, <code>2015-08-27T09:49:58-05:00</code>.
        </para>
                        <para>
            The <code>±hh:mm</code> value, if included, is the time zone as an
            offset from UTC. In the previous example, the offset value is
            <code>-05:00</code>.
        </para>
                        <para>
            If the <code>updated_at</code> date and time stamp is not set, its value is
            <code>null</code>.
        </para>
                     </wadl:doc>
                  </param>
               </representation>
            </response>
         </method>
         <method name="DELETE" rax:id="software_deployment_delete">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Delete deployment">
               <para role="shortdesc">
            Deletes a software deployment.
         </para>
            </wadl:doc>
            <response status="204"/>
         </method>
      </resource>
                  
                  
                  
                  
               
               <resource path="/v1/{tenant_id}/software_deployments/metadata/{server_id}"
                id="server_id">
         <param name="tenant_id" style="template" rax:id="">
            <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>
                  The ID of the tenant. A tenant is also known as an account
                  or project.
               </para>
            </wadl:doc>
            </param>
         <param name="server_id" style="template" required="true" rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
                           The ID of the server for which to fetch
                           configuration metadata.
                        </para>
                     </wadl:doc>
                     </param>
         <method name="GET" rax:id="software_deployment_metadata">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Show server configuration metadata">
               <para role="shortdesc">
            Shows the deployment configuration metadata for a server.
         </para>
               <para>
            Use the <code>group</code> property to specify the
            configuration hook to which the pass the metadata item.
         </para>
            </wadl:doc>
            <response status="200">
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">{
    "metadata": [
        {
            "inputs": [
                {
                    "default": null,
                    "type": "String",
                    "name": "foo",
                    "value": "fooooo",
                    "description": null
                },
                {
                    "default": null,
                    "type": "String",
                    "name": "bar",
                    "value": "baaaaa",
                    "description": null
                },
                {
                    "type": "String",
                    "name": "deploy_server_id",
                    "value": "ec14c864-096e-4e27-bb8a-2c2b4dc6f3f5",
                    "description": "ID of the server being deployed to"
                },
                {
                    "type": "String",
                    "name": "deploy_action",
                    "value": "CREATE",
                    "description": "Name of the current action being deployed"
                },
                {
                    "type": "String",
                    "name": "deploy_stack_id",
                    "value": "a/9bd57090-8954-48ab-bab9-adf9e1ac70fc",
                    "description": "ID of the stack this deployment belongs to"
                },
                {
                    "type": "String",
                    "name": "deploy_resource_name",
                    "value": "deployment",
                    "description": "Name of this deployment resource in the stack"
                },
                {
                    "type": "String",
                    "name": "deploy_signal_id",
                    "value": "http://192.168.20.103:8000/v1/signal/arn%3Aopenstack%3Aheat%3A%3Ae2a84fbdaeb047ae8da4b503f3b69f1f%3Astacks%2Fa%2F9bd57090-8954-48ab-bab9-adf9e1ac70fc%2Fresources%2Fdeployment?Timestamp=2014-03-19T20%3A30%3A59Z&amp;SignatureMethod=HmacSHA256&amp;AWSAccessKeyId=ca3571413e4a49998d580215517b3685&amp;SignatureVersion=2&amp;Signature=w6Iu%2BNbg86mqwSOUf1GLuKPO7KaD82PiGpL4ig9Q1l4%3D",
                    "description": "ID of signal to use for signalling output values"
                }
            ],
            "group": "script",
            "name": "a-config-we5zpvyu7b5o",
            "outputs": [
                {
                    "type": "String",
                    "name": "result",
                    "error_output": false,
                    "description": null
                }
            ],
            "options": null,
            "creation_time": "2015-01-31T15:12:36Z",
            "updated_time": "2015-01-31T15:18:21Z",
            "config": "#!/bin/sh -x\necho \"Writing to /tmp/$bar\"\necho $foo &gt; /tmp/$bar\necho -n \"The file /tmp/$bar contains `cat /tmp/$bar` for server $deploy_server_id during $deploy_action\" &gt; $heat_outputs_path.result\necho \"Written to /tmp/$bar\"\necho \"Output to stderr\" 1&gt;&amp;2",
            "id": "3d5ec2a8-7004-43b6-a7f6-542bdbe9d434"
        },
        {
            "inputs": [
                {
                    "default": null,
                    "type": "String",
                    "name": "foo",
                    "value": "fu",
                    "description": null
                },
                {
                    "default": null,
                    "type": "String",
                    "name": "bar",
                    "value": "barmy",
                    "description": null
                },
                {
                    "type": "String",
                    "name": "deploy_server_id",
                    "value": "ec14c864-096e-4e27-bb8a-2c2b4dc6f3f5",
                    "description": "ID of the server being deployed to"
                },
                {
                    "type": "String",
                    "name": "deploy_action",
                    "value": "CREATE",
                    "description": "Name of the current action being deployed"
                },
                {
                    "type": "String",
                    "name": "deploy_stack_id",
                    "value": "a/9bd57090-8954-48ab-bab9-adf9e1ac70fc",
                    "description": "ID of the stack this deployment belongs to"
                },
                {
                    "type": "String",
                    "name": "deploy_resource_name",
                    "value": "other_deployment",
                    "description": "Name of this deployment resource in the stack"
                },
                {
                    "type": "String",
                    "name": "deploy_signal_id",
                    "value": "http://192.168.20.103:8000/v1/signal/arn%3Aopenstack%3Aheat%3A%3Ae2a84fbdaeb047ae8da4b503f3b69f1f%3Astacks%2Fa%2F9bd57090-8954-48ab-bab9-adf9e1ac70fc%2Fresources%2Fother_deployment?Timestamp=2014-03-19T20%3A30%3A59Z&amp;SignatureMethod=HmacSHA256&amp;AWSAccessKeyId=7b761482f8254946bcd3d5ccb36fe939&amp;SignatureVersion=2&amp;Signature=giMfv%2BhrAw6y%2FCMKQIQz2IhO5PkAj5%2BfP5YsL6rul3o%3D",
                    "description": "ID of signal to use for signalling output values"
                }
            ],
            "group": "script",
            "name": "a-config-we5zpvyu7b5o",
            "outputs": [
                {
                    "type": "String",
                    "name": "result",
                    "error_output": false,
                    "description": null
                }
            ],
            "options": null,
            "creation_time": "2015-01-31T16:14:13Z",
            "updated_time": "2015-01-31T16:18:19Z",
            "config": "#!/bin/sh -x\necho \"Writing to /tmp/$bar\"\necho $foo &gt; /tmp/$bar\necho -n \"The file /tmp/$bar contains `cat /tmp/$bar` for server $deploy_server_id during $deploy_action\" &gt; $heat_outputs_path.result\necho \"Written to /tmp/$bar\"\necho \"Output to stderr\" 1&gt;&amp;2",
            "id": "8da95794-2ad9-4979-8ae5-739ce314c5cd"
        }
    ]
}
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>
         </method>
      </resource>
                     
                     
                  
            <resource id="service_list" path="/v1/{tenant_id}/services">
         <param name="tenant_id" style="template" rax:id="">
            <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <para>
                  The ID of the tenant. A tenant is also known as an account
                  or project.
               </para>
            </wadl:doc>
            </param>
         <method name="GET" rax:id="service_status_list">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
                      xml:lang="EN"
                      title="Show orchestration engine status">
               <para role="shortdesc">
            Enables administrative users to view details for all orchestration
            engines.
         </para>
               <para>
            Orchestration engine details include <code>engine_id</code>, topic
            name, last updated time, health status, and host name.
         </para>
               <para>Troubleshooting</para>
               <itemizedlist>
                  <listitem>
                     <para>
                  A <code>503</code> error code indicates that the heat
                  engines are not operational. Run the <command>heat-manage
                  service list</command> command or contact your cloud
                  provider to determine why the heat engines are not
                  operational.
               </para>
                  </listitem>
               </itemizedlist>
            </wadl:doc>
            <response status="200">
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <xsdxt:code>
                        <programlisting language="javascript">{
    "services": [
        {
            "status": "up",
            "binary": "heat-engine",
            "report_interval": 60,
            "engine_id": "9d9242c3-4b9e-45e1-9e74-7615fbf20e5d",
            "created_at": "2015-02-03T05:55:59.000000",
            "hostname": "mrkanag",
            "updated_at": "2015-02-03T05:57:59.000000",
            "topic": "engine",
            "host": "engine-1",
            "deleted_at": null,
            "id": "e1908f44-42f9-483f-b778-bc814072c33d"
        },
        {
            "status": "down",
            "binary": "heat-engine",
            "report_interval": 60,
            "engine_id": "2d2434bf-adb6-4453-9c6b-b22fb8bd2306",
            "created_at": "2015-02-03T06:03:14.000000",
            "hostname": "mrkanag",
            "updated_at": "2015-02-03T06:09:55.000000",
            "topic": "engine",
            "host": "engine",
            "deleted_at": null,
            "id": "582b5657-6db7-48ad-8483-0096350faa21"
        }
    ]
}
</programlisting>
                     </xsdxt:code>
                  </wadl:doc>
               </representation>
            </response>
            <response status="503">
               <representation mediaType="application/text">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <para role="shortdesc">
                  All Orchestration engines are not operational.
               </para>
                  </wadl:doc>
               </representation>
            </response>
            <response status="403">
               <representation mediaType="application/text">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                     <para role="shortdesc">
                  You are not authorized to complete this action.
               </para>
                  </wadl:doc>
            
                  <param name="status"
                         style="plain"
                         required="true"
                         type="xsd:string"
                         rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      The status of the heat engine.
    </para>
                     </wadl:doc>
                  </param>
                  <param name="binary"
                         style="plain"
                         required="true"
                         type="xsd:string"
                         rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      The name of the binary form of the heat engine.
    </para>
                     </wadl:doc>
                  </param>
                  <param name="report_interval"
                         style="plain"
                         required="true"
                         type="xsd:int"
                         rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      The polling interval, in seconds. The API reports events at this
      interval until heat engine creation completes.
    </para>
                     </wadl:doc>
                  </param>

                  <param name="created_at"
                         style="plain"
                         required="true"
                         type="xsd:dateTime"
                         rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
            The date and time when the resource was created.
        </para>
                        <para>
            The date and time stamp format is <link xlink:href="https://en.wikipedia.org/wiki/ISO_8601">ISO 8601</link>:
        </para>
                        <programlisting>CCYY-MM-DDThh:mm:ss±hh:mm</programlisting>
                        <para>
            For example, <code>2015-08-27T09:49:58-05:00</code>.
        </para>
                        <para>
            The <code>±hh:mm</code> value, if included, is the time zone as an
            offset from UTC.
        </para>
                     </wadl:doc>
                  </param>
                  <param name="hostname"
                         style="plain"
                         required="true"
                         type="xsd:string"
                         rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      The name of the host for the service.
    </para>
                     </wadl:doc>
                  </param>

                  <param name="updated_at"
                         style="plain"
                         required="true"
                         type="xsd:dateTime"
                         rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
            The date and time when the resource was updated.
        </para>
                        <para>
            The date and time stamp format is <link xlink:href="https://en.wikipedia.org/wiki/ISO_8601">ISO 8601</link>:
        </para>
                        <programlisting>CCYY-MM-DDThh:mm:ss±hh:mm</programlisting>
                        <para>
            For example, <code>2015-08-27T09:49:58-05:00</code>.
        </para>
                        <para>
            The <code>±hh:mm</code> value, if included, is the time zone as an
            offset from UTC. In the previous example, the offset value is
            <code>-05:00</code>.
        </para>
                        <para>
            If the <code>updated_at</code> date and time stamp is not set, its value is
            <code>null</code>.
        </para>
                     </wadl:doc>
                  </param>
                  <param name="topic"
                         style="plain"
                         required="true"
                         type="xsd:string"
                         rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      The topic of the heat engine.
    </para>
                     </wadl:doc>
                  </param>

                  <param name="deleted_at"
                         style="plain"
                         required="true"
                         type="xsd:dateTime"
                         rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
            The date and time when the resource was deleted.
        </para>
                        <para>
            The date and time stamp format is <link xlink:href="https://en.wikipedia.org/wiki/ISO_8601">ISO 8601</link>:
        </para>
                        <programlisting>CCYY-MM-DDThh:mm:ss±hh:mm</programlisting>
                        <para>
            For example, <code>2015-08-27T09:49:58-05:00</code>.
        </para>
                        <para>
            The <code>±hh:mm</code> value, if included, is the time zone as an
            offset from UTC. In the previous example, the offset value is
            <code>-05:00</code>.
        </para>
                     </wadl:doc>
                  </param>
                  <param name="id"
                         style="plain"
                         required="true"
                         type="csapi:UUID"
                         rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      The UUID of the heat engine.
    </para>
                     </wadl:doc>
                  </param>
                  <param name="services"
                         style="plain"
                         required="true"
                         type="xsd:list"
                         rax:id="">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                        <para>
      A list of heat engines.
    </para>
                     </wadl:doc>
                  </param>
               </representation>
            </response>
         </method>
      </resource>
               
            
   </resources>
   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/orchestration/api/v1.0"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="GET"
           id="listVersions-heat-v1">
      
      <response status="200">
         <representation mediaType="application/json">
            
         </representation>
      </response>
   </method>
   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/orchestration/api/v1.0"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="GET"
           id="stack_list">
      
      <request>
         <representation mediaType="application/json">
            <param name="id" style="query" required="false" rax:id="">
            
            </param>
            <param name="status" style="query" required="false" rax:id="">
            
            </param>
            <param name="name" style="query" required="false" rax:id="">
            
            </param>
            <param name="action" style="query" required="false" rax:id="">
            
            </param>
            <param name="tenant" style="query" required="false" rax:id="">
            
            </param>
            <param name="username" style="query" required="false" rax:id="">
            
            </param>
            <param name="owner_id" style="query" required="false" rax:id="">
            
            </param>
            

            <param name="limit"
                   style="query"
                   required="false"
                   type="xsd:int"
                   rax:id="">
    
</param>

            <param name="marker"
                   style="query"
                   required="false"
                   type="xsd:string"
                   rax:id="">
    
</param>
            <param name="show_deleted" style="query" required="false" rax:id="">
            
            </param>
            <param name="show_nested" style="query" required="false" rax:id="">
            
            </param>
            <param name="sort_keys" style="query" required="false" rax:id="">
            
            </param>
            <param name="tags" style="query" required="false" rax:id="">
            
            </param>
            <param name="tags_any" style="query" required="false" rax:id="">
            
            </param>
            <param name="not_tags" style="query" required="false" rax:id="">
            
            </param>
            <param name="not_tags_any" style="query" required="false" rax:id="">
            
            </param>
            
            <param name="sort_dir" style="query" required="false" rax:id="">

</param> 
            <param name="global_tenant" style="query" required="false" rax:id="">
               
            </param>
            <param name="with_count" style="query" required="false" rax:id="">
               
            </param>
         </representation>
      </request>
      <response status="200">
         <representation mediaType="application/json">
            
         </representation>
      </response>
      
      <response status="400">

</response>
      <response status="401">

</response> 
      
      <response status="500">

</response>
   </method>
   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/orchestration/api/v1.0"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="POST"
           id="stack_create">
      
      <request>
         <representation mediaType="application/json">
            
            <param name="stack_name" style="plain" required="true" rax:id="">
            
            </param>
            
            <param name="template_url" style="plain" required="false" rax:id="">

</param>
            
            <param name="template" style="plain" required="false" rax:id="">

</param>
            
            <param name="files" style="plain" required="false" rax:id="">

</param> 
            
            <param name="parameters" style="plain" required="false" rax:id="">

</param>
            
            <param name="tags" style="plain" required="false" rax:id="">

</param> 
            <param name="timeout_mins" style="plain" required="false" rax:id="">
            
            </param>
         </representation>
      </request>
      <response status="201">
         <representation mediaType="application/json">
            
            <param name="stack_name" style="plain" required="true" rax:id="">
            
            </param>
            <param name="template_url" style="plain" required="true" rax:id="">
            
            </param>
            <param name="template" style="plain" required="true" rax:id="">
            
            </param>
            
            <param name="environment" style="plain" required="false" rax:id="">

</param>
            <param name="files" style="plain" required="false" rax:id="">
            
            </param>
            
            <param name="param_name-n" style="plain" required="false" rax:id="">
   
</param> 
            
            <param name="param_value-n" style="plain" required="false" rax:id="">

</param> 
            <param name="timeout_mins" style="plain" required="false" rax:id="">
            
            </param>
            <param name="disable_rollback"
                   style="plain"
                   required="false"
                   rax:id="">
            
            </param>
            <param name="stack_id" style="plain" required="true" rax:id="">
            
            </param>
            <param name="links" style="plain" required="true" rax:id="">
            
            </param>
            <param name="rel" style="plain" required="true" rax:id="">
            
            </param>
         </representation>
      </response>
      
      <response status="400">

</response>
      <response status="401">

</response> 
      
      <response status="409">

</response> 
      
      <response status="500">

</response>
   </method>
   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/orchestration/api/v1.0"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="POST"
           id="stack_preview">
      
      <request>
         <representation mediaType="application/json">
            
            <param name="stack_name" style="plain" required="true" rax:id="">
            
            </param>
            
            <param name="template_url" style="plain" required="false" rax:id="">

</param>
            
            <param name="template" style="plain" required="false" rax:id="">

</param>
            
            <param name="files" style="plain" required="false" rax:id="">

</param> 
            
            <param name="parameters" style="plain" required="false" rax:id="">

</param>
         </representation>
      </request>
      <response status="200">
         <representation mediaType="application/json">
            
            <param name="parent" style="plain" required="true" rax:id="">
            
            </param>
            <param name="id" style="plain" required="true" rax:id="">
            
            </param>
            <param name="stack_name" style="plain" required="true" rax:id="">
            
            </param>
            <param name="description" style="plain" required="true" rax:id="">
            
            </param>
            <param name="template_description"
                   style="plain"
                   required="true"
                   rax:id="">
            
            </param>
            <param name="timeout_mins" style="plain" required="true" rax:id="">
            
            </param>
            <param name="disable_rollback" style="plain" required="true" rax:id="">
            
            </param>
            <param name="capabilities" style="plain" required="true" rax:id="">
            
            </param>
            <param name="notification_topics"
                   style="plain"
                   required="true"
                   rax:id="">
            
            </param>
            <param name="updated_time" style="plain" required="true" rax:id="">
            
            </param>
            <param name="stack_owner" style="plain" required="true" rax:id="">
            
            </param>
            <param name="parameters" style="plain" required="true" rax:id="">
            
            </param>
            <param name="resources" style="plain" required="true" rax:id="">
            
            </param>
         </representation>
      </response>
      
      <response status="400">

</response>
      <response status="401">

</response> 
      
      <response status="409">

</response> 
      
      <response status="500">

</response>
   </method>
   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/orchestration/api/v1.0"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="POST"
           id="stack_adopt">
      
      <request>
         <representation mediaType="application/json">
            
            <param name="stack_name" style="plain" required="true" rax:id="">
            
            </param>
            
            <param name="template_url" style="plain" required="false" rax:id="">

</param>
            
            <param name="template" style="plain" required="false" rax:id="">

</param>
            
            <param name="environment" style="plain" required="false" rax:id="">

</param>
            
            <param name="files" style="plain" required="false" rax:id="">

</param> 
            
            <param name="parameters" style="plain" required="false" rax:id="">

</param>
            <param name="timeout_mins" style="plain" required="false" rax:id="">
            
            </param>
            <param name="adopt_stack_data" style="plain" required="true" rax:id="">
            
            </param>
            <param name="disable_rollback"
                   style="plain"
                   required="false"
                   rax:id="">
            
            </param>
         </representation>
      </request>
      <response status="201">
         <representation mediaType="application/json">
            
         </representation>
      </response>
      
      <response status="400">

</response>
      <response status="401">

</response> 
      
      <response status="409">

</response> 
      
      <response status="500">

</response>
   </method>
   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/orchestration/api/v1.0"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="POST"
           id="stack_action_suspend">
      
      <request>
         <representation mediaType="application/json">
            
            <param name="suspend" style="plain" required="true" rax:id="">
            
            </param>
         </representation>
      </request>
      <response status="200"/>
   </method>
   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/orchestration/api/v1.0"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="POST"
           id="stack_action_resume">
      
      <request>
         <representation mediaType="application/json">
            
            <param name="resume" style="plain" required="true" rax:id="">
            
            </param>
         </representation>
      </request>
      <response status="200"/>
   </method>
   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/orchestration/api/v1.0"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="POST"
           id="stack_action_cancel_update">
      
      <request>
         <representation mediaType="application/json">
            
            <param name="cancel_update" style="plain" required="true" rax:id="">
            
            </param>
         </representation>
      </request>
      <response status="201"/>
   </method>
   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/orchestration/api/v1.0"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="POST"
           id="stack_action_check">
      
      <request>
         <representation mediaType="application/json">
            
            <param name="check" style="plain" required="true" rax:id="">
            
            </param>
         </representation>
      </request>
      <response status="201"/>
   </method>
   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/orchestration/api/v1.0"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="GET"
           id="stack_find">
      
      <response status="302">
         <representation mediaType="application/json">
            
         </representation>
      </response>
      
      <response status="400">

</response>
      <response status="401">

</response> 
      
      <response status="404">

</response> 
      
      <response status="500">

</response>
   </method>
   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/orchestration/api/v1.0"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="GET"
           id="stack_show">
      
      <response status="200">
         <representation mediaType="application/json">
            
            
            <param name="capabilities"
                   style="plain"
                   required="true"
                   type="xsd:list"
                   rax:id="">
  
</param>
            <param name="creation_time"
                   style="plain"
                   required="true"
                   type="xsd:dateTime"
                   rax:id="">
  
</param>
            <param name="description"
                   style="plain"
                   required="true"
                   type="xsd:string"
                   rax:id="">
  
</param>
            <param name="id"
                   style="plain"
                   required="true"
                   type="csapi:UUID"
                   rax:id="">
  
</param>
            <param name="links"
                   style="plain"
                   required="true"
                   type="xsd:list"
                   rax:id="">
  
</param>
            <param name="notification_topics"
                   style="plain"
                   required="true"
                   type="xsd:list"
                   rax:id="">
  
</param>
            <param name="outputs"
                   style="plain"
                   required="true"
                   type="xsd:list"
                   rax:id="">
  
</param>
            <param name="parameters"
                   style="plain"
                   required="true"
                   type="xsd:dict"
                   rax:id="">
  
</param>
            <param name="stack_name"
                   style="plain"
                   required="true"
                   type="xsd:string"
                   rax:id="">
  
</param>
            <param name="stack_owner"
                   style="plain"
                   required="true"
                   type="xsd:string"
                   rax:id="">
  
</param>
            <param name="stack_status"
                   style="plain"
                   required="true"
                   type="xsd:string"
                   rax:id="">
  
</param>
            <param name="stack_status_reason"
                   style="plain"
                   required="true"
                   type="xsd:string"
                   rax:id="">
  
</param>
            <param name="template_description"
                   style="plain"
                   required="true"
                   type="xsd:string"
                   rax:id="">
  
</param>
            <param name="stack_user_project_id"
                   style="plain"
                   required="true"
                   type="csapi:UUID"
                   rax:id="">
  
</param>
            <param name="timeout_mins"
                   style="plain"
                   required="true"
                   type="xsd:string"
                   rax:id="">
  
</param>
            <param name="updated_time"
                   style="plain"
                   required="true"
                   type="xsd:dateTime"
                   rax:id="">
  
</param>
            <param name="parent"
                   style="plain"
                   required="true"
                   type="xsd:string"
                   rax:id="">
  
</param>
            <param name="tags"
                   style="plain"
                   required="true"
                   type="xsd:string"
                   rax:id="">
  
</param>
         </representation>
      </response>
      
      <response status="400">

</response>
      <response status="401">

</response> 
      
      <response status="404">

</response> 
      
      <response status="500">

</response>
   </method>
   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/orchestration/api/v1.0"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="GET"
           id="stack_template">
      
      <response status="200">
        <representation mediaType="application/json">
          
          
            <param name="description"
                   style="plain"
                   required="true"
                   type="xsd:string"
                   rax:id="">
  
</param>
            <param name="heat_template_version"
                   style="plain"
                   required="true"
                   type="xsd:string"
                   rax:id="">
  
</param>
            <param name="outputs"
                   style="plain"
                   required="true"
                   type="xsd:dict"
                   rax:id="">
  
</param>
            <param name="parameters"
                   style="plain"
                   required="true"
                   type="xsd:dict"
                   rax:id="">
  
</param>
            <param name="resources"
                   style="plain"
                   required="true"
                   type="xsd:dict"
                   rax:id="">
  
</param>
        </representation>
      </response>
      
      <response status="400">

</response>
      <response status="401">

</response> 
      
      <response status="404">

</response> 
      
      <response status="500">

</response>
   </method>
   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/orchestration/api/v1.0"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="PUT"
           id="stack_update">
      
      <request>
         <representation mediaType="application/json">
            
            
            <param name="template_url" style="plain" required="false" rax:id="">

</param>
            
            <param name="template" style="plain" required="false" rax:id="">

</param>
            
            <param name="environment" style="plain" required="false" rax:id="">

</param>
            
            <param name="files" style="plain" required="false" rax:id="">

</param> 
            
            <param name="tags" style="plain" required="false" rax:id="">

</param> 
            <param name="parameters" style="plain" required="false" rax:id="">
            
            </param>
            <param name="timeout_mins" style="plain" required="false" rax:id="">
            
            </param>
         </representation>
      </request>
      <response status="202"/>
      
      <response status="400">

</response>
      <response status="401">

</response> 
      
      <response status="404">

</response> 
      
      <response status="500">

</response>
   </method>
   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/orchestration/api/v1.0"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="PUT"
           id="stack_update_preview">
      
      <request>
         <representation mediaType="application/json">
            
            
            <param name="template_url" style="plain" required="false" rax:id="">

</param>
            
            <param name="template" style="plain" required="false" rax:id="">

</param>
            
            <param name="environment" style="plain" required="false" rax:id="">

</param>
            
            <param name="files" style="plain" required="false" rax:id="">

</param> 
            
            <param name="tags" style="plain" required="false" rax:id="">

</param> 
            <param name="parameters" style="plain" required="false" rax:id="">
               
             </param>
             <param name="timeout_mins" style="plain" required="false" rax:id="">
             
             </param>
          </representation>
       </request>
       <response status="200">
           <representation mediaType="application/json">
               
           </representation>
       </response>
   </method>
   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/orchestration/api/v1.0"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="DELETE"
           id="stack_delete">
      
      <response status="204"/>
      
      <response status="400">

</response>
      <response status="401">

</response> 
      
      <response status="404">

</response> 
      
      <response status="500">

</response>
   </method>
   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/orchestration/api/v1.0"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="DELETE"
           id="stack_abandon">
      
      <response status="200">
         <representation mediaType="application/json">
            
         </representation>
      </response>
      
      <response status="400">

</response>
      <response status="401">

</response> 
      
      <response status="404">

</response> 
      
      <response status="500">

</response>
   </method>
   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/orchestration/api/v1.0"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="POST"
           id="stack_snapshot">
      
      <request>
         <representation mediaType="application/json">
            
            <param name="name" style="plain" required="true" rax:id="">
            
            </param>
         </representation>
      </request>
      <response status="200">
         <representation mediaType="application/json">
            
         </representation>
      </response>
   </method>
   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/orchestration/api/v1.0"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="GET"
           id="stack_list_snapshot">
      
      <response status="200">
         <representation mediaType="application/json">
            
            
            <param name="snapshots"
                   style="plain"
                   required="true"
                   type="xsd:list"
                   rax:id="">
  
</param>
            
            <param name="id"
                   style="plain"
                   required="true"
                   type="csapi:UUID"
                   rax:id="">
  
</param>
            <param name="name"
                   style="plain"
                   required="true"
                   type="xsd:string"
                   rax:id="">
  
</param>
            <param name="status"
                   style="plain"
                   required="true"
                   type="xsd:string"
                   rax:id="">
  
</param>
            <param name="status_reason"
                   style="plain"
                   required="true"
                   type="xsd:string"
                   rax:id="">
  
</param>
            <param name="creation_time"
                   style="plain"
                   required="true"
                   type="xsd:dateTime"
                   rax:id="">
  
</param>
            <param name="data"
                   style="plain"
                   required="true"
                   type="xsd:dict"
                   rax:id="">
  
</param>
         </representation>
      </response>
   </method>
   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/orchestration/api/v1.0"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="GET"
           id="stack_show_snapshot">
      
      <response status="200">
         <representation mediaType="application/json">
            
            
            <param name="snapshot"
                   style="plain"
                   required="true"
                   type="xsd:dict"
                   rax:id="">
  
</param>
            <param name="project_id"
                   style="plain"
                   required="true"
                   type="csapi:UUID"
                   rax:id="">
  
</param>
            <param name="resources"
                   style="plain"
                   required="true"
                   type="xsd:dict"
                   rax:id="">
  
</param>
            <param name="template"
                   style="plain"
                   required="true"
                   type="xsd:dict"
                   rax:id="">
  
</param>
            
            <param name="id"
                   style="plain"
                   required="true"
                   type="csapi:UUID"
                   rax:id="">
  
</param>
            <param name="name"
                   style="plain"
                   required="true"
                   type="xsd:string"
                   rax:id="">
  
</param>
            <param name="status"
                   style="plain"
                   required="true"
                   type="xsd:string"
                   rax:id="">
  
</param>
            <param name="status_reason"
                   style="plain"
                   required="true"
                   type="xsd:string"
                   rax:id="">
  
</param>
            <param name="creation_time"
                   style="plain"
                   required="true"
                   type="xsd:dateTime"
                   rax:id="">
  
</param>
            <param name="data"
                   style="plain"
                   required="true"
                   type="xsd:dict"
                   rax:id="">
  
</param>
         </representation>
      </response>
   </method>
   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/orchestration/api/v1.0"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="POST"
           id="stack_restore_snapshot">
      
      <response status="202"/>
   </method>
   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/orchestration/api/v1.0"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="DELETE"
           id="stack_delete_snapshot">
      
      <response status="204"/>
   </method>
   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/orchestration/api/v1.0"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="GET"
           id="stack_list_outputs">
      
      <response status="200">
         <representation mediaType="application/json">
         
         </representation>
      </response>
   </method>
   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/orchestration/api/v1.0"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="GET"
           id="stack_show_output">
      
      <response status="200">
         <representation mediaType="application/json">
            
         </representation>
      </response>
   </method>
   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/orchestration/api/v1.0"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="POST"
           id="template_validate">
      
      <request>
         <representation mediaType="application/json">
            
            
            <param name="template_url" style="plain" required="false" rax:id="">

</param>
            
            <param name="template" style="plain" required="false" rax:id="">

</param>
            
            <param name="environment" style="plain" required="false" rax:id="">

</param>
          </representation>
      </request>
      <response status="200">
         <representation mediaType="application/json">
            
            <param name="Description" style="plain" required="true" rax:id="">
               
            </param>
            <param name="Parameters"
                   style="plain"
                   type="object"
                   required="true"
                   rax:id="">
            
            </param>
            <param name="ParameterGroups"
                   style="plain"
                   type="list"
                   required="false"
                   rax:id="">
            
            </param>
          </representation>
      </response>
      </method>
      <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/orchestration/api/v1.0"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="GET"
           id="template_version_list">
      
      <response status="200">
         <representation mediaType="application/json">
            
         </representation>
      </response>
      
      <response status="400">

</response>
      <response status="401">

</response> 
      
      <response status="404">

</response> 
      
      <response status="500">

</response>
   </method>
   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/orchestration/api/v1.0"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="GET"
           id="resource_type_list">
      
      <request>
         <representation mediaType="application/json">
            <param name="name" style="query" required="false" rax:id="">
               
            </param>
            <param name="version" style="query" required="false" rax:id="">
               
            </param>
            <param name="support_status" style="query" required="false" rax:id="">
               
            </param>
         </representation>
      </request>
      <response status="200">
         <representation mediaType="application/json">
           
         </representation>
      </response>
      
      <response status="400">

</response>
      <response status="401">

</response> 
   </method>
   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/orchestration/api/v1.0"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="GET"
           id="resource_type_get">
      
      <response status="200">
         <representation mediaType="application/json">
            
            
            <param name="description"
                   style="plain"
                   required="true"
                   type="xsd:string"
                   rax:id="">
  
</param>
            <param name="heat_template_version"
                   style="plain"
                   required="true"
                   type="xsd:string"
                   rax:id="">
  
</param>
            <param name="outputs"
                   style="plain"
                   required="true"
                   type="xsd:dict"
                   rax:id="">
  
</param>
            <param name="parameters"
                   style="plain"
                   required="true"
                   type="xsd:dict"
                   rax:id="">
  
</param>
            <param name="resources"
                   style="plain"
                   required="true"
                   type="xsd:dict"
                   rax:id="">
  
</param>
         </representation>
      </response>
      
      <response status="400">

</response>
      <response status="401">

</response> 
   </method>
   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/orchestration/api/v1.0"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="GET"
           id="resource_type_template">
      
      <response status="200">
        <representation mediaType="application/json">
          
        </representation>
      </response>
      
      <response status="400">

</response>
      <response status="401">

</response> 
      
      <response status="404">

</response> 
   </method>
   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/orchestration/api/v1.0"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="GET"
           id="stack_resources_find">
      
      <response status="302">
        <representation mediaType="application/json">
          
        </representation>
      </response>
   </method>
   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/orchestration/api/v1.0"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="GET"
           id="resource_list">
      
      <request>
         <representation mediaType="application/json">
            <param name="nested_depth" style="query" required="false" rax:id="">
            
            </param>
            <param name="with_detail" style="query" required="false" rax:id="">
            
            </param>
         </representation>
      </request>
      <response status="200">
        <representation mediaType="application/json">
          
          
            <param name="resources"
                   style="plain"
                   required="true"
                   type="xsd:list"
                   rax:id="">
  
</param>
          
            <param name="resource"
                   style="plain"
                   required="true"
                   type="xsd:dict"
                   rax:id="">
  
</param>
            <param name="creation_time"
                   style="plain"
                   required="true"
                   type="xsd:dateTime"
                   rax:id="">
  
</param>
            <param name="description"
                   style="plain"
                   required="true"
                   type="xsd:string"
                   rax:id="">
  
</param>
            <param name="logical_resource_id"
                   style="plain"
                   required="true"
                   type="xsd:string"
                   rax:id="">
  
</param>
            <param name="physical_resource_id"
                   style="plain"
                   required="true"
                   type="xsd:string"
                   rax:id="">
  
</param>
            <param name="required_by"
                   style="plain"
                   required="true"
                   type="xsd:list"
                   rax:id="">
  
</param>
            <param name="resource_name"
                   style="plain"
                   required="true"
                   type="xsd:string"
                   rax:id="">
  
</param>
            <param name="resource_status"
                   style="plain"
                   required="true"
                   type="xsd:string"
                   rax:id="">
  
</param>
            <param name="resource_status_reason"
                   style="plain"
                   required="true"
                   type="xsd:string"
                   rax:id="">
  
</param>
            <param name="resource_type"
                   style="plain"
                   required="true"
                   type="xsd:string"
                   rax:id="">
  
</param>
            <param name="updated_time"
                   style="plain"
                   required="true"
                   type="xsd:dateTime"
                   rax:id="">
  
</param>
        </representation>
      </response>
      
      <response status="400">

</response>
      <response status="401">

</response> 
      
      <response status="404">

</response> 
   </method>
   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/orchestration/api/v1.0"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="GET"
           id="resource_show">
      
      <response status="200">
        <representation mediaType="application/json">
          
          
            <param name="resource"
                   style="plain"
                   required="true"
                   type="xsd:dict"
                   rax:id="">
  
</param>
            <param name="creation_time"
                   style="plain"
                   required="true"
                   type="xsd:dateTime"
                   rax:id="">
  
</param>
            <param name="description"
                   style="plain"
                   required="true"
                   type="xsd:string"
                   rax:id="">
  
</param>
            <param name="logical_resource_id"
                   style="plain"
                   required="true"
                   type="xsd:string"
                   rax:id="">
  
</param>
            <param name="physical_resource_id"
                   style="plain"
                   required="true"
                   type="xsd:string"
                   rax:id="">
  
</param>
            <param name="required_by"
                   style="plain"
                   required="true"
                   type="xsd:list"
                   rax:id="">
  
</param>
            <param name="resource_name"
                   style="plain"
                   required="true"
                   type="xsd:string"
                   rax:id="">
  
</param>
            <param name="resource_status"
                   style="plain"
                   required="true"
                   type="xsd:string"
                   rax:id="">
  
</param>
            <param name="resource_status_reason"
                   style="plain"
                   required="true"
                   type="xsd:string"
                   rax:id="">
  
</param>
            <param name="resource_type"
                   style="plain"
                   required="true"
                   type="xsd:string"
                   rax:id="">
  
</param>
            <param name="updated_time"
                   style="plain"
                   required="true"
                   type="xsd:dateTime"
                   rax:id="">
  
</param>
        </representation>
      </response>
      
      <response status="400">

</response>
      <response status="401">

</response> 
      
      <response status="404">

</response> 
   </method>
   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/orchestration/api/v1.0"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="GET"
           id="resource_metadata">
      
      <response status="200">
         <representation mediaType="application/json">
            
         </representation>
      </response>
   </method>
   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/orchestration/api/v1.0"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="POST"
           id="resource_signal">
      
      <response status="200"/>
   </method>
   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/orchestration/api/v1.0"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="GET"
           id="stack_events_find">
      
      <response status="302"/>
   </method>
   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/orchestration/api/v1.0"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="GET"
           id="stack_event_list">
      
      <request>
         <representation mediaType="application/json">
            <param name="resource_action" style="query" required="false" rax:id="">
            
            </param>
            <param name="resource_status" style="query" required="false" rax:id="">
            
            </param>
            <param name="resource_name" style="query" required="false" rax:id="">
            
            </param>
            <param name="resource_type" style="query" required="false" rax:id="">
            
            </param>
            

            <param name="limit"
                   style="query"
                   required="false"
                   type="xsd:int"
                   rax:id="">
    
</param>

            <param name="marker"
                   style="query"
                   required="false"
                   type="xsd:string"
                   rax:id="">
    
</param>
            
            <param name="sort_keys" style="query" required="false" rax:id="">

</param> 
            
            <param name="sort_dir" style="query" required="false" rax:id="">

</param> 
         </representation>
      </request>
      <response status="200">
         <representation mediaType="application/json">
            
         </representation>
      </response>
      
      <response status="400">

</response>
      <response status="401">

</response> 
      
      <response status="404">

</response> 
      
      <response status="500">

</response>
   </method>
   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/orchestration/api/v1.0"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="GET"
           id="resource_event_list">
      
      <request>
         <representation mediaType="application/json">
            <param name="resource_action" style="query" required="false" rax:id="">
            
            </param>
            <param name="resource_status" style="query" required="false" rax:id="">
            
            </param>
            <param name="resource_type" style="query" required="false" rax:id="">
            
            </param>
            

            <param name="limit"
                   style="query"
                   required="false"
                   type="xsd:int"
                   rax:id="">
    
</param>

            <param name="marker"
                   style="query"
                   required="false"
                   type="xsd:string"
                   rax:id="">
    
</param>
            
            <param name="sort_keys" style="query" required="false" rax:id="">

</param> 
            
            <param name="sort_dir" style="query" required="false" rax:id="">

</param> 
         </representation>
      </request>
      <response status="200">
         <representation mediaType="application/json">
            
         </representation>
      </response>
      
      <response status="400">

</response>
      <response status="401">

</response> 
      
      <response status="404">

</response> 
   </method>
   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/orchestration/api/v1.0"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="GET"
           id="event_show">
      
      <response status="200">
         <representation mediaType="application/json">
            
         </representation>
      </response>
   </method>
   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/orchestration/api/v1.0"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="GET"
           id="build_info_show">
      
      <response status="200">
         <representation mediaType="application/json">
            
         </representation>
      </response>
   </method>
   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/orchestration/api/v1.0"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="POST"
           id="software_config_create">
      
      <request>
         <representation mediaType="application/json">
            
            <param name="config" style="plain" required="false" rax:id="">
            
            </param>
            <param name="group" style="plain" required="false" rax:id="">
            
            </param>
            <param name="name" style="plain" required="false" rax:id="">
            
            </param>
            <param name="inputs" style="plain" required="false" rax:id="">
            
            </param>
            <param name="outputs" style="plain" required="false" rax:id="">
            
            </param>
            <param name="options" style="plain" required="false" rax:id="">
            
            </param>
         </representation>
      </request>
      <response status="200">
         <representation mediaType="application/json">
            
            
            <param name="inputs"
                   style="plain"
                   required="true"
                   type="xsd:list"
                   rax:id="">
  
</param>
            <param name="name"
                   style="plain"
                   required="true"
                   type="xsd:string"
                   rax:id="">
  
</param>
            <param name="outputs"
                   style="plain"
                   required="true"
                   type="xsd:list"
                   rax:id="">
  
</param>
            <param name="creation_time"
                   style="plain"
                   required="true"
                   type="xsd:dateTime"
                   rax:id="">
  
</param>
            <param name="group"
                   style="plain"
                   required="true"
                   type="xsd:string"
                   rax:id="">
  
</param>
            <param name="config"
                   style="plain"
                   required="true"
                   type="xsd:string"
                   rax:id="">
  
</param>
            <param name="options"
                   style="plain"
                   required="true"
                   type="xsd:string"
                   rax:id="">
  
</param>
         </representation>
      </response>
      
      <response status="400">

</response>
      <response status="401">

</response> 
      
      <response status="404">

</response> 
   </method>
   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/orchestration/api/v1.0"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="GET"
           id="software_config_show">
      
      <response status="200">
         <representation mediaType="application/json">
            
            
            <param name="inputs"
                   style="plain"
                   required="true"
                   type="xsd:list"
                   rax:id="">
  
</param>
            <param name="name"
                   style="plain"
                   required="true"
                   type="xsd:string"
                   rax:id="">
  
</param>
            <param name="outputs"
                   style="plain"
                   required="true"
                   type="xsd:list"
                   rax:id="">
  
</param>
            <param name="creation_time"
                   style="plain"
                   required="true"
                   type="xsd:dateTime"
                   rax:id="">
  
</param>
            <param name="group"
                   style="plain"
                   required="true"
                   type="xsd:string"
                   rax:id="">
  
</param>
            <param name="config"
                   style="plain"
                   required="true"
                   type="xsd:string"
                   rax:id="">
  
</param>
            <param name="options"
                   style="plain"
                   required="true"
                   type="xsd:string"
                   rax:id="">
  
</param>
         </representation>
      </response>
      
      <response status="400">

</response>
      <response status="401">

</response> 
      
      <response status="404">

</response> 
   </method>
   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/orchestration/api/v1.0"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="DELETE"
           id="software_config_delete">
      
      <response status="204"/>
   </method>
   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/orchestration/api/v1.0"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="GET"
           id="software_deployment_index">
      
      <response status="200">
         <representation mediaType="application/json">
            
            
            <param name="status"
                   style="plain"
                   required="true"
                   type="xsd:string"
                   rax:id="">
  
</param>
            <param name="server_id"
                   style="plain"
                   required="true"
                   type="csapi:UUID"
                   rax:id="">
  
</param>
            <param name="config_id"
                   style="plain"
                   required="true"
                   type="csapi:UUID"
                   rax:id="">
  
</param>
            <param name="output_values"
                   style="plain"
                   required="true"
                   type="xsd:list"
                   rax:id="">
  
</param>
            <param name="input_values"
                   style="plain"
                   required="true"
                   type="xsd:list"
                   rax:id="">
  
</param>
            <param name="action"
                   style="plain"
                   required="true"
                   type="xsd:string"
                   rax:id="">
  
</param>
            <param name="status_reason"
                   style="plain"
                   required="true"
                   type="xsd:string"
                   rax:id="">
  
</param>
            <param name="id"
                   style="plain"
                   required="true"
                   type="csapi:UUID"
                   rax:id="">
  
</param>
            <param name="creation_time"
                   style="plain"
                   required="true"
                   type="xsd:dateTime"
                   rax:id="">
  
</param>

            <param name="updated_at"
                   style="plain"
                   required="true"
                   type="xsd:dateTime"
                   rax:id="">
    
</param>
         </representation>
      </response>
      
      <response status="400">

</response>
      <response status="401">

</response> 
      
      <response status="404">

</response> 
      
      <response status="500">

</response>
   </method>
   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/orchestration/api/v1.0"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="GET"
           id="software_deployment_metadata">
      
      <response status="200">
         <representation mediaType="application/json">
            
         </representation>
      </response>
   </method>
   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/orchestration/api/v1.0"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="POST"
           id="software_deployment_create">
      
      <request>
         <representation mediaType="application/json">
            
            <param name="config_id" style="plain" required="true" rax:id="">
            
            </param>
            <param name="server_id" style="plain" required="true" rax:id="">
            
            </param>
            <param name="action" style="plain" required="true" rax:id="">
            
            </param>
            <param name="stack_user_project_id"
                   style="plain"
                   required="false"
                   rax:id="">
            
            </param>
            <param name="status" style="plain" required="false" rax:id="">
            
            </param>
            <param name="status_reason" style="plain" required="false" rax:id="">
            
            </param>
         </representation>
      </request>
      <response status="200">
         <representation mediaType="application/json">
            
            
            <param name="status"
                   style="plain"
                   required="true"
                   type="xsd:string"
                   rax:id="">
  
</param>
            <param name="server_id"
                   style="plain"
                   required="true"
                   type="csapi:UUID"
                   rax:id="">
  
</param>
            <param name="config_id"
                   style="plain"
                   required="true"
                   type="csapi:UUID"
                   rax:id="">
  
</param>
            <param name="output_values"
                   style="plain"
                   required="true"
                   type="xsd:list"
                   rax:id="">
  
</param>
            <param name="input_values"
                   style="plain"
                   required="true"
                   type="xsd:list"
                   rax:id="">
  
</param>
            <param name="action"
                   style="plain"
                   required="true"
                   type="xsd:string"
                   rax:id="">
  
</param>
            <param name="status_reason"
                   style="plain"
                   required="true"
                   type="xsd:string"
                   rax:id="">
  
</param>
            <param name="id"
                   style="plain"
                   required="true"
                   type="csapi:UUID"
                   rax:id="">
  
</param>
            <param name="creation_time"
                   style="plain"
                   required="true"
                   type="xsd:dateTime"
                   rax:id="">
  
</param>

            <param name="updated_at"
                   style="plain"
                   required="true"
                   type="xsd:dateTime"
                   rax:id="">
    
</param>
         </representation>
      </response>
   </method>
   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/orchestration/api/v1.0"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="GET"
           id="software_deployment_show">
      
      <response status="200">
         <representation mediaType="application/json">
            
            
            <param name="status"
                   style="plain"
                   required="true"
                   type="xsd:string"
                   rax:id="">
  
</param>
            <param name="server_id"
                   style="plain"
                   required="true"
                   type="csapi:UUID"
                   rax:id="">
  
</param>
            <param name="config_id"
                   style="plain"
                   required="true"
                   type="csapi:UUID"
                   rax:id="">
  
</param>
            <param name="output_values"
                   style="plain"
                   required="true"
                   type="xsd:list"
                   rax:id="">
  
</param>
            <param name="input_values"
                   style="plain"
                   required="true"
                   type="xsd:list"
                   rax:id="">
  
</param>
            <param name="action"
                   style="plain"
                   required="true"
                   type="xsd:string"
                   rax:id="">
  
</param>
            <param name="status_reason"
                   style="plain"
                   required="true"
                   type="xsd:string"
                   rax:id="">
  
</param>
            <param name="id"
                   style="plain"
                   required="true"
                   type="csapi:UUID"
                   rax:id="">
  
</param>
            <param name="creation_time"
                   style="plain"
                   required="true"
                   type="xsd:dateTime"
                   rax:id="">
  
</param>

            <param name="updated_at"
                   style="plain"
                   required="true"
                   type="xsd:dateTime"
                   rax:id="">
    
</param>
         </representation>
      </response>
   </method>
   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/orchestration/api/v1.0"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="PUT"
           id="software_deployment_update">
      
      <request>
         <representation mediaType="application/json">
            
            <param name="config_id" style="plain" required="true" rax:id="">
            
            </param>
            <param name="action" style="plain" required="true" rax:id="">
            
            </param>
            <param name="status" style="plain" required="false" rax:id="">
            
            </param>
            <param name="status_reason" style="plain" required="false" rax:id="">
            
            </param>
            <param name="output_values" style="plain" required="false" rax:id="">
            
            </param>
         </representation>
      </request>
      <response status="200">
         <representation mediaType="application/json">
            
            
            <param name="status"
                   style="plain"
                   required="true"
                   type="xsd:string"
                   rax:id="">
  
</param>
            <param name="server_id"
                   style="plain"
                   required="true"
                   type="csapi:UUID"
                   rax:id="">
  
</param>
            <param name="config_id"
                   style="plain"
                   required="true"
                   type="csapi:UUID"
                   rax:id="">
  
</param>
            <param name="output_values"
                   style="plain"
                   required="true"
                   type="xsd:list"
                   rax:id="">
  
</param>
            <param name="input_values"
                   style="plain"
                   required="true"
                   type="xsd:list"
                   rax:id="">
  
</param>
            <param name="action"
                   style="plain"
                   required="true"
                   type="xsd:string"
                   rax:id="">
  
</param>
            <param name="status_reason"
                   style="plain"
                   required="true"
                   type="xsd:string"
                   rax:id="">
  
</param>
            <param name="id"
                   style="plain"
                   required="true"
                   type="csapi:UUID"
                   rax:id="">
  
</param>
            <param name="creation_time"
                   style="plain"
                   required="true"
                   type="xsd:dateTime"
                   rax:id="">
  
</param>

            <param name="updated_at"
                   style="plain"
                   required="true"
                   type="xsd:dateTime"
                   rax:id="">
    
</param>
         </representation>
      </response>
   </method>
   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/orchestration/api/v1.0"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="DELETE"
           id="software_deployment_delete">
      
      <response status="204"/>
   </method>
   <method xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
           xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns:db="http://docbook.org/ns/docbook"
           xmlns:common="http://docs.openstack.org/common/api/v1.0"
           xmlns:csapi="http://docs.openstack.org/orchestration/api/v1.0"
           xmlns:xlink="http://www.w3.org/1999/xlink"
           xmlns="http://wadl.dev.java.net/2009/02"
           name="GET"
           id="service_status_list">
      
      <response status="200">
         <representation mediaType="application/json">
            
         </representation>
      </response>
      <response status="503">
         <representation mediaType="application/text">
            
         </representation>
      </response>
      <response status="403">
         <representation mediaType="application/text">
            
            
            <param name="status"
                   style="plain"
                   required="true"
                   type="xsd:string"
                   rax:id="">
  
</param>
            <param name="binary"
                   style="plain"
                   required="true"
                   type="xsd:string"
                   rax:id="">
  
</param>
            <param name="report_interval"
                   style="plain"
                   required="true"
                   type="xsd:int"
                   rax:id="">
  
</param>

            <param name="created_at"
                   style="plain"
                   required="true"
                   type="xsd:dateTime"
                   rax:id="">
    
</param>
            <param name="hostname"
                   style="plain"
                   required="true"
                   type="xsd:string"
                   rax:id="">
  
</param>

            <param name="updated_at"
                   style="plain"
                   required="true"
                   type="xsd:dateTime"
                   rax:id="">
    
</param>
            <param name="topic"
                   style="plain"
                   required="true"
                   type="xsd:string"
                   rax:id="">
  
</param>

            <param name="deleted_at"
                   style="plain"
                   required="true"
                   type="xsd:dateTime"
                   rax:id="">
    
</param>
            <param name="id"
                   style="plain"
                   required="true"
                   type="csapi:UUID"
                   rax:id="">
  
</param>
            <param name="services"
                   style="plain"
                   required="true"
                   type="xsd:list"
                   rax:id="">
  
</param>
         </representation>
      </response>
   </method>
</wadl:application>
